{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Hamburger from 'hamburger-react';\nimport user from \"./Icons/user.png\";\nimport background from \"./Icons/background.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomePage(_ref) {\n  var text = _ref.text,\n      onPress = _ref.onPress;\n\n  var handlePress = function handlePress() {\n    return console.log(\"text pressed\");\n  };\n\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  return _jsxs(SafeAreaView, {\n    style: styles.body,\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.ProfileBackground,\n        children: _jsx(Image, {\n          source: user,\n          style: styles.ProfileIcon\n        })\n      }), _jsx(Hamburger, {\n        toggled: isOpen,\n        toggle: setOpen\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: onPress\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  body: {\n    width: 390,\n    height: 844,\n    backgroundColor: '#F8F8FF'\n  },\n  backgroundImg: {\n    width: '100%',\n    height: 400\n  },\n  ProfileBackground: {\n    backgroundColor: 'grey',\n    marginLeft: 300,\n    top: 15,\n    width: 50,\n    height: 40,\n    borderRadius: 10\n  },\n  ProfileIcon: {\n    width: 23,\n    height: 27,\n    marginLeft: 14,\n    top: 5\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useNavigation","Hamburger","user","background","HomePage","text","onPress","handlePress","console","log","navigation","isOpen","setOpen","styles","body","container","ProfileBackground","ProfileIcon","StyleSheet","create","width","height","backgroundColor","backgroundImg","marginLeft","top","borderRadius"],"sources":["C:/Users/oplati/InvocieptExpo-1/Cards/Main/HomePage.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Image, SafeAreaView,Button,Alert, TouchableHighlight,TouchableWithoutFeedback, TouchableOpacity , TextInput} from 'react-native';\r\nimport React, {useState} from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Hamburger from 'hamburger-react'\r\n\r\n//icons\r\nimport user from './Icons/user.png'; \r\n\r\n//background img\r\nimport background from './Icons/background.png'; \r\n\r\n\r\nexport default function HomePage({text , onPress}) { \r\n  const handlePress= () => console.log(\"text pressed\");\r\n  const navigation = useNavigation();\r\n  const [isOpen, setOpen] = useState(false)\r\n\r\n    return (\r\n      <SafeAreaView style={styles.body}>\r\n        <View style={styles.container}>\r\n            <View style={styles.ProfileBackground}>\r\n                <Image source={user} style={styles.ProfileIcon} /> \r\n            </View>\r\n        <Hamburger toggled={isOpen} toggle={setOpen}/> \r\n        </View>\r\n\r\n\r\n                <TouchableOpacity onPress={onPress}>\r\n                </TouchableOpacity>\r\n               \r\n              \r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    body: {\r\n      width: 390,\r\n      height: 844,\r\n      backgroundColor: '#F8F8FF',\r\n    },\r\n    backgroundImg:{\r\n        width: '100%',\r\n        height: 400,\r\n    },\r\n    ProfileBackground: {\r\n        backgroundColor:'grey',  \r\n        marginLeft:300,\r\n        top:15,\r\n        width:50,\r\n        height:40,\r\n        borderRadius:10,\r\n      },\r\n    ProfileIcon: {\r\n        width:23,\r\n        height:27,  \r\n        marginLeft:14,\r\n        top:5,\r\n      },\r\n   \r\n  });"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;;;;;AAEA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAGA,OAAOC,IAAP;AAGA,OAAOC,UAAP;;;AAGA,eAAe,SAASC,QAAT,OAAoC;EAAA,IAAjBC,IAAiB,QAAjBA,IAAiB;EAAA,IAAVC,OAAU,QAAVA,OAAU;;EACjD,IAAMC,WAAW,GAAE,SAAbA,WAAa;IAAA,OAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;EAAA,CAAnB;;EACA,IAAMC,UAAU,GAAGV,aAAa,EAAhC;;EACA,gBAA0BD,QAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAOY,MAAP;EAAA,IAAeC,OAAf;;EAEE,OACE,MAAC,YAAD;IAAc,KAAK,EAAEC,MAAM,CAACC,IAA5B;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,SAApB;MAAA,WACI,KAAC,IAAD;QAAM,KAAK,EAAEF,MAAM,CAACG,iBAApB;QAAA,UACI,KAAC,KAAD;UAAO,MAAM,EAAEd,IAAf;UAAqB,KAAK,EAAEW,MAAM,CAACI;QAAnC;MADJ,EADJ,EAIA,KAAC,SAAD;QAAW,OAAO,EAAEN,MAApB;QAA4B,MAAM,EAAEC;MAApC,EAJA;IAAA,EADF,EASU,KAAC,gBAAD;MAAkB,OAAO,EAAEN;IAA3B,EATV;EAAA,EADF;AAgBD;AAID,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,IAAI,EAAE;IACJM,KAAK,EAAE,GADH;IAEJC,MAAM,EAAE,GAFJ;IAGJC,eAAe,EAAE;EAHb,CADyB;EAM/BC,aAAa,EAAC;IACVH,KAAK,EAAE,MADG;IAEVC,MAAM,EAAE;EAFE,CANiB;EAU/BL,iBAAiB,EAAE;IACfM,eAAe,EAAC,MADD;IAEfE,UAAU,EAAC,GAFI;IAGfC,GAAG,EAAC,EAHW;IAIfL,KAAK,EAAC,EAJS;IAKfC,MAAM,EAAC,EALQ;IAMfK,YAAY,EAAC;EANE,CAVY;EAkB/BT,WAAW,EAAE;IACTG,KAAK,EAAC,EADG;IAETC,MAAM,EAAC,EAFE;IAGTG,UAAU,EAAC,EAHF;IAITC,GAAG,EAAC;EAJK;AAlBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}