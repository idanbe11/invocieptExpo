{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport useLayoutEffect from \"../useLayoutEffect\";\nimport UIManager from \"../../exports/UIManager\";\nvar DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\nvar didWarn = !canUseDOM;\nvar resizeObserver = null;\n\nfunction getResizeObserver() {\n  if (canUseDOM && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach(function (entry) {\n          var node = entry.target;\n          var onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n\n          if (typeof onLayout === 'function') {\n            UIManager.measure(node, function (x, y, width, height, left, top) {\n              var event = {\n                nativeEvent: {\n                  layout: {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    left: left,\n                    top: top\n                  }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: function get() {\n                  return entry.target;\n                }\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n      console.warn('onLayout relies on ResizeObserver which is not supported by your browser. ' + 'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.');\n      didWarn = true;\n    }\n  }\n\n  return resizeObserver;\n}\n\nexport default function useElementLayout(ref, onLayout) {\n  var observer = getResizeObserver();\n  useLayoutEffect(function () {\n    var node = ref.current;\n\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]);\n  useLayoutEffect(function () {\n    var node = ref.current;\n\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n\n    return function () {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}","map":{"version":3,"names":["canUseDOM","useLayoutEffect","UIManager","DOM_LAYOUT_HANDLER_NAME","didWarn","resizeObserver","getResizeObserver","window","ResizeObserver","entries","forEach","entry","node","target","onLayout","measure","x","y","width","height","left","top","event","nativeEvent","layout","timeStamp","Date","now","Object","defineProperty","enumerable","get","process","env","NODE_ENV","console","warn","useElementLayout","ref","observer","current","observe","unobserve"],"sources":["C:/Users/oplati/Desktop/expo dragdrop/node_modules/react-native-web/src/modules/useElementLayout/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { ElementRef } from 'react';\nimport type { LayoutEvent } from '../../types';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport useLayoutEffect from '../useLayoutEffect';\nimport UIManager from '../../exports/UIManager';\n\nconst DOM_LAYOUT_HANDLER_NAME = '__reactLayoutHandler';\n\nlet didWarn = !canUseDOM;\nlet resizeObserver = null;\n\nfunction getResizeObserver(): ?ResizeObserver {\n  if (canUseDOM && typeof window.ResizeObserver !== 'undefined') {\n    if (resizeObserver == null) {\n      resizeObserver = new window.ResizeObserver(function (entries) {\n        entries.forEach((entry) => {\n          const node = entry.target;\n          const onLayout = node[DOM_LAYOUT_HANDLER_NAME];\n          if (typeof onLayout === 'function') {\n            // We still need to measure the view because browsers don't yet provide\n            // border-box dimensions in the entry\n            UIManager.measure(node, (x, y, width, height, left, top) => {\n              const event: LayoutEvent = {\n                // $FlowFixMe\n                nativeEvent: {\n                  layout: { x, y, width, height, left, top }\n                },\n                timeStamp: Date.now()\n              };\n              Object.defineProperty(event.nativeEvent, 'target', {\n                enumerable: true,\n                get: () => entry.target\n              });\n              onLayout(event);\n            });\n          }\n        });\n      });\n    }\n  } else if (!didWarn) {\n    if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n      console.warn(\n        'onLayout relies on ResizeObserver which is not supported by your browser. ' +\n          'Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill.'\n      );\n      didWarn = true;\n    }\n  }\n  return resizeObserver;\n}\n\nexport default function useElementLayout(\n  ref: ElementRef<any>,\n  onLayout?: ?(e: LayoutEvent) => void\n) {\n  const observer = getResizeObserver();\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node != null) {\n      node[DOM_LAYOUT_HANDLER_NAME] = onLayout;\n    }\n  }, [ref, onLayout]);\n\n  // Observing is done in a separate effect to avoid this effect running\n  // when 'onLayout' changes.\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node != null && observer != null) {\n      if (typeof node[DOM_LAYOUT_HANDLER_NAME] === 'function') {\n        observer.observe(node);\n      } else {\n        observer.unobserve(node);\n      }\n    }\n    return () => {\n      if (node != null && observer != null) {\n        observer.unobserve(node);\n      }\n    };\n  }, [ref, observer]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}