{"ast":null,"code":"import * as React from 'react';\nvar UNINITIALIZED = typeof Symbol === 'function' && typeof Symbol() === 'symbol' ? Symbol() : Object.freeze({});\nexport default function useStable(getInitialValue) {\n  var ref = React.useRef(UNINITIALIZED);\n\n  if (ref.current === UNINITIALIZED) {\n    ref.current = getInitialValue();\n  }\n\n  return ref.current;\n}","map":{"version":3,"names":["React","UNINITIALIZED","Symbol","Object","freeze","useStable","getInitialValue","ref","useRef","current"],"sources":["C:/Users/oplati/Documents/GitHub/invocieptExpo/node_modules/react-native-web/src/modules/useStable/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nconst UNINITIALIZED =\r\n  typeof Symbol === 'function' && typeof Symbol() === 'symbol' ? Symbol() : Object.freeze({});\r\n\r\nexport default function useStable<T>(getInitialValue: () => T): T {\r\n  const ref = React.useRef(UNINITIALIZED);\r\n  if (ref.current === UNINITIALIZED) {\r\n    ref.current = getInitialValue();\r\n  }\r\n  // $FlowFixMe (#64650789) Trouble refining types where `Symbol` is concerned.\r\n  return ref.current;\r\n}\r\n"],"mappings":"AASA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,aAAa,GACjB,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,EAAb,KAAoB,QAApD,GAA+DA,MAAM,EAArE,GAA0EC,MAAM,CAACC,MAAP,CAAc,EAAd,CAD5E;AAGA,eAAe,SAASC,SAAT,CAAsBC,eAAtB,EAAmD;EAChE,IAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaP,aAAb,CAAZ;;EACA,IAAIM,GAAG,CAACE,OAAJ,KAAgBR,aAApB,EAAmC;IACjCM,GAAG,CAACE,OAAJ,GAAcH,eAAe,EAA7B;EACD;;EAED,OAAOC,GAAG,CAACE,OAAX;AACD"},"metadata":{},"sourceType":"module"}