{"ast":null,"code":"function murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = function hash(str) {\n  return murmurhash2_32_gc(str, 1).toString(36);\n};\n\nexport default hash;","map":{"version":3,"names":["murmurhash2_32_gc","str","seed","l","length","h","i","k","charCodeAt","hash","toString"],"sources":["C:/Users/oplati/Desktop/expo dragdrop/node_modules/react-native-web/src/vendor/hash/index.js"],"sourcesContent":["/* eslint-disable */\n\n/**\n * JS Implementation of MurmurHash2\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n *\n * @flow\n */\n\nfunction murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n    h = seed ^ l,\n    i = 0,\n    k;\n\n  while (l >= 4) {\n    k =\n      (str.charCodeAt(i) & 0xff) |\n      ((str.charCodeAt(++i) & 0xff) << 8) |\n      ((str.charCodeAt(++i) & 0xff) << 16) |\n      ((str.charCodeAt(++i) & 0xff) << 24);\n\n    k = (k & 0xffff) * 0x5bd1e995 + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n\n    h = ((h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16);\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\nconst hash = (str: string): string => murmurhash2_32_gc(str, 1).toString(36);\n\nexport default hash;\n"],"mappings":"AAiBA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;EACpC,IAAIC,CAAC,GAAGF,GAAG,CAACG,MAAZ;EAAA,IACEC,CAAC,GAAGH,IAAI,GAAGC,CADb;EAAA,IAEEG,CAAC,GAAG,CAFN;EAAA,IAGEC,CAHF;;EAKA,OAAOJ,CAAC,IAAI,CAAZ,EAAe;IACbI,CAAC,GACEN,GAAG,CAACO,UAAJ,CAAeF,CAAf,IAAoB,IAArB,GACC,CAACL,GAAG,CAACO,UAAJ,CAAe,EAAEF,CAAjB,IAAsB,IAAvB,KAAgC,CADjC,GAEC,CAACL,GAAG,CAACO,UAAJ,CAAe,EAAEF,CAAjB,IAAsB,IAAvB,KAAgC,EAFjC,GAGC,CAACL,GAAG,CAACO,UAAJ,CAAe,EAAEF,CAAjB,IAAsB,IAAvB,KAAgC,EAJnC;IAMAC,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAE,CAACA,CAAC,KAAK,EAAP,IAAa,UAAd,GAA4B,MAA7B,KAAwC,EAArE,CAAJ;IACAA,CAAC,IAAIA,CAAC,KAAK,EAAX;IACAA,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAE,CAACA,CAAC,KAAK,EAAP,IAAa,UAAd,GAA4B,MAA7B,KAAwC,EAArE,CAAJ;IAEAF,CAAC,GAAI,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAE,CAACA,CAAC,KAAK,EAAP,IAAa,UAAd,GAA4B,MAA7B,KAAwC,EAArE,CAAD,GAA6EE,CAAjF;IAEAJ,CAAC,IAAI,CAAL;IACA,EAAEG,CAAF;EACD;;EAED,QAAQH,CAAR;IACE,KAAK,CAAL;MACEE,CAAC,IAAI,CAACJ,GAAG,CAACO,UAAJ,CAAeF,CAAC,GAAG,CAAnB,IAAwB,IAAzB,KAAkC,EAAvC;;IACF,KAAK,CAAL;MACED,CAAC,IAAI,CAACJ,GAAG,CAACO,UAAJ,CAAeF,CAAC,GAAG,CAAnB,IAAwB,IAAzB,KAAkC,CAAvC;;IACF,KAAK,CAAL;MACED,CAAC,IAAIJ,GAAG,CAACO,UAAJ,CAAeF,CAAf,IAAoB,IAAzB;MACAD,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAE,CAACA,CAAC,KAAK,EAAP,IAAa,UAAd,GAA4B,MAA7B,KAAwC,EAArE,CAAJ;EAPJ;;EAUAA,CAAC,IAAIA,CAAC,KAAK,EAAX;EACAA,CAAC,GAAG,CAACA,CAAC,GAAG,MAAL,IAAe,UAAf,IAA6B,CAAE,CAACA,CAAC,KAAK,EAAP,IAAa,UAAd,GAA4B,MAA7B,KAAwC,EAArE,CAAJ;EACAA,CAAC,IAAIA,CAAC,KAAK,EAAX;EAEA,OAAOA,CAAC,KAAK,CAAb;AACD;;AAED,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAACR,GAAD;EAAA,OAAyBD,iBAAiB,CAACC,GAAD,EAAM,CAAN,CAAjB,CAA0BS,QAA1B,CAAmC,EAAnC,CAAzB;AAAA,CAAb;;AAEA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}