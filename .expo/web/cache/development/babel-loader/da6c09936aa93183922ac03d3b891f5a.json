{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Fragment, useCallback, useEffect, useMemo, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport RenderBars from \"./RenderBars\";\nimport RenderStackBars from \"./RenderStackBars\";\nimport Rule from \"../Components/lineSvg\";\nimport { bezierCommand, svgPath } from \"../utils\";\nimport Svg, { Circle, Path, Rect, Text as CanvasText } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var BarChart = function BarChart(props) {\n  var _props$lineConfig$sho, _props$lineConfig$arr, _props$lineConfig$arr2, _props$lineConfig$arr3, _props$lineConfig$arr4, _props$lineConfig$arr5, _props$lineConfig$arr6, _props$lineConfig$arr7, _props$lineConfig$arr8, _props$lineConfig$arr9, _props$lineConfig$arr10, _props$lineConfig$arr11, _props$lineConfig$arr12;\n\n  var scrollRef = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      points = _useState2[0],\n      setPoints = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      arrowPoints = _useState4[0],\n      setArrowPoints = _useState4[1];\n\n  var _useState5 = useState(-1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedIndex = _useState6[0],\n      setSelectedIndex = _useState6[1];\n\n  var showLine = props.showLine || false;\n  var initialSpacing = props.initialSpacing === 0 ? 0 : props.initialSpacing || 40;\n  var data = useMemo(function () {\n    if (!props.data) {\n      return [];\n    }\n\n    if (props.yAxisOffset) {\n      return props.data.map(function (item) {\n        item.value = item.value - props.yAxisOffset;\n        return item;\n      });\n    }\n\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  var lineData = props.lineData || data;\n  var lineBehindBars = props.lineBehindBars || false;\n  var defaultLineConfig = {\n    initialSpacing: initialSpacing,\n    curved: false,\n    isAnimated: false,\n    thickness: 1,\n    color: 'black',\n    hideDataPoints: false,\n    dataPointsShape: 'circular',\n    dataPointsWidth: 2,\n    dataPointsHeight: 2,\n    dataPointsColor: 'black',\n    dataPointsRadius: 3,\n    textColor: 'gray',\n    textFontSize: 10,\n    textShiftX: 0,\n    textShiftY: 0,\n    shiftY: 0,\n    delay: 0,\n    startIndex: 0,\n    endIndex: lineData.length - 1,\n    showArrow: false,\n    arrowConfig: {\n      length: 10,\n      width: 10,\n      strokeWidth: 1,\n      strokeColor: 'black',\n      fillColor: 'none',\n      showArrowBase: true\n    }\n  };\n  var lineConfig = props.lineConfig ? {\n    initialSpacing: props.lineConfig.initialSpacing === 0 ? 0 : props.lineConfig.initialSpacing || defaultLineConfig.initialSpacing,\n    curved: props.lineConfig.curved || defaultLineConfig.curved,\n    isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n    thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n    color: props.lineConfig.color || defaultLineConfig.color,\n    hideDataPoints: props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n    dataPointsShape: props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n    dataPointsHeight: props.lineConfig.dataPointsHeight || defaultLineConfig.dataPointsHeight,\n    dataPointsWidth: props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n    dataPointsColor: props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n    dataPointsRadius: props.lineConfig.dataPointsRadius || defaultLineConfig.dataPointsRadius,\n    textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n    textFontSize: props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n    textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n    textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n    shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n    delay: props.lineConfig.delay || defaultLineConfig.delay,\n    startIndex: props.lineConfig.startIndex || defaultLineConfig.startIndex,\n    endIndex: props.lineConfig.endIndex === 0 ? 0 : props.lineConfig.endIndex || defaultLineConfig.endIndex,\n    showArrow: (_props$lineConfig$sho = props.lineConfig.showArrow) != null ? _props$lineConfig$sho : defaultLineConfig.showArrow,\n    arrowConfig: {\n      length: (_props$lineConfig$arr = (_props$lineConfig$arr2 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr2.length) != null ? _props$lineConfig$arr : defaultLineConfig.arrowConfig.length,\n      width: (_props$lineConfig$arr3 = (_props$lineConfig$arr4 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr4.width) != null ? _props$lineConfig$arr3 : defaultLineConfig.arrowConfig.width,\n      strokeWidth: (_props$lineConfig$arr5 = (_props$lineConfig$arr6 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr6.strokeWidth) != null ? _props$lineConfig$arr5 : defaultLineConfig.arrowConfig.strokeWidth,\n      strokeColor: (_props$lineConfig$arr7 = (_props$lineConfig$arr8 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr8.strokeColor) != null ? _props$lineConfig$arr7 : defaultLineConfig.arrowConfig.strokeColor,\n      fillColor: (_props$lineConfig$arr9 = (_props$lineConfig$arr10 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr10.fillColor) != null ? _props$lineConfig$arr9 : defaultLineConfig.arrowConfig.fillColor,\n      showArrowBase: (_props$lineConfig$arr11 = (_props$lineConfig$arr12 = props.lineConfig.arrowConfig) == null ? void 0 : _props$lineConfig$arr12.showArrowBase) != null ? _props$lineConfig$arr11 : defaultLineConfig.arrowConfig.showArrowBase\n    }\n  } : defaultLineConfig;\n  var containerHeight = props.height || 200;\n  var noOfSections = props.noOfSections || 10;\n  var horizSections = [{\n    value: '0'\n  }];\n  var horizSectionsBelow = [];\n  var stepHeight = props.stepHeight || containerHeight / noOfSections;\n  var spacing = props.spacing === 0 ? 0 : props.spacing || 20;\n  var labelWidth = props.labelWidth || 0;\n  var scrollToEnd = props.scrollToEnd || false;\n  var scrollAnimation = props.scrollAnimation === false ? false : true;\n  var labelsExtraHeight = props.labelsExtraHeight || 0;\n  var totalWidth = spacing;\n  var maxItem = 0,\n      minItem = 0;\n\n  if (props.stackData) {\n    props.stackData.forEach(function (stackItem) {\n      var stackSum = stackItem.stacks.reduce(function (acc, stack) {\n        return acc + stack.value;\n      }, 0);\n\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n\n      totalWidth += (stackItem.stacks[0].barWidth || props.barWidth || 30) + spacing;\n    });\n  } else {\n    data.forEach(function (item) {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n\n      totalWidth += (item.barWidth || props.barWidth || 30) + (item.spacing === 0 ? 0 : item.spacing || spacing);\n    });\n  }\n\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - maxItem % 10);\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n\n    if (minItem !== 0) {\n      minItem *= 10 * (props.roundToDigits || 1);\n      minItem = minItem - (10 + minItem % 10);\n      minItem /= 10 * (props.roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(props.roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - maxItem % 10);\n\n    if (minItem !== 0) {\n      minItem = minItem - (10 + minItem % 10);\n    }\n  }\n\n  var maxValue = props.maxValue || maxItem;\n  var minValue = props.minValue || minItem;\n  var stepValue = props.stepValue || maxValue / noOfSections;\n  var noOfSectionsBelowXAxis = props.noOfSectionsBelowXAxis || -minValue / stepValue;\n  var disableScroll = props.disableScroll || false;\n  var showScrollIndicator = props.showScrollIndicator || false;\n  var side = props.side || '';\n  var rotateLabel = props.rotateLabel || false;\n  var isAnimated = props.isAnimated || false;\n  var animationDuration = props.animationDuration || 800;\n  var opacity = props.opacity || 1;\n  var isThreeD = props.isThreeD || false;\n  var showVerticalLines = props.showVerticalLines || false;\n  var rulesThickness = props.rulesThickness === 0 ? 0 : props.rulesThickness || 1;\n  var rulesLength = props.rulesLength;\n  var rulesColor = props.rulesColor || 'lightgray';\n  var verticalLinesThickness = props.verticalLinesThickness === 0 ? 0 : props.verticalLinesThickness || 1;\n  var verticalLinesHeight = props.verticalLinesHeight;\n  var verticalLinesColor = props.verticalLinesColor || 'lightgray';\n  var verticalLinesZIndex = props.verticalLinesZIndex || -1;\n  var verticalLinesAr = [];\n  props.noOfVerticalLines ? verticalLinesAr = _toConsumableArray(Array(props.noOfVerticalLines).keys()) : verticalLinesAr = _toConsumableArray(Array(props.stackData ? props.stackData.length : data.length).keys());\n  var verticalLinesSpacing = props.verticalLinesSpacing || 0;\n  var showYAxisIndices = props.showYAxisIndices || false;\n  var showXAxisIndices = props.showXAxisIndices || false;\n  var yAxisIndicesHeight = props.yAxisIndicesHeight || 2;\n  var xAxisIndicesHeight = props.xAxisIndicesHeight || 2;\n  var yAxisIndicesWidth = props.yAxisIndicesWidth || 4;\n  var xAxisIndicesWidth = props.xAxisIndicesWidth || 4;\n  var xAxisIndicesColor = props.xAxisIndicesColor || 'black';\n  var yAxisIndicesColor = props.yAxisIndicesColor || 'black';\n  var yAxisLabelPrefix = props.yAxisLabelPrefix || '';\n  var yAxisLabelSuffix = props.yAxisLabelSuffix || '';\n  var yAxisSide = props.yAxisSide || 'left';\n  var xAxisThickness = props.xAxisThickness === 0 ? props.xAxisThickness : props.xAxisThickness || 1;\n  var xAxisLength = props.xAxisLength;\n  var xAxisColor = props.xAxisColor || 'black';\n  var hideRules = props.hideRules || false;\n  var yAxisThickness = props.yAxisThickness === 0 ? props.yAxisThickness : props.yAxisThickness || 1;\n  var yAxisColor = props.yAxisColor || 'black';\n  var yAxisTextStyle = props.yAxisTextStyle;\n  var yAxisTextNumberOfLines = props.yAxisTextNumberOfLines || 1;\n  var xAxisTextNumberOfLines = props.xAxisTextNumberOfLines || 1;\n  var yAxisLabelContainerStyle = props.yAxisLabelContainerStyle;\n  var horizontalRulesStyle = props.horizontalRulesStyle;\n  var showFractionalValues = props.showFractionalValues || false;\n  var yAxisLabelWidth = props.yAxisLabelWidth || 35;\n  var hideYAxisText = props.hideYAxisText || false;\n  var backgroundColor = props.backgroundColor || 'transparent';\n  var horizontal = props.horizontal || false;\n  var yAxisAtTop = props.yAxisAtTop || false;\n  var intactTopLabel = props.intactTopLabel || false;\n  var hideOrigin = props.hideOrigin || false;\n  var rulesType = props.rulesType || 'line';\n  var xAxisType = props.xAxisType || 'solid';\n  var dashWidth = props.dashWidth === 0 ? 0 : props.dashWidth || 4;\n  var dashGap = props.dashGap === 0 ? 0 : props.dashGap || 8;\n  var heightValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var opacValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var widthValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var autoShiftLabels = props.autoShiftLabels || false;\n  var labelsAppear = useCallback(function () {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  }, [opacValue]);\n  var decreaseWidth = useCallback(function () {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n  }, [animationDuration, widthValue]);\n\n  var getArrowPoints = function getArrowPoints(arrowTipX, arrowTipY, x1, y1, arrowLength, arrowWidth, showArrowBase) {\n    var dataLineSlope = (arrowTipY - y1) / (arrowTipX - x1);\n    var d = arrowLength;\n    var d2 = arrowWidth / 2;\n    var interSectionX = arrowTipX - Math.sqrt(d * d / (dataLineSlope * dataLineSlope + 1));\n    var interSectionY = arrowTipY - dataLineSlope * (arrowTipX - interSectionX);\n    var arrowBasex1, arrowBaseY1, arrowBaseX2, arrowBaseY2;\n\n    if (dataLineSlope === 0) {\n      arrowBasex1 = interSectionX;\n      arrowBaseY1 = interSectionY - d2;\n      arrowBaseX2 = interSectionX;\n      arrowBaseY2 = interSectionY + d2;\n    } else {\n      var arrowBaseSlope = -1 / dataLineSlope;\n      arrowBasex1 = interSectionX - Math.sqrt(d2 * d2 / (arrowBaseSlope * arrowBaseSlope + 1));\n      arrowBaseY1 = interSectionY - arrowBaseSlope * (interSectionX - arrowBasex1);\n      arrowBaseX2 = interSectionX + Math.sqrt(d2 * d2 / (arrowBaseSlope * arrowBaseSlope + 1));\n      arrowBaseY2 = interSectionY + arrowBaseSlope * (interSectionX - arrowBasex1);\n    }\n\n    var arrowPoints = \" M\" + interSectionX + \" \" + interSectionY;\n    arrowPoints += \" \" + (showArrowBase ? 'L' : 'M') + arrowBasex1 + \" \" + arrowBaseY1;\n    arrowPoints += \" L\" + arrowTipX + \" \" + arrowTipY;\n    arrowPoints += \" M\" + interSectionX + \" \" + interSectionY;\n    arrowPoints += \" \" + (showArrowBase ? 'L' : 'M') + arrowBaseX2 + \" \" + arrowBaseY2;\n    arrowPoints += \" L\" + arrowTipX + \" \" + arrowTipY;\n    return arrowPoints;\n  };\n\n  useEffect(function () {\n    if (showLine) {\n      var pp = '';\n\n      if (!lineConfig.curved) {\n        for (var i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          var currentBarWidth = data && data[i] && data[i].barWidth || props.barWidth || 30;\n          pp += 'L' + (yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (currentBarWidth + spacing) * i) + ' ' + (containerHeight - lineConfig.shiftY - lineData[i].value * containerHeight / maxValue) + ' ';\n        }\n\n        setPoints(pp.replace('L', 'M'));\n\n        if (lineData.length > 1 && lineConfig.showArrow) {\n          var ppArray = pp.trim().split(' ');\n          var arrowTipY = parseInt(ppArray[ppArray.length - 1]);\n          var arrowTipX = parseInt(ppArray[ppArray.length - 2].replace('L', ''));\n          var y1 = parseInt(ppArray[ppArray.length - 3]);\n          var x1 = parseInt(ppArray[ppArray.length - 4].replace('L', ''));\n\n          var _arrowPoints = getArrowPoints(arrowTipX, arrowTipY, x1, y1, lineConfig.arrowConfig.length, lineConfig.arrowConfig.width, lineConfig.arrowConfig.showArrowBase);\n\n          setArrowPoints(_arrowPoints);\n        }\n      } else {\n        var p1Array = [];\n\n        for (var _i = 0; _i < lineData.length; _i++) {\n          if (_i < lineConfig.startIndex || _i > lineConfig.endIndex) continue;\n\n          var _currentBarWidth = data && data[_i] && data[_i].barWidth || props.barWidth || 30;\n\n          p1Array.push([yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - _currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (_currentBarWidth + spacing) * _i, containerHeight - lineConfig.shiftY - lineData[_i].value * containerHeight / maxValue]);\n          var xx = svgPath(p1Array, bezierCommand);\n          setPoints(xx);\n        }\n      }\n\n      if (lineConfig.isAnimated) {\n        setTimeout(function () {\n          return decreaseWidth();\n        }, lineConfig.delay || 0);\n      }\n    }\n\n    setTimeout(function () {\n      return labelsAppear();\n    }, animationDuration);\n  }, [animationDuration, containerHeight, data, lineData, decreaseWidth, initialSpacing, labelsAppear, lineConfig.initialSpacing, lineConfig.curved, lineConfig.dataPointsWidth, lineConfig.shiftY, lineConfig.isAnimated, lineConfig.delay, lineConfig.startIndex, lineConfig.endIndex, maxValue, props.barWidth, showLine, spacing, yAxisLabelWidth, lineConfig.showArrow, lineConfig.arrowConfig.length, lineConfig.arrowConfig.width, lineConfig.arrowConfig.showArrowBase]);\n  var defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: horizontal ? props.width || totalWidth : (props.width || totalWidth) + 11,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null\n  };\n  var showReferenceLine1 = props.showReferenceLine1 || false;\n  var referenceLine1Position = props.referenceLine1Position === 0 ? 0 : props.referenceLine1Position || containerHeight / 2;\n  var referenceLine1Config = props.referenceLine1Config ? {\n    thickness: props.referenceLine1Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine1Config.width || props.width || totalWidth : (props.referenceLine1Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine1Config.color || 'black',\n    type: props.referenceLine1Config.type || rulesType,\n    dashWidth: props.referenceLine1Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine1Config.dashGap || dashGap,\n    labelText: props.referenceLine1Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: props.referenceLine1Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  var showReferenceLine2 = props.showReferenceLine2 || false;\n  var referenceLine2Position = props.referenceLine2Position === 0 ? 0 : props.referenceLine2Position || 3 * containerHeight / 2;\n  var referenceLine2Config = props.referenceLine2Config ? {\n    thickness: props.referenceLine2Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine2Config.width || props.width || totalWidth : (props.referenceLine2Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine2Config.color || 'black',\n    type: props.referenceLine2Config.type || rulesType,\n    dashWidth: props.referenceLine2Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine2Config.dashGap || dashGap,\n    labelText: props.referenceLine2Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: props.referenceLine2Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  var showReferenceLine3 = props.showReferenceLine3 || false;\n  var referenceLine3Position = props.referenceLine3Position === 0 ? 0 : props.referenceLine3Position || containerHeight / 3;\n  var referenceLine3Config = props.referenceLine3Config ? {\n    thickness: props.referenceLine3Config.thickness || rulesThickness,\n    width: horizontal ? props.referenceLine3Config.width || props.width || totalWidth : (props.referenceLine3Config.width || props.width || totalWidth) + 11,\n    color: props.referenceLine3Config.color || 'black',\n    type: props.referenceLine3Config.type || rulesType,\n    dashWidth: props.referenceLine3Config.dashWidth || dashWidth,\n    dashGap: props.referenceLine3Config.dashGap || dashGap,\n    labelText: props.referenceLine3Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: props.referenceLine3Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  horizSections.pop();\n\n  for (var i = 0; i <= noOfSections; i++) {\n    var _props$yAxisLabelText;\n\n    var value = maxValue - stepValue * i;\n\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n\n    horizSections.push({\n      value: props.yAxisLabelTexts ? (_props$yAxisLabelText = props.yAxisLabelTexts[noOfSections - i]) != null ? _props$yAxisLabelText : value.toString() : value.toString()\n    });\n  }\n\n  if (noOfSectionsBelowXAxis) {\n    for (var _i2 = 1; _i2 <= noOfSectionsBelowXAxis; _i2++) {\n      var _props$yAxisLabelText2;\n\n      var _value = stepValue * -_i2;\n\n      if (props.showFractionalValues || props.roundToDigits) {\n        _value = parseFloat(_value.toFixed(props.roundToDigits || 1));\n      }\n\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts ? (_props$yAxisLabelText2 = props.yAxisLabelTexts[noOfSectionsBelowXAxis - _i2]) != null ? _props$yAxisLabelText2 : _value.toString() : _value.toString()\n      });\n    }\n  }\n\n  var animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%']\n  });\n  var appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1]\n  });\n  var animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth]\n  });\n\n  var getLabel = function getLabel(val, index) {\n    var label = '';\n\n    if (showFractionalValues || props.yAxisLabelTexts && props.yAxisLabelTexts[index] !== undefined) {\n      if (val) {\n        label = props.yAxisOffset ? (Number(val) + props.yAxisOffset).toString() : val;\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    } else {\n      if (val) {\n        label = val.toString().split('.')[0];\n\n        if (props.yAxisOffset) {\n          label = (Number(label) + props.yAxisOffset).toString();\n        }\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    }\n\n    return yAxisLabelPrefix + label + yAxisLabelSuffix;\n  };\n\n  var renderHorizSections = function renderHorizSections() {\n    return _jsxs(_Fragment, {\n      children: [horizSections.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: horizontal ? props.width || Math.min(300, totalWidth) : props.width || totalWidth + 11\n          }, yAxisSide === 'right' && {\n            transform: [{\n              rotateY: '180deg'\n            }]\n          }, horizontalRulesStyle],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              borderRightWidth: yAxisThickness,\n              borderColor: yAxisColor\n            }, horizontal && !yAxisAtTop && {\n              transform: [{\n                translateX: (props.width || Math.min(300, totalWidth)) + yAxisThickness\n              }]\n            }, {\n              height: index === noOfSections ? stepHeight / 2 : stepHeight,\n              width: yAxisLabelWidth\n            }, yAxisLabelContainerStyle]\n          }), _jsx(View, {\n            style: [index === noOfSections ? styles.lastLeftPart : styles.leftPart, {\n              backgroundColor: backgroundColor\n            }],\n            children: index === noOfSections ? _jsx(Rule, {\n              config: {\n                thickness: xAxisThickness,\n                color: xAxisColor,\n                width: xAxisLength || (horizontal ? props.width || Math.min(300, totalWidth) : (props.width || totalWidth) + 11),\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: xAxisType\n              }\n            }) : hideRules ? null : _jsx(Rule, {\n              config: {\n                thickness: rulesThickness,\n                color: rulesColor,\n                width: rulesLength || (horizontal ? props.width || Math.min(300, totalWidth) : (props.width || totalWidth) + 11),\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: rulesType\n              }\n            })\n          })]\n        }, index);\n      }), props.hideAxesAndRules !== true && !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        var label = getLabel(sectionItems.value, index);\n\n        if (hideOrigin && index === horizSections.length - 1) {\n          label = '';\n        }\n\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === 'right' && {\n            transform: [{\n              translateX: (props.width ? props.width : totalWidth) - 30\n            }, {\n              rotateY: '180deg'\n            }]\n          }, horizontal && !yAxisAtTop && {\n            transform: [{\n              translateX: (props.width || Math.min(300, totalWidth)) + yAxisThickness + yAxisLabelWidth\n            }]\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, yAxisSide === 'right' && {\n              transform: [{\n                rotateY: '180deg'\n              }]\n            }, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), horizSectionsBelow.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: horizontal ? props.width || totalWidth : props.width || totalWidth + 11\n          }, yAxisSide === 'right' && {\n            transform: [{\n              rotateY: '180deg'\n            }]\n          }, index === 0 && {\n            marginTop: stepHeight / 2\n          }],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              borderRightWidth: yAxisThickness,\n              borderColor: yAxisColor\n            }, horizontal && !yAxisAtTop && {\n              transform: [{\n                translateX: totalWidth + yAxisThickness\n              }]\n            }, {\n              height: index === 0 ? stepHeight * 1.5 : stepHeight,\n              width: yAxisLabelWidth\n            }, index === 0 && {\n              marginTop: -stepHeight / 2\n            }]\n          }), _jsx(View, {\n            style: [styles.leftPart, {\n              backgroundColor: backgroundColor\n            }],\n            children: hideRules ? null : _jsx(Rule, {\n              config: {\n                thickness: rulesThickness,\n                color: rulesColor,\n                width: rulesLength || (horizontal ? props.width || totalWidth : (props.width || totalWidth) + 11),\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: rulesType\n              }\n            })\n          })]\n        }, index);\n      }), props.hideAxesAndRules !== true && !hideYAxisText && horizSectionsBelow.map(function (sectionItems, index) {\n        var label = getLabel(horizSectionsBelow[horizSectionsBelow.length - 1 - index].value, index);\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            bottom: stepHeight * (index - 1),\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === 'right' && {\n            transform: [{\n              translateX: (props.width ? props.width : totalWidth) - 30\n            }, {\n              rotateY: '180deg'\n            }]\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, yAxisSide === 'right' && {\n              transform: [{\n                rotateY: '180deg'\n              }]\n            }, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), props.hideAxesAndRules !== true && !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        var label = getLabel(sectionItems.value, index);\n\n        if (hideOrigin && index === horizSections.length - 1) {\n          label = '';\n        }\n\n        return _jsxs(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === 'right' && {\n            transform: [{\n              translateX: (props.width ? props.width : totalWidth) - 30\n            }, {\n              rotateY: '180deg'\n            }]\n          }],\n          children: [index === noOfSections && showReferenceLine1 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: referenceLine1Position * containerHeight / maxValue,\n              left: yAxisSide === 'right' ? yAxisLabelWidth + yAxisThickness : yAxisLabelWidth + yAxisThickness - 5\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine1Config\n            }), referenceLine1Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, yAxisSide === 'right' && {\n                transform: [{\n                  rotateY: '180deg'\n                }]\n              }, referenceLine1Config.labelTextStyle],\n              children: referenceLine1Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine2 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: referenceLine2Position * containerHeight / maxValue,\n              left: yAxisSide === 'right' ? yAxisLabelWidth + yAxisThickness : yAxisLabelWidth + yAxisThickness - 5\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine2Config\n            }), referenceLine2Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, yAxisSide === 'right' && {\n                transform: [{\n                  rotateY: '180deg'\n                }]\n              }, referenceLine2Config.labelTextStyle],\n              children: referenceLine2Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine3 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: referenceLine3Position * containerHeight / maxValue,\n              left: yAxisSide === 'right' ? yAxisLabelWidth + yAxisThickness : yAxisLabelWidth + yAxisThickness - 5\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine3Config\n            }), referenceLine3Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, yAxisSide === 'right' && {\n                transform: [{\n                  rotateY: '180deg'\n                }]\n              }, referenceLine3Config.labelTextStyle],\n              children: referenceLine3Config.labelText\n            }) : null]\n          }) : null]\n        }, index);\n      })]\n    });\n  };\n\n  var renderSpecificVerticalLines = function renderSpecificVerticalLines(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      if (item.showVerticalLine) {\n        var currentBarWidth = item.barWidth || props.barWidth || 30;\n        return _jsx(Rect, {\n          x: yAxisLabelWidth + 6 - (item.verticalLineThickness || 1) / 2 - 1 - (initialSpacing - currentBarWidth / 2) + (currentBarWidth + spacing) * index,\n          y: containerHeight - lineConfig.shiftY - item.value * containerHeight / maxValue + 9,\n          width: item.verticalLineThickness || 1,\n          height: item.value * containerHeight / maxValue + lineConfig.shiftY,\n          fill: item.verticalLineColor || 'lightgray'\n        });\n      }\n\n      return null;\n    });\n  };\n\n  var renderDataPoints = function renderDataPoints() {\n    return lineData.map(function (item, index) {\n      if (index < lineConfig.startIndex || index > lineConfig.endIndex) {\n        return null;\n      }\n\n      var currentBarWidth = item.barWidth || props.barWidth || 30;\n\n      if (lineConfig.dataPointsShape === 'rectangular') {\n        return _jsxs(Fragment, {\n          children: [_jsx(Rect, {\n            x: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index,\n            y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 - item.value * containerHeight / maxValue,\n            width: lineConfig.dataPointsWidth,\n            height: lineConfig.dataPointsHeight,\n            fill: lineConfig.dataPointsColor\n          }), item.dataPointText && _jsx(CanvasText, {\n            fill: item.textColor || lineConfig.textColor,\n            fontSize: item.textFontSize || lineConfig.textFontSize,\n            x: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index + (item.textShiftX || lineConfig.textShiftX || 0),\n            y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n            children: item.dataPointText\n          })]\n        }, index);\n      }\n\n      return _jsxs(Fragment, {\n        children: [_jsx(Circle, {\n          cx: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth / 2 + (currentBarWidth + spacing) * index,\n          cy: containerHeight - lineConfig.shiftY - item.value * containerHeight / maxValue,\n          r: lineConfig.dataPointsRadius,\n          fill: lineConfig.dataPointsColor\n        }), item.dataPointText && _jsx(CanvasText, {\n          fill: item.textColor || lineConfig.textColor,\n          fontSize: item.textFontSize || lineConfig.textFontSize,\n          x: yAxisLabelWidth + lineConfig.initialSpacing + 6 - (initialSpacing - currentBarWidth / 2) - lineConfig.dataPointsWidth + (currentBarWidth + spacing) * index + (item.textShiftX || lineConfig.textShiftX || 0),\n          y: containerHeight - lineConfig.shiftY - lineConfig.dataPointsHeight / 2 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n          children: item.dataPointText\n        })]\n      }, index);\n    });\n  };\n\n  var renderSpecificDataPoints = function renderSpecificDataPoints(dataForRender) {\n    return dataForRender.map(function (item, index) {\n      var currentBarWidth = item.barWidth || props.barWidth || 30;\n\n      if (item.showDataPoint) {\n        if (item.dataPointShape === 'rectangular') {\n          return _jsxs(Fragment, {\n            children: [_jsx(Rect, {\n              x: initialSpacing - (item.dataPointWidth || 2) / 2 - 1 + (currentBarWidth + spacing) * index,\n              y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue,\n              width: item.dataPointWidth || 2,\n              height: item.dataPointHeight || 2,\n              fill: item.dataPointColor || 'black'\n            }), item.dataPointText && _jsx(CanvasText, {\n              fill: item.textColor || 'black',\n              fontSize: item.textFontSize || 10,\n              x: initialSpacing - (item.dataPointWidth || 2) + spacing * index + (item.textShiftX || lineConfig.textShiftX || 0),\n              y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n              children: item.dataPointText\n            })]\n          }, index);\n        } else {\n          return _jsxs(Fragment, {\n            children: [_jsx(Circle, {\n              cx: initialSpacing - (item.dataPointWidth || 2) / 2 + spacing * index,\n              cy: containerHeight - lineConfig.shiftY + 10 - item.value * containerHeight / maxValue,\n              r: item.dataPointRadius || 3,\n              fill: item.dataPointColor || 'black'\n            }), item.dataPointText && _jsx(CanvasText, {\n              fill: item.textColor || 'black',\n              fontSize: item.textFontSize || 10,\n              x: initialSpacing - (item.dataPointWidth || 2) + spacing * index + (item.textShiftX || lineConfig.textShiftX || 0),\n              y: containerHeight - lineConfig.shiftY - (item.dataPointHeight || 2) / 2 + 10 - item.value * containerHeight / maxValue + (item.textShiftY || lineConfig.textShiftY || 0),\n              children: item.dataPointText\n            })]\n          }, index);\n        }\n      }\n\n      return null;\n    });\n  };\n\n  var renderAnimatedLine = function renderAnimatedLine() {\n    return _jsx(Animated.View, {\n      style: {\n        position: 'absolute',\n        height: containerHeight + 10,\n        bottom: 60,\n        width: animatedWidth,\n        zIndex: lineBehindBars ? -1 : 100000\n      },\n      children: _jsxs(Svg, {\n        children: [_jsx(Path, {\n          d: points,\n          fill: \"none\",\n          stroke: lineConfig.color,\n          strokeWidth: lineConfig.thickness\n        }), renderSpecificVerticalLines(data), !lineConfig.hideDataPoints ? renderDataPoints() : renderSpecificDataPoints(data), lineConfig.showArrow && _jsx(Path, {\n          d: arrowPoints,\n          fill: lineConfig.arrowConfig.fillColor,\n          stroke: lineConfig.arrowConfig.strokeColor,\n          strokeWidth: lineConfig.arrowConfig.strokeWidth\n        })]\n      })\n    });\n  };\n\n  var renderLine = function renderLine() {\n    return _jsx(View, {\n      style: {\n        position: 'absolute',\n        height: containerHeight + 10,\n        bottom: 60,\n        width: totalWidth,\n        zIndex: lineBehindBars ? -1 : 100000\n      },\n      children: _jsxs(Svg, {\n        children: [_jsx(Path, {\n          d: points,\n          fill: \"none\",\n          stroke: lineConfig.color,\n          strokeWidth: lineConfig.thickness\n        }), renderSpecificVerticalLines(data), !lineConfig.hideDataPoints ? renderDataPoints() : renderSpecificDataPoints(data), lineConfig.showArrow && _jsx(Path, {\n          d: arrowPoints,\n          fill: lineConfig.arrowConfig.fillColor,\n          stroke: lineConfig.arrowConfig.strokeColor,\n          strokeWidth: lineConfig.arrowConfig.strokeWidth\n        })]\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: [styles.container, {\n      height: containerHeight + horizSectionsBelow.length * stepHeight + labelsExtraHeight\n    }, yAxisSide === 'right' && {\n      marginLeft: yAxisLabelWidth + yAxisThickness\n    }, props.width && !horizontal && {\n      width: props.width\n    }, horizontal && {\n      transform: [{\n        rotate: '90deg'\n      }, {\n        translateY: 15\n      }]\n    }],\n    children: [props.hideAxesAndRules !== true && renderHorizSections(), _jsx(ScrollView, {\n      ref: scrollRef,\n      onTouchStart: function onTouchStart(evt) {\n        if (props.renderTooltip) {\n          setSelectedIndex(-1);\n        }\n      },\n      onContentSizeChange: function onContentSizeChange() {\n        if (scrollRef.current && scrollToEnd) {\n          scrollRef.current.scrollToEnd({\n            animated: scrollAnimation\n          });\n        }\n      },\n      style: [{\n        marginLeft: yAxisSide === 'right' ? -yAxisLabelWidth + 10 : yAxisLabelWidth,\n        position: 'absolute',\n        bottom: stepHeight * -0.5 - 60 + xAxisThickness\n      }, props.width && {\n        width: props.width - 11\n      }, horizontal && {\n        width: props.width || Math.min(300, totalWidth)\n      }],\n      scrollEnabled: !disableScroll,\n      contentContainerStyle: [{\n        height: containerHeight + 130 + horizSectionsBelow.length * stepHeight + labelsExtraHeight,\n        paddingLeft: initialSpacing,\n        paddingBottom: horizSectionsBelow.length * stepHeight + labelsExtraHeight,\n        alignItems: 'flex-end'\n      }, !props.width && {\n        width: totalWidth\n      }],\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      indicatorStyle: props.indicatorColor,\n      horizontal: true,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      children: _jsxs(Fragment, {\n        children: [showVerticalLines && verticalLinesAr.map(function (item, index) {\n          var totalSpacing = initialSpacing;\n\n          if (verticalLinesSpacing) {\n            totalSpacing = verticalLinesSpacing * (index + 1);\n          } else {\n            if (props.stackData) {\n              totalSpacing += (props.stackData[0].barWidth || props.barWidth || 30) / 2;\n            } else {\n              totalSpacing += (props.data[0].barWidth || props.barWidth || 30) / 2;\n            }\n\n            for (var _i3 = 0; _i3 < index; _i3++) {\n              var actualSpacing = spacing;\n\n              if (props.stackData) {\n                if (_i3 >= props.stackData.length - 1) {\n                  actualSpacing += (props.barWidth || 30) / 2;\n                } else {\n                  if (props.stackData[_i3].spacing || props.stackData[_i3].spacing === 0) {\n                    actualSpacing = props.stackData[_i3].spacing;\n                  }\n\n                  if (props.stackData[_i3 + 1].barWidth) {\n                    actualSpacing += props.stackData[_i3 + 1].barWidth;\n                  } else {\n                    actualSpacing += props.barWidth || 30;\n                  }\n                }\n              } else {\n                if (_i3 >= props.data.length - 1) {\n                  actualSpacing += (props.barWidth || 30) / 2;\n                } else {\n                  if (props.data[_i3].spacing || props.data[_i3].spacing === 0) {\n                    console.log('here for index ' + index + ' and i ' + _i3);\n                    actualSpacing = props.data[_i3].spacing;\n                  }\n\n                  if (props.data[_i3 + 1].barWidth) {\n                    actualSpacing += props.data[_i3 + 1].barWidth;\n                  } else {\n                    actualSpacing += props.barWidth || 30;\n                  }\n                }\n              }\n\n              console.log('i = ' + _i3 + ' actualSpacing ' + actualSpacing);\n              totalSpacing += actualSpacing;\n            }\n          }\n\n          return _jsx(View, {\n            style: {\n              position: 'absolute',\n              zIndex: verticalLinesZIndex || -1,\n              marginBottom: xAxisThickness,\n              height: verticalLinesHeight || containerHeight + 15 - xAxisThickness,\n              width: verticalLinesThickness,\n              backgroundColor: verticalLinesColor,\n              bottom: 60 + labelsExtraHeight,\n              left: totalSpacing\n            }\n          }, index);\n        }), showLine ? lineConfig.isAnimated ? renderAnimatedLine() : renderLine() : null, props.stackData ? props.stackData.map(function (item, index) {\n          return _jsx(RenderStackBars, {\n            stackData: props.stackData,\n            item: item,\n            index: index,\n            data: data,\n            containerHeight: containerHeight,\n            maxValue: maxValue,\n            spacing: item.spacing === 0 ? 0 : item.spacing || spacing,\n            propSpacing: spacing,\n            xAxisThickness: xAxisThickness,\n            barWidth: props.barWidth,\n            opacity: opacity,\n            disablePress: item.disablePress || props.disablePress,\n            rotateLabel: rotateLabel,\n            showXAxisIndices: showXAxisIndices,\n            xAxisIndicesHeight: xAxisIndicesHeight,\n            xAxisIndicesWidth: xAxisIndicesWidth,\n            xAxisIndicesColor: xAxisIndicesColor,\n            horizontal: horizontal,\n            intactTopLabel: intactTopLabel,\n            barBorderRadius: props.barBorderRadius,\n            color: props.color,\n            showGradient: props.showGradient,\n            gradientColor: props.gradientColor,\n            barBackgroundPattern: props.barBackgroundPattern,\n            patternId: props.patternId,\n            label: item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''),\n            labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n            onPress: props.onPress,\n            xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n            renderTooltip: props.renderTooltip,\n            leftShiftForTooltip: props.leftShiftForTooltip || 0,\n            leftShiftForLastIndexTooltip: props.leftShiftForLastIndexTooltip || 0,\n            initialSpacing: initialSpacing,\n            selectedIndex: selectedIndex,\n            setSelectedIndex: setSelectedIndex,\n            activeOpacity: props.activeOpacity || 0.2\n          }, index);\n        }) : data.map(function (item, index) {\n          return _jsx(RenderBars, {\n            item: item,\n            index: index,\n            containerHeight: containerHeight,\n            maxValue: maxValue,\n            spacing: item.spacing === 0 ? 0 : item.spacing || spacing,\n            propSpacing: spacing,\n            side: side,\n            data: data,\n            minHeight: props.minHeight || 0,\n            barWidth: props.barWidth,\n            sideWidth: props.sideWidth,\n            labelWidth: labelWidth,\n            opacity: opacity,\n            isThreeD: isThreeD,\n            isAnimated: isAnimated,\n            animationDuration: animationDuration,\n            rotateLabel: rotateLabel,\n            animatedHeight: animatedHeight,\n            appearingOpacity: appearingOpacity,\n            roundedTop: props.roundedTop,\n            roundedBottom: props.roundedBottom,\n            disablePress: props.disablePress,\n            frontColor: props.frontColor,\n            sideColor: props.sideColor,\n            topColor: props.topColor,\n            showGradient: props.showGradient,\n            gradientColor: props.gradientColor,\n            activeOpacity: props.activeOpacity,\n            cappedBars: props.cappedBars,\n            capThickness: props.capThickness,\n            capColor: props.capColor,\n            capRadius: props.capRadius,\n            showXAxisIndices: showXAxisIndices,\n            xAxisIndicesHeight: xAxisIndicesHeight,\n            xAxisIndicesWidth: xAxisIndicesWidth,\n            xAxisIndicesColor: xAxisIndicesColor,\n            horizontal: horizontal,\n            intactTopLabel: intactTopLabel,\n            barBorderRadius: props.barBorderRadius,\n            autoShiftLabels: autoShiftLabels,\n            barBackgroundPattern: props.barBackgroundPattern,\n            patternId: props.patternId,\n            barMarginBottom: props.barMarginBottom,\n            label: item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''),\n            labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n            onPress: props.onPress,\n            xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n            renderTooltip: props.renderTooltip,\n            leftShiftForTooltip: props.leftShiftForTooltip || 0,\n            leftShiftForLastIndexTooltip: props.leftShiftForLastIndexTooltip || 0,\n            initialSpacing: initialSpacing,\n            selectedIndex: selectedIndex,\n            setSelectedIndex: setSelectedIndex,\n            barStyle: props.barStyle\n          }, index);\n        })]\n      })\n    })]\n  });\n};","map":{"version":3,"names":["React","Fragment","useCallback","useEffect","useMemo","useState","useRef","styles","RenderBars","RenderStackBars","Rule","bezierCommand","svgPath","Svg","Circle","Path","Rect","Text","CanvasText","BarChart","props","scrollRef","points","setPoints","arrowPoints","setArrowPoints","selectedIndex","setSelectedIndex","showLine","initialSpacing","data","yAxisOffset","map","item","value","lineData","lineBehindBars","defaultLineConfig","curved","isAnimated","thickness","color","hideDataPoints","dataPointsShape","dataPointsWidth","dataPointsHeight","dataPointsColor","dataPointsRadius","textColor","textFontSize","textShiftX","textShiftY","shiftY","delay","startIndex","endIndex","length","showArrow","arrowConfig","width","strokeWidth","strokeColor","fillColor","showArrowBase","lineConfig","containerHeight","height","noOfSections","horizSections","horizSectionsBelow","stepHeight","spacing","labelWidth","scrollToEnd","scrollAnimation","labelsExtraHeight","totalWidth","maxItem","minItem","stackData","forEach","stackItem","stackSum","stacks","reduce","acc","stack","barWidth","showFractionalValues","roundToDigits","parseFloat","toFixed","maxValue","minValue","stepValue","noOfSectionsBelowXAxis","disableScroll","showScrollIndicator","side","rotateLabel","animationDuration","opacity","isThreeD","showVerticalLines","rulesThickness","rulesLength","rulesColor","verticalLinesThickness","verticalLinesHeight","verticalLinesColor","verticalLinesZIndex","verticalLinesAr","noOfVerticalLines","Array","keys","verticalLinesSpacing","showYAxisIndices","showXAxisIndices","yAxisIndicesHeight","xAxisIndicesHeight","yAxisIndicesWidth","xAxisIndicesWidth","xAxisIndicesColor","yAxisIndicesColor","yAxisLabelPrefix","yAxisLabelSuffix","yAxisSide","xAxisThickness","xAxisLength","xAxisColor","hideRules","yAxisThickness","yAxisColor","yAxisTextStyle","yAxisTextNumberOfLines","xAxisTextNumberOfLines","yAxisLabelContainerStyle","horizontalRulesStyle","yAxisLabelWidth","hideYAxisText","backgroundColor","horizontal","yAxisAtTop","intactTopLabel","hideOrigin","rulesType","xAxisType","dashWidth","dashGap","heightValue","Animated","Value","opacValue","widthValue","autoShiftLabels","labelsAppear","setValue","timing","toValue","duration","easing","Easing","ease","useNativeDriver","start","decreaseWidth","linear","getArrowPoints","arrowTipX","arrowTipY","x1","y1","arrowLength","arrowWidth","dataLineSlope","d","d2","interSectionX","Math","sqrt","interSectionY","arrowBasex1","arrowBaseY1","arrowBaseX2","arrowBaseY2","arrowBaseSlope","pp","i","currentBarWidth","replace","ppArray","trim","split","parseInt","p1Array","push","xx","setTimeout","defaultReferenceConfig","type","labelText","labelTextStyle","showReferenceLine1","referenceLine1Position","referenceLine1Config","showReferenceLine2","referenceLine2Position","referenceLine2Config","showReferenceLine3","referenceLine3Position","referenceLine3Config","pop","yAxisLabelTexts","toString","animatedHeight","interpolate","inputRange","outputRange","appearingOpacity","animatedWidth","getLabel","val","index","label","undefined","Number","renderHorizSections","sectionItems","horizBar","min","transform","rotateY","leftLabel","borderRightWidth","borderColor","translateX","lastLeftPart","leftPart","hideAxesAndRules","position","zIndex","top","marginBottom","marginTop","bottom","left","renderSpecificVerticalLines","dataForRender","showVerticalLine","verticalLineThickness","verticalLineColor","renderDataPoints","dataPointText","renderSpecificDataPoints","showDataPoint","dataPointShape","dataPointWidth","dataPointHeight","dataPointColor","dataPointRadius","renderAnimatedLine","renderLine","container","marginLeft","rotate","translateY","evt","renderTooltip","current","animated","paddingLeft","paddingBottom","alignItems","indicatorColor","totalSpacing","actualSpacing","console","log","disablePress","barBorderRadius","showGradient","gradientColor","barBackgroundPattern","patternId","xAxisLabelTexts","xAxisLabelTextStyle","onPress","leftShiftForTooltip","leftShiftForLastIndexTooltip","activeOpacity","minHeight","sideWidth","roundedTop","roundedBottom","frontColor","sideColor","topColor","cappedBars","capThickness","capColor","capRadius","barMarginBottom","barStyle"],"sources":["C:/Users/oplati/Desktop/expo dragdrop/node_modules/react-native-gifted-charts/src/BarChart/index.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport {\n  View,\n  Animated,\n  Easing,\n  Text,\n  ColorValue,\n  ScrollView,\n} from 'react-native';\nimport {styles} from './styles';\nimport RenderBars from './RenderBars';\nimport RenderStackBars from './RenderStackBars';\nimport Rule from '../Components/lineSvg';\nimport {bezierCommand, svgPath} from '../utils';\nimport Svg, {Circle, Path, Rect, Text as CanvasText} from 'react-native-svg';\n\ntype PropTypes = {\n  width?: number;\n  height?: number;\n  minHeight?: number;\n  noOfSections?: number;\n  noOfSectionsBelowXAxis?: number;\n  maxValue?: number;\n  minValue?: number;\n  stepHeight?: number;\n  stepValue?: number;\n  spacing?: number;\n  data?: any;\n  stackData?: any;\n  side?: String;\n  rotateLabel?: Boolean;\n  isAnimated?: Boolean;\n  animationDuration?: number;\n  // animationEasing?: any;\n  opacity?: number;\n  isThreeD?: Boolean;\n  xAxisLength?: number;\n  xAxisThickness?: number;\n  xAxisColor?: ColorValue;\n  yAxisThickness?: number;\n  yAxisColor?: ColorValue;\n  xAxisType?: String;\n  yAxisLabelContainerStyle?: any;\n  horizontalRulesStyle?: any;\n  yAxisTextStyle?: any;\n  yAxisTextNumberOfLines?: number;\n  xAxisTextNumberOfLines?: number;\n  yAxisLabelWidth?: number;\n  hideYAxisText?: Boolean;\n  yAxisSide?: string;\n  yAxisOffset?: number;\n  initialSpacing?: number;\n  barWidth?: number;\n  sideWidth?: number;\n  showLine?: Boolean;\n  lineData?: any;\n  lineConfig?: lineConfigType;\n  lineBehindBars?: boolean;\n\n  cappedBars?: Boolean;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n\n  hideAxesAndRules?: Boolean;\n  hideRules?: Boolean;\n  rulesLength?: number;\n  rulesColor?: ColorValue;\n  rulesThickness?: number;\n  rulesType?: String;\n  dashWidth?: number;\n  dashGap?: number;\n  showReferenceLine1?: Boolean;\n  referenceLine1Config?: referenceConfigType;\n  referenceLine1Position?: number;\n  showReferenceLine2?: Boolean;\n  referenceLine2Config?: referenceConfigType;\n  referenceLine2Position?: number;\n  showReferenceLine3?: Boolean;\n  referenceLine3Config?: referenceConfigType;\n  referenceLine3Position?: number;\n  showVerticalLines?: Boolean;\n  verticalLinesThickness?: number;\n  verticalLinesHeight?: number;\n  verticalLinesColor?: ColorValue;\n  verticalLinesZIndex?: number;\n  noOfVerticalLines?: number;\n  verticalLinesSpacing?: number;\n\n  showYAxisIndices?: Boolean;\n  showXAxisIndices?: Boolean;\n  yAxisIndicesHeight?: number;\n  xAxisIndicesHeight?: number;\n  yAxisIndicesWidth?: number;\n  xAxisIndicesWidth?: number;\n  xAxisIndicesColor?: ColorValue;\n  yAxisIndicesColor?: ColorValue;\n\n  showFractionalValues?: Boolean;\n  roundToDigits?: number;\n  backgroundColor?: ColorValue;\n\n  disableScroll?: Boolean;\n  showScrollIndicator?: Boolean;\n  indicatorColor?: 'black' | 'default' | 'white';\n  roundedTop?: Boolean;\n  roundedBottom?: Boolean;\n  disablePress?: boolean;\n\n  frontColor?: ColorValue;\n  color?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  gradientColor?: ColorValue;\n  showGradient?: Boolean;\n  activeOpacity?: number;\n\n  horizontal?: Boolean;\n  yAxisAtTop?: Boolean;\n\n  intactTopLabel?: Boolean;\n\n  horizSections?: Array<sectionType>;\n  barBorderRadius?: number;\n  hideOrigin?: Boolean;\n  labelWidth?: number;\n  yAxisLabelTexts?: Array<string>;\n  xAxisLabelTexts?: Array<string>;\n  xAxisLabelTextStyle?: any;\n  yAxisLabelPrefix?: String;\n  yAxisLabelSuffix?: String;\n  autoShiftLabels?: Boolean;\n  scrollToEnd?: Boolean;\n  scrollAnimation?: Boolean;\n  labelsExtraHeight?: number;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  barMarginBottom?: number;\n  onPress?: Function;\n  renderTooltip?: Function;\n  leftShiftForTooltip?: number;\n  leftShiftForLastIndexTooltip?: number;\n  barStyle?: object;\n};\ntype lineConfigType = {\n  initialSpacing?: number;\n  curved?: Boolean;\n  isAnimated?: Boolean;\n  delay?: number;\n  thickness?: number;\n  color?: ColorValue | String | any;\n  hideDataPoints?: Boolean;\n  dataPointsShape?: String;\n  dataPointsWidth?: number;\n  dataPointsHeight?: number;\n  dataPointsColor?: ColorValue | String | any;\n  dataPointsRadius?: number;\n  textColor?: ColorValue | String | any;\n  textFontSize?: number;\n  textShiftX?: number;\n  textShiftY?: number;\n  shiftY?: number;\n  startIndex?: number;\n  endIndex?: number;\n  showArrow?: boolean;\n  arrowConfig?: arrowType;\n};\ntype arrowType = {\n  length?: number;\n  width?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n  fillColor?: string;\n  showArrowBase?: boolean;\n};\ntype referenceConfigType = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n  labelText: String;\n  labelTextStyle: any;\n};\ntype sectionType = {\n  value: string;\n};\ntype itemType = {\n  value?: number;\n  onPress?: any;\n  frontColor?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  showGradient?: Boolean;\n  gradientColor?: any;\n  label?: String;\n  barWidth?: number;\n  sideWidth?: number;\n  labelTextStyle?: any;\n  topLabelComponent?: Function;\n  topLabelContainerStyle?: any;\n  disablePress?: any;\n  labelComponent?: View;\n  spacing?: number;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  barStyle?: object;\n};\n\nexport const BarChart = (props: PropTypes) => {\n  const scrollRef = useRef();\n  const [points, setPoints] = useState('');\n  const [arrowPoints, setArrowPoints] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const showLine = props.showLine || false;\n  const initialSpacing =\n    props.initialSpacing === 0 ? 0 : props.initialSpacing || 40;\n  const data = useMemo(() => {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(item => {\n        item.value = item.value - props.yAxisOffset;\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  const lineData = props.lineData || data;\n  const lineBehindBars = props.lineBehindBars || false;\n  const defaultLineConfig = {\n    initialSpacing: initialSpacing,\n    curved: false,\n    isAnimated: false,\n    thickness: 1,\n    color: 'black',\n    hideDataPoints: false,\n    dataPointsShape: 'circular',\n    dataPointsWidth: 2,\n    dataPointsHeight: 2,\n    dataPointsColor: 'black',\n    dataPointsRadius: 3,\n    textColor: 'gray',\n    textFontSize: 10,\n    textShiftX: 0,\n    textShiftY: 0,\n    shiftY: 0,\n    delay: 0,\n    startIndex: 0,\n    endIndex: lineData.length - 1,\n    showArrow: false,\n    arrowConfig: {\n      length: 10,\n      width: 10,\n      strokeWidth: 1,\n      strokeColor: 'black',\n      fillColor: 'none',\n      showArrowBase: true,\n    },\n  };\n  const lineConfig = props.lineConfig\n    ? {\n        initialSpacing:\n          props.lineConfig.initialSpacing === 0\n            ? 0\n            : props.lineConfig.initialSpacing ||\n              defaultLineConfig.initialSpacing,\n        curved: props.lineConfig.curved || defaultLineConfig.curved,\n        isAnimated: props.lineConfig.isAnimated || defaultLineConfig.isAnimated,\n        thickness: props.lineConfig.thickness || defaultLineConfig.thickness,\n        color: props.lineConfig.color || defaultLineConfig.color,\n        hideDataPoints:\n          props.lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n        dataPointsShape:\n          props.lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n        dataPointsHeight:\n          props.lineConfig.dataPointsHeight ||\n          defaultLineConfig.dataPointsHeight,\n        dataPointsWidth:\n          props.lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n        dataPointsColor:\n          props.lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n        dataPointsRadius:\n          props.lineConfig.dataPointsRadius ||\n          defaultLineConfig.dataPointsRadius,\n        textColor: props.lineConfig.textColor || defaultLineConfig.textColor,\n        textFontSize:\n          props.lineConfig.textFontSize || defaultLineConfig.textFontSize,\n        textShiftX: props.lineConfig.textShiftX || defaultLineConfig.textShiftX,\n        textShiftY: props.lineConfig.textShiftY || defaultLineConfig.textShiftY,\n        shiftY: props.lineConfig.shiftY || defaultLineConfig.shiftY,\n        delay: props.lineConfig.delay || defaultLineConfig.delay,\n        startIndex: props.lineConfig.startIndex || defaultLineConfig.startIndex,\n        endIndex:\n          props.lineConfig.endIndex === 0\n            ? 0\n            : props.lineConfig.endIndex || defaultLineConfig.endIndex,\n\n        showArrow: props.lineConfig.showArrow ?? defaultLineConfig.showArrow,\n        arrowConfig: {\n          length:\n            props.lineConfig.arrowConfig?.length ??\n            defaultLineConfig.arrowConfig.length,\n          width:\n            props.lineConfig.arrowConfig?.width ??\n            defaultLineConfig.arrowConfig.width,\n\n          strokeWidth:\n            props.lineConfig.arrowConfig?.strokeWidth ??\n            defaultLineConfig.arrowConfig.strokeWidth,\n\n          strokeColor:\n            props.lineConfig.arrowConfig?.strokeColor ??\n            defaultLineConfig.arrowConfig.strokeColor,\n\n          fillColor:\n            props.lineConfig.arrowConfig?.fillColor ??\n            defaultLineConfig.arrowConfig.fillColor,\n\n          showArrowBase:\n            props.lineConfig.arrowConfig?.showArrowBase ??\n            defaultLineConfig.arrowConfig.showArrowBase,\n        },\n      }\n    : defaultLineConfig;\n  const containerHeight = props.height || 200;\n  const noOfSections = props.noOfSections || 10;\n  const horizSections = [{value: '0'}];\n  const horizSectionsBelow = [];\n  const stepHeight = props.stepHeight || containerHeight / noOfSections;\n  const spacing = props.spacing === 0 ? 0 : props.spacing || 20;\n  const labelWidth = props.labelWidth || 0;\n  const scrollToEnd = props.scrollToEnd || false;\n  const scrollAnimation = props.scrollAnimation === false ? false : true;\n  const labelsExtraHeight = props.labelsExtraHeight || 0;\n\n  let totalWidth = spacing;\n  let maxItem = 0,\n    minItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(stackItem => {\n      // console.log('stackItem', stackItem);\n      let stackSum = stackItem.stacks.reduce(\n        (acc, stack) => acc + stack.value,\n        0,\n      );\n      // console.log('stackSum--->', stackSum);\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n      totalWidth +=\n        (stackItem.stacks[0].barWidth || props.barWidth || 30) + spacing;\n      // console.log('totalWidth for stack===', totalWidth);\n    });\n  } else {\n    data.forEach((item: itemType) => {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n      totalWidth +=\n        (item.barWidth || props.barWidth || 30) +\n        (item.spacing === 0 ? 0 : item.spacing || spacing);\n      // console.log('totalWidth for bar===', totalWidth);\n    });\n  }\n  if (props.showFractionalValues || props.roundToDigits) {\n    maxItem *= 10 * (props.roundToDigits || 1);\n    maxItem = maxItem + (10 - (maxItem % 10));\n    maxItem /= 10 * (props.roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(props.roundToDigits || 1));\n    if (minItem !== 0) {\n      minItem *= 10 * (props.roundToDigits || 1);\n      minItem = minItem - (10 + (minItem % 10));\n      minItem /= 10 * (props.roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(props.roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - (maxItem % 10));\n    if (minItem !== 0) {\n      minItem = minItem - (10 + (minItem % 10));\n    }\n  }\n\n  const maxValue = props.maxValue || maxItem;\n  const minValue = props.minValue || minItem;\n\n  const stepValue = props.stepValue || maxValue / noOfSections;\n  const noOfSectionsBelowXAxis =\n    props.noOfSectionsBelowXAxis || -minValue / stepValue;\n  const disableScroll = props.disableScroll || false;\n  const showScrollIndicator = props.showScrollIndicator || false;\n  // const oldData = props.oldData || [];\n  const side = props.side || '';\n  const rotateLabel = props.rotateLabel || false;\n  const isAnimated = props.isAnimated || false;\n  const animationDuration = props.animationDuration || 800;\n  // const animationEasing = props.animationEasing || Easing.ease;\n  const opacity = props.opacity || 1;\n  const isThreeD = props.isThreeD || false;\n\n  const showVerticalLines = props.showVerticalLines || false;\n  const rulesThickness =\n    props.rulesThickness === 0 ? 0 : props.rulesThickness || 1;\n  const rulesLength = props.rulesLength;\n  const rulesColor = props.rulesColor || 'lightgray';\n  const verticalLinesThickness =\n    props.verticalLinesThickness === 0 ? 0 : props.verticalLinesThickness || 1;\n  const verticalLinesHeight = props.verticalLinesHeight;\n  const verticalLinesColor = props.verticalLinesColor || 'lightgray';\n  const verticalLinesZIndex = props.verticalLinesZIndex || -1;\n  let verticalLinesAr = [];\n  props.noOfVerticalLines\n    ? (verticalLinesAr = [...Array(props.noOfVerticalLines).keys()])\n    : (verticalLinesAr = [\n        ...Array(props.stackData ? props.stackData.length : data.length).keys(),\n      ]);\n  const verticalLinesSpacing = props.verticalLinesSpacing || 0;\n\n  const showYAxisIndices = props.showYAxisIndices || false;\n  const showXAxisIndices = props.showXAxisIndices || false;\n  const yAxisIndicesHeight = props.yAxisIndicesHeight || 2;\n  const xAxisIndicesHeight = props.xAxisIndicesHeight || 2;\n  const yAxisIndicesWidth = props.yAxisIndicesWidth || 4;\n  const xAxisIndicesWidth = props.xAxisIndicesWidth || 4;\n  const xAxisIndicesColor = props.xAxisIndicesColor || 'black';\n  const yAxisIndicesColor = props.yAxisIndicesColor || 'black';\n\n  const yAxisLabelPrefix = props.yAxisLabelPrefix || '';\n  const yAxisLabelSuffix = props.yAxisLabelSuffix || '';\n  const yAxisSide = props.yAxisSide || 'left';\n\n  const xAxisThickness =\n    props.xAxisThickness === 0\n      ? props.xAxisThickness\n      : props.xAxisThickness || 1;\n  const xAxisLength = props.xAxisLength;\n  const xAxisColor = props.xAxisColor || 'black';\n\n  const hideRules = props.hideRules || false;\n\n  const yAxisThickness =\n    props.yAxisThickness === 0\n      ? props.yAxisThickness\n      : props.yAxisThickness || 1;\n  const yAxisColor = props.yAxisColor || 'black';\n  const yAxisTextStyle = props.yAxisTextStyle;\n  const yAxisTextNumberOfLines = props.yAxisTextNumberOfLines || 1;\n  const xAxisTextNumberOfLines = props.xAxisTextNumberOfLines || 1;\n  const yAxisLabelContainerStyle = props.yAxisLabelContainerStyle;\n  const horizontalRulesStyle = props.horizontalRulesStyle;\n  const showFractionalValues = props.showFractionalValues || false;\n  const yAxisLabelWidth = props.yAxisLabelWidth || 35;\n  const hideYAxisText = props.hideYAxisText || false;\n\n  const backgroundColor = props.backgroundColor || 'transparent';\n  const horizontal = props.horizontal || false;\n  const yAxisAtTop = props.yAxisAtTop || false;\n  const intactTopLabel = props.intactTopLabel || false;\n  const hideOrigin = props.hideOrigin || false;\n\n  const rulesType = props.rulesType || 'line';\n  const xAxisType = props.xAxisType || 'solid';\n  const dashWidth = props.dashWidth === 0 ? 0 : props.dashWidth || 4;\n  const dashGap = props.dashGap === 0 ? 0 : props.dashGap || 8;\n\n  const heightValue = useMemo(() => new Animated.Value(0), []);\n  const opacValue = useMemo(() => new Animated.Value(0), []);\n  const widthValue = useMemo(() => new Animated.Value(0), []);\n  const autoShiftLabels = props.autoShiftLabels || false;\n\n  const labelsAppear = useCallback(() => {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false,\n    }).start();\n  }, [opacValue]);\n  // const moveBar = useCallback(() => {\n  //   heightValue.setValue(0);\n  //   Animated.timing(heightValue, {\n  //     toValue: 1,\n  //     duration: animationDuration,\n  //     easing: animationEasing,\n  //     useNativeDriver: false,\n  //   }).start();\n  // }, [animationDuration, animationEasing, heightValue]);\n\n  const decreaseWidth = useCallback(() => {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  }, [animationDuration, widthValue]);\n  // console.log('olddata', oldData);\n\n  const getArrowPoints = (\n    arrowTipX,\n    arrowTipY,\n    x1,\n    y1,\n    arrowLength,\n    arrowWidth,\n    showArrowBase,\n  ) => {\n    let dataLineSlope = (arrowTipY - y1) / (arrowTipX - x1);\n    let d = arrowLength;\n    let d2 = arrowWidth / 2;\n    let interSectionX =\n      arrowTipX - Math.sqrt((d * d) / (dataLineSlope * dataLineSlope + 1));\n    let interSectionY = arrowTipY - dataLineSlope * (arrowTipX - interSectionX);\n\n    let arrowBasex1, arrowBaseY1, arrowBaseX2, arrowBaseY2;\n    if (dataLineSlope === 0) {\n      arrowBasex1 = interSectionX;\n      arrowBaseY1 = interSectionY - d2;\n      arrowBaseX2 = interSectionX;\n      arrowBaseY2 = interSectionY + d2;\n    } else {\n      let arrowBaseSlope = -1 / dataLineSlope;\n      arrowBasex1 =\n        interSectionX -\n        Math.sqrt((d2 * d2) / (arrowBaseSlope * arrowBaseSlope + 1));\n      arrowBaseY1 =\n        interSectionY - arrowBaseSlope * (interSectionX - arrowBasex1);\n\n      arrowBaseX2 =\n        interSectionX +\n        Math.sqrt((d2 * d2) / (arrowBaseSlope * arrowBaseSlope + 1));\n      arrowBaseY2 =\n        interSectionY + arrowBaseSlope * (interSectionX - arrowBasex1);\n    }\n    let arrowPoints = ` M${interSectionX} ${interSectionY}`;\n    arrowPoints += ` ${showArrowBase ? 'L' : 'M'}${arrowBasex1} ${arrowBaseY1}`;\n    arrowPoints += ` L${arrowTipX} ${arrowTipY}`;\n    arrowPoints += ` M${interSectionX} ${interSectionY}`;\n    arrowPoints += ` ${showArrowBase ? 'L' : 'M'}${arrowBaseX2} ${arrowBaseY2}`;\n    arrowPoints += ` L${arrowTipX} ${arrowTipY}`;\n\n    return arrowPoints;\n  };\n\n  useEffect(() => {\n    if (showLine) {\n      let pp = '';\n      if (!lineConfig.curved) {\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            (data && data[i] && data[i].barWidth) || props.barWidth || 30;\n          pp +=\n            'L' +\n            (yAxisLabelWidth +\n              lineConfig.initialSpacing +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * i) +\n            ' ' +\n            (containerHeight -\n              lineConfig.shiftY -\n              (lineData[i].value * containerHeight) / maxValue) +\n            ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n        if (lineData.length > 1 && lineConfig.showArrow) {\n          let ppArray = pp.trim().split(' ');\n          let arrowTipY = parseInt(ppArray[ppArray.length - 1]);\n          let arrowTipX = parseInt(\n            ppArray[ppArray.length - 2].replace('L', ''),\n          );\n          let y1 = parseInt(ppArray[ppArray.length - 3]);\n          let x1 = parseInt(ppArray[ppArray.length - 4].replace('L', ''));\n\n          let arrowPoints = getArrowPoints(\n            arrowTipX,\n            arrowTipY,\n            x1,\n            y1,\n            lineConfig.arrowConfig.length,\n            lineConfig.arrowConfig.width,\n            lineConfig.arrowConfig.showArrowBase,\n          );\n\n          setArrowPoints(arrowPoints);\n        }\n      } else {\n        let p1Array = [];\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            (data && data[i] && data[i].barWidth) || props.barWidth || 30;\n          p1Array.push([\n            yAxisLabelWidth +\n              lineConfig.initialSpacing +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * i,\n            containerHeight -\n              lineConfig.shiftY -\n              (lineData[i].value * containerHeight) / maxValue,\n          ]);\n          let xx = svgPath(p1Array, bezierCommand);\n          setPoints(xx);\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(() => decreaseWidth(), lineConfig.delay || 0);\n      }\n    }\n    // moveBar();\n    setTimeout(() => labelsAppear(), animationDuration);\n  }, [\n    animationDuration,\n    containerHeight,\n    data,\n    lineData,\n    decreaseWidth,\n    initialSpacing,\n    labelsAppear,\n    lineConfig.initialSpacing,\n    lineConfig.curved,\n    lineConfig.dataPointsWidth,\n    lineConfig.shiftY,\n    lineConfig.isAnimated,\n    lineConfig.delay,\n    lineConfig.startIndex,\n    lineConfig.endIndex,\n    maxValue,\n    props.barWidth,\n    showLine,\n    spacing,\n    yAxisLabelWidth,\n    lineConfig.showArrow,\n    lineConfig.arrowConfig.length,\n    lineConfig.arrowConfig.width,\n    lineConfig.arrowConfig.showArrowBase,\n  ]);\n\n  const defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: horizontal\n      ? props.width || totalWidth\n      : (props.width || totalWidth) + 11,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null,\n  };\n\n  const showReferenceLine1 = props.showReferenceLine1 || false;\n  const referenceLine1Position =\n    props.referenceLine1Position === 0\n      ? 0\n      : props.referenceLine1Position || containerHeight / 2;\n  const referenceLine1Config = props.referenceLine1Config\n    ? {\n        thickness: props.referenceLine1Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine1Config.width || props.width || totalWidth\n          : (props.referenceLine1Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine1Config.color || 'black',\n        type: props.referenceLine1Config.type || rulesType,\n        dashWidth: props.referenceLine1Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine1Config.dashGap || dashGap,\n        labelText:\n          props.referenceLine1Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          props.referenceLine1Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  const showReferenceLine2 = props.showReferenceLine2 || false;\n  const referenceLine2Position =\n    props.referenceLine2Position === 0\n      ? 0\n      : props.referenceLine2Position || (3 * containerHeight) / 2;\n  const referenceLine2Config = props.referenceLine2Config\n    ? {\n        thickness: props.referenceLine2Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine2Config.width || props.width || totalWidth\n          : (props.referenceLine2Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine2Config.color || 'black',\n        type: props.referenceLine2Config.type || rulesType,\n        dashWidth: props.referenceLine2Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine2Config.dashGap || dashGap,\n        labelText:\n          props.referenceLine2Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          props.referenceLine2Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  const showReferenceLine3 = props.showReferenceLine3 || false;\n  const referenceLine3Position =\n    props.referenceLine3Position === 0\n      ? 0\n      : props.referenceLine3Position || containerHeight / 3;\n  const referenceLine3Config = props.referenceLine3Config\n    ? {\n        thickness: props.referenceLine3Config.thickness || rulesThickness,\n        width: horizontal\n          ? props.referenceLine3Config.width || props.width || totalWidth\n          : (props.referenceLine3Config.width || props.width || totalWidth) +\n            11,\n        color: props.referenceLine3Config.color || 'black',\n        type: props.referenceLine3Config.type || rulesType,\n        dashWidth: props.referenceLine3Config.dashWidth || dashWidth,\n        dashGap: props.referenceLine3Config.dashGap || dashGap,\n        labelText:\n          props.referenceLine3Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          props.referenceLine3Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  horizSections.pop();\n  for (let i = 0; i <= noOfSections; i++) {\n    let value = maxValue - stepValue * i;\n    if (props.showFractionalValues || props.roundToDigits) {\n      value = parseFloat(value.toFixed(props.roundToDigits || 1));\n    }\n    horizSections.push({\n      value: props.yAxisLabelTexts\n        ? props.yAxisLabelTexts[noOfSections - i] ?? value.toString()\n        : value.toString(),\n    });\n  }\n  if (noOfSectionsBelowXAxis) {\n    for (let i = 1; i <= noOfSectionsBelowXAxis; i++) {\n      let value = stepValue * -i;\n      if (props.showFractionalValues || props.roundToDigits) {\n        value = parseFloat(value.toFixed(props.roundToDigits || 1));\n      }\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts\n          ? props.yAxisLabelTexts[noOfSectionsBelowXAxis - i] ??\n            value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  const animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%'],\n  });\n  const appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n  });\n\n  const animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth],\n  });\n\n  const getLabel = (val, index) => {\n    let label = '';\n    if (\n      showFractionalValues ||\n      (props.yAxisLabelTexts && props.yAxisLabelTexts[index] !== undefined)\n    ) {\n      if (val) {\n        label = props.yAxisOffset\n          ? (Number(val) + props.yAxisOffset).toString()\n          : val;\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    } else {\n      if (val) {\n        label = val.toString().split('.')[0];\n        if (props.yAxisOffset) {\n          label = (Number(label) + props.yAxisOffset).toString();\n        }\n      } else {\n        label = props.yAxisOffset ? props.yAxisOffset.toString() : '0';\n      }\n    }\n\n    return yAxisLabelPrefix + label + yAxisLabelSuffix;\n  };\n\n  const renderHorizSections = () => {\n    return (\n      <>\n        {horizSections.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: horizontal\n                    ? props.width || Math.min(300, totalWidth)\n                    : props.width || totalWidth + 11,\n                },\n                yAxisSide === 'right' && {transform: [{rotateY: '180deg'}]},\n                horizontalRulesStyle,\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                  },\n                  horizontal &&\n                    !yAxisAtTop && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width || Math.min(300, totalWidth)) +\n                            yAxisThickness,\n                        },\n                      ],\n                    },\n                  {\n                    height:\n                      index === noOfSections ? stepHeight / 2 : stepHeight,\n                    width: yAxisLabelWidth,\n                  },\n                  yAxisLabelContainerStyle,\n                ]}\n              />\n              <View\n                style={[\n                  index === noOfSections\n                    ? styles.lastLeftPart\n                    : styles.leftPart,\n                  {backgroundColor: backgroundColor},\n                ]}>\n                {index === noOfSections ? (\n                  <Rule\n                    config={{\n                      thickness: xAxisThickness,\n                      color: xAxisColor,\n                      width:\n                        xAxisLength ||\n                        (horizontal\n                          ? props.width || Math.min(300, totalWidth)\n                          : (props.width || totalWidth) + 11),\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: xAxisType,\n                    }}\n                  />\n                ) : hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width:\n                        rulesLength ||\n                        (horizontal\n                          ? props.width || Math.min(300, totalWidth)\n                          : (props.width || totalWidth) + 11),\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          );\n        })}\n\n        {\n          /***********************************************************************************************/\n          /**************************      Render the y axis labels separately      **********************/\n          /***********************************************************************************************/\n          props.hideAxesAndRules !== true &&\n            !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              let label = getLabel(sectionItems.value, index);\n              if (hideOrigin && index === horizSections.length - 1) {\n                label = '';\n              }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === 'right' && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width ? props.width : totalWidth) - 30,\n                        },\n                        {rotateY: '180deg'},\n                      ],\n                    },\n                    horizontal &&\n                      !yAxisAtTop && {\n                        transform: [\n                          {\n                            translateX:\n                              (props.width || Math.min(300, totalWidth)) +\n                              yAxisThickness +\n                              yAxisLabelWidth,\n                          },\n                        ],\n                      },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      yAxisSide === 'right' && {\n                        transform: [{rotateY: '180deg'}],\n                      },\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n        {horizSectionsBelow.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: horizontal\n                    ? props.width || totalWidth\n                    : props.width || totalWidth + 11,\n                },\n                yAxisSide === 'right' && {transform: [{rotateY: '180deg'}]},\n                index === 0 && {marginTop: stepHeight / 2},\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                  },\n                  horizontal &&\n                    !yAxisAtTop && {\n                      transform: [{translateX: totalWidth + yAxisThickness}],\n                    },\n                  {\n                    height: index === 0 ? stepHeight * 1.5 : stepHeight,\n                    width: yAxisLabelWidth,\n                  },\n                  index === 0 && {marginTop: -stepHeight / 2},\n                ]}\n              />\n              <View\n                style={[styles.leftPart, {backgroundColor: backgroundColor}]}>\n                {hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width:\n                        rulesLength ||\n                        (horizontal\n                          ? props.width || totalWidth\n                          : (props.width || totalWidth) + 11),\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          );\n        })}\n        {\n          /***********************************************************************************************/\n          /*************************      Render the y axis labels below origin      *********************/\n          /***********************************************************************************************/\n          props.hideAxesAndRules !== true &&\n            !hideYAxisText &&\n            horizSectionsBelow.map((sectionItems, index) => {\n              let label = getLabel(\n                horizSectionsBelow[horizSectionsBelow.length - 1 - index].value,\n                index,\n              );\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      bottom: stepHeight * (index - 1),\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === 'right' && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width ? props.width : totalWidth) - 30,\n                        },\n                        {rotateY: '180deg'},\n                      ],\n                    },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      yAxisSide === 'right' && {\n                        transform: [{rotateY: '180deg'}],\n                      },\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n\n        {\n          /***********************************************************************************************/\n          /*************************      Render the reference lines separately      *********************/\n          /***********************************************************************************************/\n          props.hideAxesAndRules !== true &&\n            !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              let label = getLabel(sectionItems.value, index);\n              if (hideOrigin && index === horizSections.length - 1) {\n                label = '';\n              }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === 'right' && {\n                      transform: [\n                        {\n                          translateX:\n                            (props.width ? props.width : totalWidth) - 30,\n                        },\n                        {rotateY: '180deg'},\n                      ],\n                    },\n                  ]}>\n                  {index === noOfSections && showReferenceLine1 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          (referenceLine1Position * containerHeight) / maxValue,\n                        left:\n                          yAxisSide === 'right'\n                            ? yAxisLabelWidth + yAxisThickness\n                            : yAxisLabelWidth + yAxisThickness - 5,\n                      }}>\n                      <Rule config={referenceLine1Config} />\n                      {referenceLine1Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            yAxisSide === 'right' && {\n                              transform: [{rotateY: '180deg'}],\n                            },\n                            referenceLine1Config.labelTextStyle,\n                          ]}>\n                          {referenceLine1Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine2 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          (referenceLine2Position * containerHeight) / maxValue,\n                        left:\n                          yAxisSide === 'right'\n                            ? yAxisLabelWidth + yAxisThickness\n                            : yAxisLabelWidth + yAxisThickness - 5,\n                      }}>\n                      <Rule config={referenceLine2Config} />\n                      {referenceLine2Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            yAxisSide === 'right' && {\n                              transform: [{rotateY: '180deg'}],\n                            },\n                            referenceLine2Config.labelTextStyle,\n                          ]}>\n                          {referenceLine2Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine3 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          (referenceLine3Position * containerHeight) / maxValue,\n                        left:\n                          yAxisSide === 'right'\n                            ? yAxisLabelWidth + yAxisThickness\n                            : yAxisLabelWidth + yAxisThickness - 5,\n                      }}>\n                      <Rule config={referenceLine3Config} />\n                      {referenceLine3Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            yAxisSide === 'right' && {\n                              transform: [{rotateY: '180deg'}],\n                            },\n                            referenceLine3Config.labelTextStyle,\n                          ]}>\n                          {referenceLine3Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n      </>\n    );\n  };\n\n  const renderSpecificVerticalLines = (dataForRender: any) => {\n    return dataForRender.map((item: any, index: number) => {\n      if (item.showVerticalLine) {\n        const currentBarWidth = item.barWidth || props.barWidth || 30;\n        return (\n          <Rect\n            x={\n              yAxisLabelWidth +\n              6 -\n              (item.verticalLineThickness || 1) / 2 -\n              1 -\n              (initialSpacing - currentBarWidth / 2) +\n              (currentBarWidth + spacing) * index\n            }\n            y={\n              containerHeight -\n              lineConfig.shiftY -\n              (item.value * containerHeight) / maxValue +\n              9\n            }\n            width={item.verticalLineThickness || 1}\n            height={\n              (item.value * containerHeight) / maxValue + lineConfig.shiftY\n            }\n            fill={item.verticalLineColor || 'lightgray'}\n          />\n        );\n      }\n      return null;\n    });\n  };\n\n  const renderDataPoints = () => {\n    return lineData.map((item: any, index: number) => {\n      if (index < lineConfig.startIndex || index > lineConfig.endIndex) {\n        return null;\n      }\n      // console.log('comes in');\n      const currentBarWidth = item.barWidth || props.barWidth || 30;\n      if (lineConfig.dataPointsShape === 'rectangular') {\n        return (\n          <Fragment key={index}>\n            <Rect\n              x={\n                yAxisLabelWidth +\n                lineConfig.initialSpacing +\n                6 -\n                (initialSpacing - currentBarWidth / 2) -\n                lineConfig.dataPointsWidth +\n                (currentBarWidth + spacing) * index\n              }\n              y={\n                containerHeight -\n                lineConfig.shiftY -\n                lineConfig.dataPointsHeight / 2 -\n                (item.value * containerHeight) / maxValue\n              }\n              width={lineConfig.dataPointsWidth}\n              height={lineConfig.dataPointsHeight}\n              fill={lineConfig.dataPointsColor}\n            />\n            {item.dataPointText && (\n              <CanvasText\n                fill={item.textColor || lineConfig.textColor}\n                fontSize={item.textFontSize || lineConfig.textFontSize}\n                x={\n                  yAxisLabelWidth +\n                  lineConfig.initialSpacing +\n                  6 -\n                  (initialSpacing - currentBarWidth / 2) -\n                  lineConfig.dataPointsWidth +\n                  (currentBarWidth + spacing) * index +\n                  (item.textShiftX || lineConfig.textShiftX || 0)\n                }\n                y={\n                  containerHeight -\n                  lineConfig.shiftY -\n                  lineConfig.dataPointsHeight / 2 -\n                  (item.value * containerHeight) / maxValue +\n                  (item.textShiftY || lineConfig.textShiftY || 0)\n                }>\n                {item.dataPointText}\n              </CanvasText>\n            )}\n          </Fragment>\n        );\n      }\n      return (\n        <Fragment key={index}>\n          <Circle\n            cx={\n              yAxisLabelWidth +\n              lineConfig.initialSpacing +\n              6 -\n              (initialSpacing - currentBarWidth / 2) -\n              lineConfig.dataPointsWidth / 2 +\n              (currentBarWidth + spacing) * index\n            }\n            cy={\n              containerHeight -\n              lineConfig.shiftY -\n              (item.value * containerHeight) / maxValue\n            }\n            r={lineConfig.dataPointsRadius}\n            fill={lineConfig.dataPointsColor}\n          />\n          {item.dataPointText && (\n            <CanvasText\n              fill={item.textColor || lineConfig.textColor}\n              fontSize={item.textFontSize || lineConfig.textFontSize}\n              x={\n                yAxisLabelWidth +\n                lineConfig.initialSpacing +\n                6 -\n                (initialSpacing - currentBarWidth / 2) -\n                lineConfig.dataPointsWidth +\n                (currentBarWidth + spacing) * index +\n                (item.textShiftX || lineConfig.textShiftX || 0)\n              }\n              y={\n                containerHeight -\n                lineConfig.shiftY -\n                lineConfig.dataPointsHeight / 2 -\n                (item.value * containerHeight) / maxValue +\n                (item.textShiftY || lineConfig.textShiftY || 0)\n              }>\n              {item.dataPointText}\n            </CanvasText>\n          )}\n        </Fragment>\n      );\n    });\n  };\n  const renderSpecificDataPoints = dataForRender => {\n    return dataForRender.map((item: any, index: number) => {\n      const currentBarWidth = item.barWidth || props.barWidth || 30;\n      if (item.showDataPoint) {\n        if (item.dataPointShape === 'rectangular') {\n          return (\n            <Fragment key={index}>\n              <Rect\n                x={\n                  initialSpacing -\n                  (item.dataPointWidth || 2) / 2 -\n                  1 +\n                  (currentBarWidth + spacing) * index\n                }\n                y={\n                  containerHeight -\n                  lineConfig.shiftY -\n                  (item.dataPointHeight || 2) / 2 +\n                  10 -\n                  (item.value * containerHeight) / maxValue\n                }\n                width={item.dataPointWidth || 2}\n                height={item.dataPointHeight || 2}\n                fill={item.dataPointColor || 'black'}\n              />\n              {item.dataPointText && (\n                <CanvasText\n                  fill={item.textColor || 'black'}\n                  fontSize={item.textFontSize || 10}\n                  x={\n                    initialSpacing -\n                    (item.dataPointWidth || 2) +\n                    spacing * index +\n                    (item.textShiftX || lineConfig.textShiftX || 0)\n                  }\n                  y={\n                    containerHeight -\n                    lineConfig.shiftY -\n                    (item.dataPointHeight || 2) / 2 +\n                    10 -\n                    (item.value * containerHeight) / maxValue +\n                    (item.textShiftY || lineConfig.textShiftY || 0)\n                  }>\n                  {item.dataPointText}\n                </CanvasText>\n              )}\n            </Fragment>\n          );\n        } else {\n          return (\n            <Fragment key={index}>\n              <Circle\n                cx={\n                  initialSpacing -\n                  (item.dataPointWidth || 2) / 2 +\n                  spacing * index\n                }\n                cy={\n                  containerHeight -\n                  lineConfig.shiftY +\n                  10 -\n                  (item.value * containerHeight) / maxValue\n                }\n                r={item.dataPointRadius || 3}\n                fill={item.dataPointColor || 'black'}\n              />\n              {item.dataPointText && (\n                <CanvasText\n                  fill={item.textColor || 'black'}\n                  fontSize={item.textFontSize || 10}\n                  x={\n                    initialSpacing -\n                    (item.dataPointWidth || 2) +\n                    spacing * index +\n                    (item.textShiftX || lineConfig.textShiftX || 0)\n                  }\n                  y={\n                    containerHeight -\n                    lineConfig.shiftY -\n                    (item.dataPointHeight || 2) / 2 +\n                    10 -\n                    (item.value * containerHeight) / maxValue +\n                    (item.textShiftY || lineConfig.textShiftY || 0)\n                  }>\n                  {item.dataPointText}\n                </CanvasText>\n              )}\n            </Fragment>\n          );\n        }\n      }\n      return null;\n    });\n  };\n\n  const renderAnimatedLine = () => {\n    // console.log('animatedWidth is-------->', animatedWidth);\n    return (\n      <Animated.View\n        style={{\n          position: 'absolute',\n          height: containerHeight + 10,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: animatedWidth,\n          zIndex: lineBehindBars ? -1 : 100000,\n          // backgroundColor: 'wheat',\n        }}>\n        <Svg>\n          <Path\n            d={points}\n            fill=\"none\"\n            stroke={lineConfig.color}\n            strokeWidth={lineConfig.thickness}\n          />\n\n          {renderSpecificVerticalLines(data)}\n\n          {!lineConfig.hideDataPoints\n            ? renderDataPoints()\n            : renderSpecificDataPoints(data)}\n          {lineConfig.showArrow && (\n            <Path\n              d={arrowPoints}\n              fill={lineConfig.arrowConfig.fillColor}\n              stroke={lineConfig.arrowConfig.strokeColor}\n              strokeWidth={lineConfig.arrowConfig.strokeWidth}\n            />\n          )}\n        </Svg>\n      </Animated.View>\n    );\n  };\n\n  const renderLine = () => {\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          height: containerHeight + 10,\n          bottom: 60, //stepHeight * -0.5 + xAxisThickness,\n          width: totalWidth,\n          zIndex: lineBehindBars ? -1 : 100000,\n          // backgroundColor: 'rgba(200,150,150,0.1)'\n        }}>\n        <Svg>\n          <Path\n            d={points}\n            fill=\"none\"\n            stroke={lineConfig.color}\n            strokeWidth={lineConfig.thickness}\n          />\n          {renderSpecificVerticalLines(data)}\n\n          {!lineConfig.hideDataPoints\n            ? renderDataPoints()\n            : renderSpecificDataPoints(data)}\n          {lineConfig.showArrow && (\n            <Path\n              d={arrowPoints}\n              fill={lineConfig.arrowConfig.fillColor}\n              stroke={lineConfig.arrowConfig.strokeColor}\n              strokeWidth={lineConfig.arrowConfig.strokeWidth}\n            />\n          )}\n        </Svg>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          height:\n            containerHeight +\n            horizSectionsBelow.length * stepHeight +\n            labelsExtraHeight,\n        },\n        yAxisSide === 'right' && {marginLeft: yAxisLabelWidth + yAxisThickness},\n        props.width && !horizontal && {width: props.width},\n        horizontal && {transform: [{rotate: '90deg'}, {translateY: 15}]},\n      ]}>\n      {props.hideAxesAndRules !== true && renderHorizSections()}\n      <ScrollView\n        ref={scrollRef}\n        onTouchStart={evt => {\n          if (props.renderTooltip) {\n            setSelectedIndex(-1);\n          }\n        }}\n        onContentSizeChange={() => {\n          if (scrollRef.current && scrollToEnd) {\n            scrollRef.current.scrollToEnd({animated: scrollAnimation});\n          }\n        }}\n        style={[\n          {\n            marginLeft:\n              yAxisSide === 'right' ? -yAxisLabelWidth + 10 : yAxisLabelWidth,\n            position: 'absolute',\n            bottom: stepHeight * -0.5 - 60 + xAxisThickness,\n          },\n          props.width && {width: props.width - 11},\n          horizontal && {width: props.width || Math.min(300, totalWidth)},\n        ]}\n        scrollEnabled={!disableScroll}\n        contentContainerStyle={[\n          {\n            // backgroundColor: 'yellow',\n            height:\n              containerHeight +\n              130 +\n              horizSectionsBelow.length * stepHeight +\n              labelsExtraHeight,\n            paddingLeft: initialSpacing,\n            paddingBottom:\n              horizSectionsBelow.length * stepHeight + labelsExtraHeight,\n            alignItems: 'flex-end',\n          },\n          !props.width && {width: totalWidth},\n        ]}\n        showsHorizontalScrollIndicator={showScrollIndicator}\n        indicatorStyle={props.indicatorColor}\n        horizontal\n        // data={props.stackData || data}\n        keyExtractor={(item, index) => index.toString()}>\n        <Fragment>\n          {showVerticalLines &&\n            verticalLinesAr.map((item: itemType, index: number) => {\n              let totalSpacing = initialSpacing;\n              if (verticalLinesSpacing) {\n                totalSpacing = verticalLinesSpacing * (index + 1);\n              } else {\n                if (props.stackData) {\n                  totalSpacing +=\n                    (props.stackData[0].barWidth || props.barWidth || 30) / 2;\n                } else {\n                  totalSpacing +=\n                    (props.data[0].barWidth || props.barWidth || 30) / 2;\n                }\n                for (let i = 0; i < index; i++) {\n                  let actualSpacing = spacing;\n                  if (props.stackData) {\n                    if (i >= props.stackData.length - 1) {\n                      actualSpacing += (props.barWidth || 30) / 2;\n                    } else {\n                      if (\n                        props.stackData[i].spacing ||\n                        props.stackData[i].spacing === 0\n                      ) {\n                        actualSpacing = props.stackData[i].spacing;\n                      }\n                      if (props.stackData[i + 1].barWidth) {\n                        actualSpacing += props.stackData[i + 1].barWidth;\n                      } else {\n                        actualSpacing += props.barWidth || 30;\n                      }\n                    }\n                  } else {\n                    if (i >= props.data.length - 1) {\n                      actualSpacing += (props.barWidth || 30) / 2;\n                    } else {\n                      if (\n                        props.data[i].spacing ||\n                        props.data[i].spacing === 0\n                      ) {\n                        console.log('here for index ' + index + ' and i ' + i);\n                        actualSpacing = props.data[i].spacing;\n                      }\n                      if (props.data[i + 1].barWidth) {\n                        actualSpacing += props.data[i + 1].barWidth;\n                      } else {\n                        actualSpacing += props.barWidth || 30;\n                      }\n                    }\n                  }\n                  console.log('i = ' + i + ' actualSpacing ' + actualSpacing);\n                  totalSpacing += actualSpacing;\n                }\n              }\n\n              return (\n                <View\n                  key={index}\n                  style={{\n                    position: 'absolute',\n                    zIndex: verticalLinesZIndex || -1,\n                    marginBottom: xAxisThickness,\n                    height:\n                      verticalLinesHeight ||\n                      containerHeight + 15 - xAxisThickness,\n                    width: verticalLinesThickness,\n                    backgroundColor: verticalLinesColor,\n                    bottom: 60 + labelsExtraHeight,\n                    left: totalSpacing,\n                  }}\n                />\n              );\n            })}\n          {showLine\n            ? lineConfig.isAnimated\n              ? renderAnimatedLine()\n              : renderLine()\n            : null}\n          {props.stackData\n            ? props.stackData.map((item, index) => {\n                return (\n                  <RenderStackBars\n                    key={index}\n                    stackData={props.stackData}\n                    item={item}\n                    index={index}\n                    data={data}\n                    containerHeight={containerHeight}\n                    maxValue={maxValue}\n                    spacing={item.spacing === 0 ? 0 : item.spacing || spacing}\n                    propSpacing={spacing}\n                    xAxisThickness={xAxisThickness}\n                    barWidth={props.barWidth}\n                    opacity={opacity}\n                    disablePress={item.disablePress || props.disablePress}\n                    rotateLabel={rotateLabel}\n                    showXAxisIndices={showXAxisIndices}\n                    xAxisIndicesHeight={xAxisIndicesHeight}\n                    xAxisIndicesWidth={xAxisIndicesWidth}\n                    xAxisIndicesColor={xAxisIndicesColor}\n                    horizontal={horizontal}\n                    intactTopLabel={intactTopLabel}\n                    barBorderRadius={props.barBorderRadius}\n                    color={props.color}\n                    showGradient={props.showGradient}\n                    gradientColor={props.gradientColor}\n                    barBackgroundPattern={props.barBackgroundPattern}\n                    patternId={props.patternId}\n                    label={\n                      item.label ||\n                      (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n                        ? props.xAxisLabelTexts[index]\n                        : '')\n                    }\n                    labelTextStyle={\n                      item.labelTextStyle || props.xAxisLabelTextStyle\n                    }\n                    onPress={props.onPress}\n                    xAxisTextNumberOfLines={xAxisTextNumberOfLines}\n                    renderTooltip={props.renderTooltip}\n                    leftShiftForTooltip={props.leftShiftForTooltip || 0}\n                    leftShiftForLastIndexTooltip={\n                      props.leftShiftForLastIndexTooltip || 0\n                    }\n                    initialSpacing={initialSpacing}\n                    selectedIndex={selectedIndex}\n                    setSelectedIndex={setSelectedIndex}\n                    activeOpacity={props.activeOpacity || 0.2}\n                  />\n                );\n              })\n            : data.map((item, index) => (\n                <RenderBars\n                  key={index}\n                  item={item}\n                  index={index}\n                  containerHeight={containerHeight}\n                  maxValue={maxValue}\n                  spacing={item.spacing === 0 ? 0 : item.spacing || spacing}\n                  propSpacing={spacing}\n                  side={side}\n                  data={data}\n                  minHeight={props.minHeight || 0}\n                  barWidth={props.barWidth}\n                  sideWidth={props.sideWidth}\n                  labelWidth={labelWidth}\n                  opacity={opacity}\n                  isThreeD={isThreeD}\n                  isAnimated={isAnimated}\n                  animationDuration={animationDuration}\n                  rotateLabel={rotateLabel}\n                  animatedHeight={animatedHeight}\n                  appearingOpacity={appearingOpacity}\n                  roundedTop={props.roundedTop}\n                  roundedBottom={props.roundedBottom}\n                  disablePress={props.disablePress}\n                  frontColor={props.frontColor}\n                  sideColor={props.sideColor}\n                  topColor={props.topColor}\n                  showGradient={props.showGradient}\n                  gradientColor={props.gradientColor}\n                  activeOpacity={props.activeOpacity}\n                  cappedBars={props.cappedBars}\n                  capThickness={props.capThickness}\n                  capColor={props.capColor}\n                  capRadius={props.capRadius}\n                  showXAxisIndices={showXAxisIndices}\n                  xAxisIndicesHeight={xAxisIndicesHeight}\n                  xAxisIndicesWidth={xAxisIndicesWidth}\n                  xAxisIndicesColor={xAxisIndicesColor}\n                  horizontal={horizontal}\n                  intactTopLabel={intactTopLabel}\n                  barBorderRadius={props.barBorderRadius}\n                  autoShiftLabels={autoShiftLabels}\n                  barBackgroundPattern={props.barBackgroundPattern}\n                  patternId={props.patternId}\n                  barMarginBottom={props.barMarginBottom}\n                  label={\n                    item.label ||\n                    (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n                      ? props.xAxisLabelTexts[index]\n                      : '')\n                  }\n                  labelTextStyle={\n                    item.labelTextStyle || props.xAxisLabelTextStyle\n                  }\n                  onPress={props.onPress}\n                  xAxisTextNumberOfLines={xAxisTextNumberOfLines}\n                  renderTooltip={props.renderTooltip}\n                  leftShiftForTooltip={props.leftShiftForTooltip || 0}\n                  leftShiftForLastIndexTooltip={\n                    props.leftShiftForLastIndexTooltip || 0\n                  }\n                  initialSpacing={initialSpacing}\n                  selectedIndex={selectedIndex}\n                  setSelectedIndex={setSelectedIndex}\n                  barStyle={props.barStyle}\n                />\n              ))}\n        </Fragment>\n      </ScrollView>\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}