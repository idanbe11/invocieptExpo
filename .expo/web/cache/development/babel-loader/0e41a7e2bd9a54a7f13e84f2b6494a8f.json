{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { render } from 'react-dom';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ChooseAccount(_ref) {\n  var text = _ref.text,\n      onPress = _ref.onPress;\n  render();\n  var listOfItems = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  return _jsx(View, {\n    style: styles.body,\n    children: listOfItems.map(function (e) {\n      return _jsx(ToggleButton, {}, e + \"i\");\n    })\n  });\n}\n\nvar ToggleButton = function (_Component) {\n  _inherits(ToggleButton, _Component);\n\n  var _super = _createSuper(ToggleButton);\n\n  function ToggleButton() {\n    var _this;\n\n    _classCallCheck(this, ToggleButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      on: false\n    };\n    return _this;\n  }\n\n  _createClass(ToggleButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var on = this.state.on;\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.setState({\n            on: !_this2.state.on\n          });\n        },\n        style: {\n          height: 50,\n          width: 50,\n          backgroundColor: on ? \"green\" : \"red\"\n        },\n        children: _jsx(Text, {\n          children: \"ITEM\"\n        })\n      });\n    }\n  }]);\n\n  return ToggleButton;\n}(Component);\n\nvar styles = StyleSheet.create({\n  body: {\n    width: 390,\n    height: 844,\n    backgroundColor: '#F8F8FF'\n  },\n  button: {\n    position: 'absolute',\n    width: 128,\n    height: 50,\n    left: 220,\n    top: 100,\n    backgroundColor: 'white',\n    borderRadius: 12,\n    shadowColor: 'rgba(169, 169, 169, 0.64)',\n    shadowOffset: {\n      height: 1.2,\n      width: 0.1\n    }\n  },\n  buttonActive: {\n    backgroundColor: '#7471F2',\n    color: 'white'\n  },\n  buttonTitleActive: {\n    color: 'white'\n  },\n  buttonTitle: {\n    fontSize: 24,\n    color: 'black',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginLeft: 15,\n    marginTop: 5\n  },\n  button2: {\n    position: 'absolute',\n    width: 128,\n    height: 50,\n    left: 50,\n    top: 100,\n    backgroundColor: '#7471F2',\n    borderRadius: 12,\n    shadowColor: 'rgba(169, 169, 169, 0.64)',\n    shadowOffset: {\n      height: 1.2,\n      width: 0.1\n    }\n  },\n  buttonTitle2: {\n    fontSize: 24,\n    color: 'white',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginLeft: 15,\n    marginTop: 5\n  }\n});","map":{"version":3,"names":["StatusBar","LinearGradient","render","ChooseAccount","text","onPress","listOfItems","styles","body","map","e","ToggleButton","state","on","setState","height","width","backgroundColor","Component","StyleSheet","create","button","position","left","top","borderRadius","shadowColor","shadowOffset","buttonActive","color","buttonTitleActive","buttonTitle","fontSize","fontWeight","textAlign","marginLeft","marginTop","button2","buttonTitle2"],"sources":["C:/Users/oplati/InvocieptExpo-1/Cards/Register/RegisterAsEmail.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Image, SafeAreaView,Button,Alert, TouchableHighlight,TouchableWithoutFeedback, TouchableOpacity , TextInput} from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { render } from 'react-dom';\r\n\r\n\r\nexport default function ChooseAccount({text , onPress}) { \r\n    render() \r\n        let listOfItems = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    \r\n        return (\r\n          <View style={styles.body}>\r\n            {listOfItems.map(e => {\r\n              return <ToggleButton key={e + \"i\"} />;\r\n            })}\r\n          </View>\r\n        );\r\n      \r\n    }\r\n    \r\n    class ToggleButton extends Component {\r\n      state = {\r\n        on: false\r\n      };\r\n    \r\n      render() {\r\n        const { on } = this.state;\r\n    \r\n        return (\r\n          <TouchableOpacity\r\n            onPress={() => this.setState({ on: !this.state.on })}\r\n            style={{ height: 50, width: 50, backgroundColor: on ? \"green\" : \"red\" }}\r\n          >\r\n            <Text>ITEM</Text>\r\n          </TouchableOpacity>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    body: {\r\n        width: 390,\r\n        height: 844,\r\n        backgroundColor: '#F8F8FF',\r\n    },\r\n    button:{\r\n        position: 'absolute',\r\n        width: 128,\r\n        height: 50,\r\n        left: 220,\r\n        top: 100,\r\n        backgroundColor: 'white',\r\n        borderRadius: 12,\r\n        shadowColor: 'rgba(169, 169, 169, 0.64)',\r\n        shadowOffset: {\r\n        height: 1.2,\r\n        width: 0.1\r\n      }\r\n    },\r\n    buttonActive:{\r\n        backgroundColor: '#7471F2',\r\n        color:'white',\r\n    },\r\n    buttonTitleActive:{\r\n        color:'white',   \r\n    },\r\n    buttonTitle:{\r\n        fontSize:24,\r\n        color: 'black',\r\n        fontWeight:'700',\r\n        textAlign:'center',\r\n        marginLeft:15,\r\n        marginTop:5,\r\n    },\r\n    button2:{\r\n        position: 'absolute',\r\n        width: 128,\r\n        height: 50,\r\n        left: 50,\r\n        top: 100,\r\n        backgroundColor: '#7471F2',\r\n        borderRadius: 12,\r\n        shadowColor: 'rgba(169, 169, 169, 0.64)',\r\n        shadowOffset: {\r\n        height: 1.2,\r\n        width: 0.1\r\n      }\r\n    },\r\n    buttonTitle2:{\r\n        fontSize:24,\r\n        color: 'white',\r\n        fontWeight:'700',\r\n        textAlign:'center',\r\n        marginLeft:15,\r\n        marginTop:5,\r\n    },\r\n  });"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;;;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAGA,eAAe,SAASC,aAAT,OAAyC;EAAA,IAAjBC,IAAiB,QAAjBA,IAAiB;EAAA,IAAVC,OAAU,QAAVA,OAAU;EACpDH,MAAM;EACF,IAAII,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAlB;EAEA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,IAApB;IAAA,UACGF,WAAW,CAACG,GAAZ,CAAgB,UAAAC,CAAC,EAAI;MACpB,OAAO,KAAC,YAAD,MAAmBA,CAAC,GAAG,GAAvB,CAAP;IACD,CAFA;EADH,EADF;AAQH;;IAEKC,Y;;;;;;;;;;;;;;;UACJC,K,GAAQ;MACNC,EAAE,EAAE;IADE,C;;;;;;WAIR,kBAAS;MAAA;;MACP,IAAQA,EAAR,GAAe,KAAKD,KAApB,CAAQC,EAAR;MAEA,OACE,KAAC,gBAAD;QACE,OAAO,EAAE;UAAA,OAAM,MAAI,CAACC,QAAL,CAAc;YAAED,EAAE,EAAE,CAAC,MAAI,CAACD,KAAL,CAAWC;UAAlB,CAAd,CAAN;QAAA,CADX;QAEE,KAAK,EAAE;UAAEE,MAAM,EAAE,EAAV;UAAcC,KAAK,EAAE,EAArB;UAAyBC,eAAe,EAAEJ,EAAE,GAAG,OAAH,GAAa;QAAzD,CAFT;QAAA,UAIE,KAAC,IAAD;UAAA;QAAA;MAJF,EADF;IAQD;;;;EAhBwBK,S;;AAoB7B,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC/BZ,IAAI,EAAE;IACFQ,KAAK,EAAE,GADL;IAEFD,MAAM,EAAE,GAFN;IAGFE,eAAe,EAAE;EAHf,CADyB;EAM/BI,MAAM,EAAC;IACHC,QAAQ,EAAE,UADP;IAEHN,KAAK,EAAE,GAFJ;IAGHD,MAAM,EAAE,EAHL;IAIHQ,IAAI,EAAE,GAJH;IAKHC,GAAG,EAAE,GALF;IAMHP,eAAe,EAAE,OANd;IAOHQ,YAAY,EAAE,EAPX;IAQHC,WAAW,EAAE,2BARV;IASHC,YAAY,EAAE;MACdZ,MAAM,EAAE,GADM;MAEdC,KAAK,EAAE;IAFO;EATX,CANwB;EAoB/BY,YAAY,EAAC;IACTX,eAAe,EAAE,SADR;IAETY,KAAK,EAAC;EAFG,CApBkB;EAwB/BC,iBAAiB,EAAC;IACdD,KAAK,EAAC;EADQ,CAxBa;EA2B/BE,WAAW,EAAC;IACRC,QAAQ,EAAC,EADD;IAERH,KAAK,EAAE,OAFC;IAGRI,UAAU,EAAC,KAHH;IAIRC,SAAS,EAAC,QAJF;IAKRC,UAAU,EAAC,EALH;IAMRC,SAAS,EAAC;EANF,CA3BmB;EAmC/BC,OAAO,EAAC;IACJf,QAAQ,EAAE,UADN;IAEJN,KAAK,EAAE,GAFH;IAGJD,MAAM,EAAE,EAHJ;IAIJQ,IAAI,EAAE,EAJF;IAKJC,GAAG,EAAE,GALD;IAMJP,eAAe,EAAE,SANb;IAOJQ,YAAY,EAAE,EAPV;IAQJC,WAAW,EAAE,2BART;IASJC,YAAY,EAAE;MACdZ,MAAM,EAAE,GADM;MAEdC,KAAK,EAAE;IAFO;EATV,CAnCuB;EAiD/BsB,YAAY,EAAC;IACTN,QAAQ,EAAC,EADA;IAETH,KAAK,EAAE,OAFE;IAGTI,UAAU,EAAC,KAHF;IAITC,SAAS,EAAC,QAJD;IAKTC,UAAU,EAAC,EALF;IAMTC,SAAS,EAAC;EAND;AAjDkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}