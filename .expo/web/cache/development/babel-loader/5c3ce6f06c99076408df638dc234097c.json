{"ast":null,"code":"import I18nManager from \"../I18nManager\";\nimport multiplyStyleLengthValue from \"../../modules/multiplyStyleLengthValue\";\nvar emptyObject = {};\nvar borderTopLeftRadius = 'borderTopLeftRadius';\nvar borderTopRightRadius = 'borderTopRightRadius';\nvar borderBottomLeftRadius = 'borderBottomLeftRadius';\nvar borderBottomRightRadius = 'borderBottomRightRadius';\nvar borderLeftColor = 'borderLeftColor';\nvar borderLeftStyle = 'borderLeftStyle';\nvar borderLeftWidth = 'borderLeftWidth';\nvar borderRightColor = 'borderRightColor';\nvar borderRightStyle = 'borderRightStyle';\nvar borderRightWidth = 'borderRightWidth';\nvar right = 'right';\nvar marginLeft = 'marginLeft';\nvar marginRight = 'marginRight';\nvar paddingLeft = 'paddingLeft';\nvar paddingRight = 'paddingRight';\nvar left = 'left';\nvar PROPERTIES_FLIP = {\n  borderTopLeftRadius: borderTopRightRadius,\n  borderTopRightRadius: borderTopLeftRadius,\n  borderBottomLeftRadius: borderBottomRightRadius,\n  borderBottomRightRadius: borderBottomLeftRadius,\n  borderLeftColor: borderRightColor,\n  borderLeftStyle: borderRightStyle,\n  borderLeftWidth: borderRightWidth,\n  borderRightColor: borderLeftColor,\n  borderRightStyle: borderLeftStyle,\n  borderRightWidth: borderLeftWidth,\n  left: right,\n  marginLeft: marginRight,\n  marginRight: marginLeft,\n  paddingLeft: paddingRight,\n  paddingRight: paddingLeft,\n  right: left\n};\nvar PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\nvar PROPERTIES_VALUE = {\n  clear: true,\n  float: true,\n  textAlign: true\n};\n\nvar additiveInverse = function additiveInverse(value) {\n  return multiplyStyleLengthValue(value, -1);\n};\n\nvar i18nStyle = function i18nStyle(originalStyle) {\n  var _I18nManager$getConst = I18nManager.getConstants(),\n      doLeftAndRightSwapInRTL = _I18nManager$getConst.doLeftAndRightSwapInRTL,\n      isRTL = _I18nManager$getConst.isRTL;\n\n  var style = originalStyle || emptyObject;\n  var frozenProps = {};\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp)) {\n      continue;\n    }\n\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n      var convertedProp = PROPERTIES_I18N[originalProp];\n      prop = isRTL ? PROPERTIES_FLIP[convertedProp] : convertedProp;\n    } else if (isRTL && doLeftAndRightSwapInRTL && PROPERTIES_FLIP[originalProp]) {\n      prop = PROPERTIES_FLIP[originalProp];\n    }\n\n    if (PROPERTIES_VALUE.hasOwnProperty(originalProp)) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        if (originalValue === 'left') {\n          value = 'right';\n        } else if (originalValue === 'right') {\n          value = 'left';\n        }\n      }\n    }\n\n    if (prop === 'transitionProperty') {\n      if (PROPERTIES_I18N.hasOwnProperty(value)) {\n        var convertedValue = PROPERTIES_I18N[originalValue];\n        value = isRTL ? PROPERTIES_FLIP[convertedValue] : convertedValue;\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        var flippedValue = PROPERTIES_FLIP[originalValue];\n\n        if (flippedValue != null) {\n          value = flippedValue;\n        }\n      }\n    }\n\n    if (isRTL && prop === 'textShadowOffset') {\n      var invertedValue = additiveInverse(value.width);\n      value.width = invertedValue;\n      nextStyle[prop] = value;\n    } else if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (PROPERTIES_I18N[originalProp]) {\n      frozenProps[prop] = true;\n    }\n  }\n\n  return nextStyle;\n};\n\nexport default i18nStyle;","map":{"version":3,"names":["I18nManager","multiplyStyleLengthValue","emptyObject","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRightColor","borderRightStyle","borderRightWidth","right","marginLeft","marginRight","paddingLeft","paddingRight","left","PROPERTIES_FLIP","PROPERTIES_I18N","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartColor","borderStartStyle","borderStartWidth","borderEndColor","borderEndStyle","borderEndWidth","end","marginStart","marginEnd","paddingStart","paddingEnd","start","PROPERTIES_VALUE","clear","float","textAlign","additiveInverse","value","i18nStyle","originalStyle","getConstants","doLeftAndRightSwapInRTL","isRTL","style","frozenProps","nextStyle","originalProp","Object","prototype","hasOwnProperty","call","originalValue","prop","convertedProp","convertedValue","flippedValue","invertedValue","width"],"sources":["/Users/gilisaac/Documents/GitHub/invocieptExpo/node_modules/react-native-web/src/exports/StyleSheet/i18nStyle.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport I18nManager from '../I18nManager';\nimport multiplyStyleLengthValue from '../../modules/multiplyStyleLengthValue';\n\nconst emptyObject = {};\n\nconst borderTopLeftRadius = 'borderTopLeftRadius';\nconst borderTopRightRadius = 'borderTopRightRadius';\nconst borderBottomLeftRadius = 'borderBottomLeftRadius';\nconst borderBottomRightRadius = 'borderBottomRightRadius';\nconst borderLeftColor = 'borderLeftColor';\nconst borderLeftStyle = 'borderLeftStyle';\nconst borderLeftWidth = 'borderLeftWidth';\nconst borderRightColor = 'borderRightColor';\nconst borderRightStyle = 'borderRightStyle';\nconst borderRightWidth = 'borderRightWidth';\nconst right = 'right';\nconst marginLeft = 'marginLeft';\nconst marginRight = 'marginRight';\nconst paddingLeft = 'paddingLeft';\nconst paddingRight = 'paddingRight';\nconst left = 'left';\n\n// Map of LTR property names to their BiDi equivalent.\nconst PROPERTIES_FLIP = {\n  borderTopLeftRadius: borderTopRightRadius,\n  borderTopRightRadius: borderTopLeftRadius,\n  borderBottomLeftRadius: borderBottomRightRadius,\n  borderBottomRightRadius: borderBottomLeftRadius,\n  borderLeftColor: borderRightColor,\n  borderLeftStyle: borderRightStyle,\n  borderLeftWidth: borderRightWidth,\n  borderRightColor: borderLeftColor,\n  borderRightStyle: borderLeftStyle,\n  borderRightWidth: borderLeftWidth,\n  left: right,\n  marginLeft: marginRight,\n  marginRight: marginLeft,\n  paddingLeft: paddingRight,\n  paddingRight: paddingLeft,\n  right: left\n};\n\n// Map of I18N property names to their LTR equivalent.\nconst PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\n\nconst PROPERTIES_VALUE = {\n  clear: true,\n  float: true,\n  textAlign: true\n};\n\n// Invert the sign of a numeric-like value\nconst additiveInverse = (value: string | number) => multiplyStyleLengthValue(value, -1);\n\nconst i18nStyle = <T: {| [key: string]: any |}>(originalStyle: T): T => {\n  const { doLeftAndRightSwapInRTL, isRTL } = I18nManager.getConstants();\n  const style = originalStyle || emptyObject;\n  const frozenProps = {};\n  const nextStyle = {};\n\n  for (const originalProp in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp)) {\n      continue;\n    }\n    const originalValue = style[originalProp];\n    let prop = originalProp;\n    let value = originalValue;\n\n    // BiDi flip properties\n    if (PROPERTIES_I18N.hasOwnProperty(originalProp)) {\n      // convert start/end\n      const convertedProp = PROPERTIES_I18N[originalProp];\n      prop = isRTL ? PROPERTIES_FLIP[convertedProp] : convertedProp;\n    } else if (isRTL && doLeftAndRightSwapInRTL && (PROPERTIES_FLIP[originalProp]: any)) {\n      prop = PROPERTIES_FLIP[originalProp];\n    }\n\n    // BiDi flip values\n    if (PROPERTIES_VALUE.hasOwnProperty(originalProp)) {\n      if (originalValue === 'start') {\n        value = isRTL ? 'right' : 'left';\n      } else if (originalValue === 'end') {\n        value = isRTL ? 'left' : 'right';\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        if (originalValue === 'left') {\n          value = 'right';\n        } else if (originalValue === 'right') {\n          value = 'left';\n        }\n      }\n    }\n\n    // BiDi flip transitionProperty value\n    if (prop === 'transitionProperty') {\n      // BiDi flip properties\n      if (PROPERTIES_I18N.hasOwnProperty(value)) {\n        // convert start/end\n        const convertedValue = PROPERTIES_I18N[originalValue];\n        value = isRTL ? PROPERTIES_FLIP[convertedValue] : convertedValue;\n      } else if (isRTL && doLeftAndRightSwapInRTL) {\n        const flippedValue = PROPERTIES_FLIP[(originalValue: any)];\n        if (flippedValue != null) {\n          value = flippedValue;\n        }\n      }\n    }\n\n    // Create finalized style\n    if (isRTL && prop === 'textShadowOffset') {\n      const invertedValue = additiveInverse((value: any).width);\n      (value: any).width = invertedValue;\n      nextStyle[prop] = value;\n    } else if (!frozenProps[prop]) {\n      nextStyle[prop] = value;\n    }\n\n    if (PROPERTIES_I18N[originalProp]) {\n      frozenProps[prop] = true;\n    }\n  }\n\n  // $FlowIgnore\n  return nextStyle;\n};\n\nexport default i18nStyle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}