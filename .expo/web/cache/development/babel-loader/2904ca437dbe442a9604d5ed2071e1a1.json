{"ast":null,"code":"function flattenArray(array) {\n  function flattenDown(array, result) {\n    for (var i = 0; i < array.length; i++) {\n      var value = array[i];\n\n      if (Array.isArray(value)) {\n        flattenDown(value, result);\n      } else if (value != null && value !== false) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n\n  return flattenDown(array, []);\n}\n\nexport default flattenArray;","map":{"version":3,"names":["flattenArray","array","flattenDown","result","i","length","value","Array","isArray","push"],"sources":["/Users/gilisaac/Documents/GitHub/invocieptExpo/node_modules/react-native-web/src/modules/flattenArray/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nfunction flattenArray(array: Array<any>): Array<any> {\n  function flattenDown(array, result) {\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i];\n\n      if (Array.isArray(value)) {\n        flattenDown(value, result);\n      } else if (value != null && value !== false) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }\n  return flattenDown(array, []);\n}\n\nexport default flattenArray;\n"],"mappings":"AASA,SAASA,YAAT,CAAsBC,KAAtB,EAAqD;EACnD,SAASC,WAAT,CAAqBD,KAArB,EAA4BE,MAA5B,EAAoC;IAClC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAME,KAAK,GAAGL,KAAK,CAACG,CAAD,CAAnB;;MAEA,IAAIG,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;QACxBJ,WAAW,CAACI,KAAD,EAAQH,MAAR,CAAX;MACD,CAFD,MAEO,IAAIG,KAAK,IAAI,IAAT,IAAiBA,KAAK,KAAK,KAA/B,EAAsC;QAC3CH,MAAM,CAACM,IAAP,CAAYH,KAAZ;MACD;IACF;;IAED,OAAOH,MAAP;EACD;;EACD,OAAOD,WAAW,CAACD,KAAD,EAAQ,EAAR,CAAlB;AACD;;AAED,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}