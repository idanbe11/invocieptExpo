{"ast":null,"code":"import * as React from 'react';\n\nvar NavigationContent = function NavigationContent(_ref) {\n  var render = _ref.render,\n      children = _ref.children;\n  return render(children);\n};\n\nexport default function useComponent(render) {\n  var renderRef = React.useRef(render);\n  renderRef.current = render;\n  React.useEffect(function () {\n    renderRef.current = null;\n  });\n  return React.useRef(function (_ref2) {\n    var children = _ref2.children;\n    var render = renderRef.current;\n\n    if (render === null) {\n      throw new Error('The returned component must be rendered in the same render phase as the hook.');\n    }\n\n    return React.createElement(NavigationContent, {\n      render: render\n    }, children);\n  }).current;\n}","map":{"version":3,"sources":["useComponent.tsx"],"names":["NavigationContent","children","render","renderRef","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AASA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,IAAA,EAAiC;EAAhC,IAAA,MAAA,GAAgC,IAAhC,CAAA,MAAA;EAAA,IAAUC,QAAV,GAAgC,IAAhC,CAAUA,QAAV;EACzB,OAAOC,MAAM,CAAb,QAAa,CAAb;AADF,CAAA;;AAIA,eAAe,SAAA,YAAA,CAAA,MAAA,EAAsC;EACnD,IAAMC,SAAS,GAAGC,KAAK,CAALA,MAAAA,CADiC,MACjCA,CAAlB;EAKAD,SAAS,CAATA,OAAAA,GAAAA,MAAAA;EAEAC,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpBD,SAAS,CAATA,OAAAA,GAAAA,IAAAA;EADFC,CAAAA;EAIA,OAAO,KAAK,CAAL,MAAA,CAAa,UAAA,KAAA,EAAiD;IAAhD,IAAEH,QAAF,GAAgD,KAAhD,CAAEA,QAAF;IACnB,IAAMC,MAAM,GAAGC,SAAS,CAAxB,OAAA;;IAEA,IAAID,MAAM,KAAV,IAAA,EAAqB;MACnB,MAAM,IAAA,KAAA,CAAN,+EAAM,CAAN;IAGD;;IAED,OAAO,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;MAAmB,MAAM,EAAEA;IAA3B,CAAA,EAAP,QAAO,CAAP;EATK,CAAA,EAAP,OAAA;AAWD","sourcesContent":["import * as React from 'react';\n\ntype Render = (children: React.ReactNode) => JSX.Element;\n\ntype Props = {\n  render: Render;\n  children: React.ReactNode;\n};\n\nconst NavigationContent = ({ render, children }: Props) => {\n  return render(children);\n};\n\nexport default function useComponent(render: Render) {\n  const renderRef = React.useRef<Render | null>(render);\n\n  // Normally refs shouldn't be mutated in render\n  // But we return a component which will be rendered\n  // So it's just for immediate consumption\n  renderRef.current = render;\n\n  React.useEffect(() => {\n    renderRef.current = null;\n  });\n\n  return React.useRef(({ children }: { children: React.ReactNode }) => {\n    const render = renderRef.current;\n\n    if (render === null) {\n      throw new Error(\n        'The returned component must be rendered in the same render phase as the hook.'\n      );\n    }\n\n    return <NavigationContent render={render}>{children}</NavigationContent>;\n  }).current;\n}\n"]},"metadata":{},"sourceType":"module"}