{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Rule(props) {\n  var _props$config = props.config,\n      thickness = _props$config.thickness,\n      width = _props$config.width,\n      color = _props$config.color,\n      type = _props$config.type,\n      dashWidth = _props$config.dashWidth,\n      dashGap = _props$config.dashGap;\n\n  if (type === 'solid') {\n    return _jsx(Svg, _objectSpread(_objectSpread({\n      height: thickness,\n      width: width\n    }, props), {}, {\n      children: _jsx(G, {\n        fill: \"lightgray\",\n        stroke: color,\n        strokeWidth: thickness,\n        children: _jsx(Path, {\n          d: \"M0 \" + thickness / 2 + \"h\" + width\n        })\n      })\n    }));\n  }\n\n  return _jsx(Svg, _objectSpread(_objectSpread({\n    height: thickness,\n    width: width\n  }, props), {}, {\n    children: _jsx(G, {\n      fill: \"lightgray\",\n      stroke: color,\n      strokeWidth: thickness,\n      children: _jsx(Path, {\n        strokeDasharray: dashWidth + \",\" + dashGap,\n        d: \"M0 \" + thickness / 2 + \"h\" + width\n      })\n    })\n  }));\n}\n\nexport default Rule;","map":{"version":3,"names":["React","Svg","G","Path","Rule","props","config","thickness","width","color","type","dashWidth","dashGap"],"sources":["C:/Users/oplati/Desktop/expo dragdrop/node_modules/react-native-gifted-charts/src/Components/lineSvg.tsx"],"sourcesContent":["import * as React from 'react';\nimport {ColorValue} from 'react-native';\nimport Svg, {G, Path} from 'react-native-svg';\n\ntype ruleProps = {\n  thickness: number;\n  width: number;\n  color: ColorValue | String | any;\n  type: String;\n  dashWidth: number;\n  dashGap: number;\n};\n\ntype configType = {\n  config: ruleProps;\n};\n\nfunction Rule(props: configType) {\n  const {thickness, width, color, type, dashWidth, dashGap} = props.config;\n  if (type === 'solid') {\n    return (\n      <Svg height={thickness} width={width} {...props}>\n        <G fill=\"lightgray\" stroke={color} strokeWidth={thickness}>\n          <Path d={`M0 ${thickness / 2}h${width}`} />\n        </G>\n      </Svg>\n    );\n  }\n  return (\n    <Svg height={thickness} width={width} {...props}>\n      <G fill=\"lightgray\" stroke={color} strokeWidth={thickness}>\n        <Path\n          strokeDasharray={`${dashWidth},${dashGap}`}\n          d={`M0 ${thickness / 2}h${width}`}\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport default Rule;\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,GAAP,IAAaC,CAAb,EAAgBC,IAAhB,QAA2B,kBAA3B;;;AAeA,SAASC,IAAT,CAAcC,KAAd,EAAiC;EAC/B,oBAA4DA,KAAK,CAACC,MAAlE;EAAA,IAAOC,SAAP,iBAAOA,SAAP;EAAA,IAAkBC,KAAlB,iBAAkBA,KAAlB;EAAA,IAAyBC,KAAzB,iBAAyBA,KAAzB;EAAA,IAAgCC,IAAhC,iBAAgCA,IAAhC;EAAA,IAAsCC,SAAtC,iBAAsCA,SAAtC;EAAA,IAAiDC,OAAjD,iBAAiDA,OAAjD;;EACA,IAAIF,IAAI,KAAK,OAAb,EAAsB;IACpB,OACE,KAAC,GAAD;MAAK,MAAM,EAAEH,SAAb;MAAwB,KAAK,EAAEC;IAA/B,GAA0CH,KAA1C;MAAA,UACE,KAAC,CAAD;QAAG,IAAI,EAAC,WAAR;QAAoB,MAAM,EAAEI,KAA5B;QAAmC,WAAW,EAAEF,SAAhD;QAAA,UACE,KAAC,IAAD;UAAM,CAAC,UAAQA,SAAS,GAAG,CAApB,SAAyBC;QAAhC;MADF;IADF,GADF;EAOD;;EACD,OACE,KAAC,GAAD;IAAK,MAAM,EAAED,SAAb;IAAwB,KAAK,EAAEC;EAA/B,GAA0CH,KAA1C;IAAA,UACE,KAAC,CAAD;MAAG,IAAI,EAAC,WAAR;MAAoB,MAAM,EAAEI,KAA5B;MAAmC,WAAW,EAAEF,SAAhD;MAAA,UACE,KAAC,IAAD;QACE,eAAe,EAAKI,SAAL,SAAkBC,OADnC;QAEE,CAAC,UAAQL,SAAS,GAAG,CAApB,SAAyBC;MAF5B;IADF;EADF,GADF;AAUD;;AAED,eAAeJ,IAAf"},"metadata":{},"sourceType":"module"}