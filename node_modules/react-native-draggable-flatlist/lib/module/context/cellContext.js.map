{"version":3,"names":["React","useContext","useMemo","typedMemo","CellContext","createContext","undefined","CellProvider","isActive","children","value","useIsActive","Error"],"sources":["cellContext.tsx"],"sourcesContent":["import React, { useContext, useMemo } from \"react\";\nimport { typedMemo } from \"../utils\";\n\ntype CellContextValue = {\n  isActive: boolean;\n};\n\nconst CellContext = React.createContext<CellContextValue | undefined>(\n  undefined\n);\n\ntype Props = {\n  isActive: boolean;\n  children: React.ReactNode;\n};\n\nexport function CellProvider({ isActive, children }: Props) {\n  const value = useMemo(\n    () => ({\n      isActive,\n    }),\n    [isActive]\n  );\n  return <CellContext.Provider value={value}>{children}</CellContext.Provider>;\n}\n\nexport default typedMemo(CellProvider);\n\nexport function useIsActive() {\n  const value = useContext(CellContext);\n  if (!value) {\n    throw new Error(\"useIsActive must be called from within CellProvider!\");\n  }\n  return value.isActive;\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,UAA1B;AAMA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAClBC,SADkB,CAApB;AASA,OAAO,SAASC,YAAT,OAAqD;EAAA,IAA/B;IAAEC,QAAF;IAAYC;EAAZ,CAA+B;EAC1D,MAAMC,KAAK,GAAGR,OAAO,CACnB,OAAO;IACLM;EADK,CAAP,CADmB,EAInB,CAACA,QAAD,CAJmB,CAArB;EAMA,oBAAO,oBAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEE;EAA7B,GAAqCD,QAArC,CAAP;AACD;AAED,eAAeN,SAAS,CAACI,YAAD,CAAxB;AAEA,OAAO,SAASI,WAAT,GAAuB;EAC5B,MAAMD,KAAK,GAAGT,UAAU,CAACG,WAAD,CAAxB;;EACA,IAAI,CAACM,KAAL,EAAY;IACV,MAAM,IAAIE,KAAJ,CAAU,sDAAV,CAAN;EACD;;EACD,OAAOF,KAAK,CAACF,QAAb;AACD"}