{"version":3,"names":["React","useContext","useMemo","DraggableFlatListContext","createContext","undefined","DraggableFlatListProvider","activeKey","keyExtractor","horizontal","children","value","useDraggableFlatListContext","Error"],"sources":["draggableFlatListContext.tsx"],"sourcesContent":["import React, { useContext, useMemo } from \"react\";\n\ntype Props<T> = {\n  activeKey: string | null;\n  keyExtractor: (item: T, index: number) => string;\n  horizontal: boolean;\n  children: React.ReactNode;\n};\n\ntype DraggableFlatListContextValue<T> = Omit<Props<T>, \"children\">;\n\nconst DraggableFlatListContext = React.createContext<\n  DraggableFlatListContextValue<any> | undefined\n>(undefined);\n\nexport default function DraggableFlatListProvider<T>({\n  activeKey,\n  keyExtractor,\n  horizontal,\n  children,\n}: Props<T>) {\n  const value = useMemo(\n    () => ({\n      activeKey,\n      keyExtractor,\n      horizontal,\n    }),\n    [activeKey, keyExtractor, horizontal]\n  );\n\n  return (\n    <DraggableFlatListContext.Provider value={value}>\n      {children}\n    </DraggableFlatListContext.Provider>\n  );\n}\n\nexport function useDraggableFlatListContext<T>() {\n  const value = useContext(DraggableFlatListContext);\n  if (!value) {\n    throw new Error(\n      \"useDraggableFlatListContext must be called within DraggableFlatListProvider\"\n    );\n  }\n  return value as DraggableFlatListContextValue<T>;\n}\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AAWA,MAAMC,wBAAwB,gBAAGH,KAAK,CAACI,aAAN,CAE/BC,SAF+B,CAAjC;AAIA,eAAe,SAASC,yBAAT,OAKF;EAAA,IALwC;IACnDC,SADmD;IAEnDC,YAFmD;IAGnDC,UAHmD;IAInDC;EAJmD,CAKxC;EACX,MAAMC,KAAK,GAAGT,OAAO,CACnB,OAAO;IACLK,SADK;IAELC,YAFK;IAGLC;EAHK,CAAP,CADmB,EAMnB,CAACF,SAAD,EAAYC,YAAZ,EAA0BC,UAA1B,CANmB,CAArB;EASA,oBACE,oBAAC,wBAAD,CAA0B,QAA1B;IAAmC,KAAK,EAAEE;EAA1C,GACGD,QADH,CADF;AAKD;AAED,OAAO,SAASE,2BAAT,GAA0C;EAC/C,MAAMD,KAAK,GAAGV,UAAU,CAACE,wBAAD,CAAxB;;EACA,IAAI,CAACQ,KAAL,EAAY;IACV,MAAM,IAAIE,KAAJ,CACJ,6EADI,CAAN;EAGD;;EACD,OAAOF,KAAP;AACD"}