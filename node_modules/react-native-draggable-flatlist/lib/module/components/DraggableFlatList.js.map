{"version":3,"names":["React","useCallback","useLayoutEffect","useMemo","useState","FlatList","Gesture","GestureDetector","Animated","runOnJS","useAnimatedReaction","useAnimatedScrollHandler","useSharedValue","withSpring","CellRendererComponent","DEFAULT_PROPS","isWeb","PlaceholderItem","RowItem","PropsProvider","AnimatedValueProvider","useAnimatedValues","RefProvider","useRefs","DraggableFlatListProvider","useAutoScroll","useStableCallback","ScrollOffsetListener","typedMemo","AnimatedFlatList","createAnimatedComponent","DraggableFlatListInner","props","cellDataRef","containerRef","flatlistRef","keyToIndexRef","propsRef","animationConfigRef","activeCellOffset","activeCellSize","activeIndexAnim","containerSize","scrollOffset","scrollViewSize","spacerIndexAnim","horizontalAnim","placeholderOffset","touchTranslate","autoScrollDistance","panGestureState","isTouchActiveNative","disabled","dragHitSlop","scrollEnabled","activationDistance","activationDistanceProp","activeKey","setActiveKey","keyExtractor","item","index","Error","data","forEach","d","i","key","current","set","requestAnimationFrame","value","drag","get","cellData","measurements","offset","size","onDragBegin","undefined","onContainerLayout","nativeEvent","layout","width","height","horizontal","onListContentSizeChange","w","h","onContentSizeChange","onContainerTouchStart","onContainerTouchEnd","extraData","renderItem","onRelease","onDragEnd","from","to","newData","splice","cur","prev","hasMoved","gestureDisabled","panGesture","Pan","onBegin","evt","state","onUpdate","translation","translationX","translationY","onEnd","springTo","onTouchesDown","onTouchesUp","hitSlop","activeOffset","activeOffsetX","activeOffsetY","onScroll","onScrollOffsetChange","scrollHandler","contentOffset","x","y","containerStyle","renderPlaceholder","simultaneousHandlers","DraggableFlatList","ref","MemoizedInner","forwardRef"],"sources":["DraggableFlatList.tsx"],"sourcesContent":["import React, { useCallback, useLayoutEffect, useMemo, useState } from \"react\";\nimport { ListRenderItem, FlatListProps, LayoutChangeEvent } from \"react-native\";\nimport {\n  FlatList,\n  Gesture,\n  GestureDetector,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  withSpring,\n} from \"react-native-reanimated\";\nimport CellRendererComponent from \"./CellRendererComponent\";\nimport { DEFAULT_PROPS, isWeb } from \"../constants\";\nimport PlaceholderItem from \"./PlaceholderItem\";\nimport RowItem from \"./RowItem\";\nimport { DraggableFlatListProps } from \"../types\";\nimport PropsProvider from \"../context/propsContext\";\nimport AnimatedValueProvider, {\n  useAnimatedValues,\n} from \"../context/animatedValueContext\";\nimport RefProvider, { useRefs } from \"../context/refContext\";\nimport DraggableFlatListProvider from \"../context/draggableFlatListContext\";\nimport { useAutoScroll } from \"../hooks/useAutoScroll\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport ScrollOffsetListener from \"./ScrollOffsetListener\";\nimport { typedMemo } from \"../utils\";\n\ntype RNGHFlatListProps<T> = Animated.AnimateProps<\n  FlatListProps<T> & {\n    ref: React.Ref<FlatList<T>>;\n    simultaneousHandlers?: React.Ref<any> | React.Ref<any>[];\n  }\n>;\n\nconst AnimatedFlatList = (Animated.createAnimatedComponent(\n  FlatList\n) as unknown) as <T>(props: RNGHFlatListProps<T>) => React.ReactElement;\n\nfunction DraggableFlatListInner<T>(props: DraggableFlatListProps<T>) {\n  const {\n    cellDataRef,\n    containerRef,\n    flatlistRef,\n    keyToIndexRef,\n    propsRef,\n    animationConfigRef,\n  } = useRefs<T>();\n  const {\n    activeCellOffset,\n    activeCellSize,\n    activeIndexAnim,\n    containerSize,\n    scrollOffset,\n    scrollViewSize,\n    spacerIndexAnim,\n    horizontalAnim,\n    placeholderOffset,\n    touchTranslate,\n    autoScrollDistance,\n    panGestureState,\n    isTouchActiveNative,\n    disabled,\n  } = useAnimatedValues();\n\n  const {\n    dragHitSlop = DEFAULT_PROPS.dragHitSlop,\n    scrollEnabled = DEFAULT_PROPS.scrollEnabled,\n    activationDistance: activationDistanceProp = DEFAULT_PROPS.activationDistance,\n  } = props;\n\n  const [activeKey, setActiveKey] = useState<string | null>(null);\n\n  const keyExtractor = useStableCallback((item: T, index: number) => {\n    if (!props.keyExtractor) {\n      throw new Error(\"You must provide a keyExtractor to DraggableFlatList\");\n    }\n    return props.keyExtractor(item, index);\n  });\n\n  useLayoutEffect(() => {\n    props.data.forEach((d, i) => {\n      const key = keyExtractor(d, i);\n      keyToIndexRef.current.set(key, i);\n    });\n  }, [props.data, keyExtractor, keyToIndexRef]);\n\n  // Reset hover state whenever data changes\n  useMemo(() => {\n    requestAnimationFrame(() => {\n      activeIndexAnim.value = -1;\n      spacerIndexAnim.value = -1;\n      touchTranslate.value = 0;\n      activeCellSize.value = -1;\n      activeCellOffset.value = -1;\n    });\n  }, [props.data]);\n\n  const drag = useStableCallback((activeKey: string) => {\n    if (disabled.value) return;\n    const index = keyToIndexRef.current.get(activeKey);\n    const cellData = cellDataRef.current.get(activeKey);\n    if (cellData) {\n      activeCellOffset.value = cellData.measurements.offset;\n      activeCellSize.value = cellData.measurements.size;\n    }\n\n    const { onDragBegin } = propsRef.current;\n    if (index !== undefined) {\n      spacerIndexAnim.value = index;\n      activeIndexAnim.value = index;\n      setActiveKey(activeKey);\n      onDragBegin?.(index);\n    }\n  });\n\n  const onContainerLayout = ({\n    nativeEvent: { layout },\n  }: LayoutChangeEvent) => {\n    const { width, height } = layout;\n    containerSize.value = props.horizontal ? width : height;\n    props.onContainerLayout?.({ layout, containerRef });\n  };\n\n  const onListContentSizeChange = (w: number, h: number) => {\n    scrollViewSize.value = props.horizontal ? w : h;\n    props.onContentSizeChange?.(w, h);\n  };\n\n  const onContainerTouchStart = () => {\n    if (!disabled.value) {\n      isTouchActiveNative.value = true;\n    }\n    return false;\n  };\n\n  const onContainerTouchEnd = () => {\n    isTouchActiveNative.value = false;\n  };\n\n  const extraData = useMemo(\n    () => ({\n      activeKey,\n      extraData: props.extraData,\n    }),\n    [activeKey, props.extraData]\n  );\n\n  const renderItem: ListRenderItem<T> = useCallback(\n    ({ item, index }) => {\n      const key = keyExtractor(item, index);\n      if (index !== keyToIndexRef.current.get(key)) {\n        keyToIndexRef.current.set(key, index);\n      }\n\n      return (\n        <RowItem\n          item={item}\n          itemKey={key}\n          renderItem={props.renderItem}\n          drag={drag}\n          extraData={props.extraData}\n        />\n      );\n    },\n    [props.renderItem, props.extraData, drag, keyExtractor]\n  );\n\n  const onRelease = useStableCallback((index: number) => {\n    props.onRelease?.(index);\n  });\n\n  const onDragEnd = useStableCallback(\n    ({ from, to }: { from: number; to: number }) => {\n      const { onDragEnd, data } = props;\n      if (onDragEnd) {\n        const newData = [...data];\n        if (from !== to) {\n          newData.splice(from, 1);\n          newData.splice(to, 0, data[from]);\n        }\n        onDragEnd({ from, to, data: newData });\n        if (isWeb) {\n          // prevent flicker\n          setActiveKey(null);\n        } else {\n          requestAnimationFrame(() => {\n            setActiveKey(null);\n          });\n        }\n      }\n    }\n  );\n\n  // Handle case where user ends drag without moving their finger.\n  useAnimatedReaction(\n    () => {\n      return isTouchActiveNative.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && !cur) {\n        const hasMoved = !!touchTranslate.value;\n        if (!hasMoved && activeIndexAnim.value >= 0 && !disabled.value) {\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n        }\n      }\n    },\n    [isTouchActiveNative, onDragEnd]\n  );\n\n  const gestureDisabled = useSharedValue(false);\n\n  const panGesture = Gesture.Pan()\n    .onBegin((evt) => {\n      gestureDisabled.value = disabled.value;\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n    })\n    .onUpdate((evt) => {\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n      touchTranslate.value = translation;\n    })\n    .onEnd((evt) => {\n      if (gestureDisabled.value) return;\n      // Set touch val to current translate val\n      isTouchActiveNative.value = false;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n\n      touchTranslate.value = translation + autoScrollDistance.value;\n      panGestureState.value = evt.state;\n\n      // Only call onDragEnd if actually dragging a cell\n      if (activeIndexAnim.value === -1 || disabled.value) return;\n      disabled.value = true;\n      runOnJS(onRelease)(activeIndexAnim.value);\n      const springTo = placeholderOffset.value - activeCellOffset.value;\n      touchTranslate.value = withSpring(\n        springTo,\n        animationConfigRef.current,\n        () => {\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n          disabled.value = false;\n        }\n      );\n    })\n    .onTouchesDown(() => {\n      runOnJS(onContainerTouchStart)();\n    })\n    .onTouchesUp(() => {\n      // Turning this into a worklet causes timing issues. We want it to run\n      // just after the finger lifts.\n      runOnJS(onContainerTouchEnd)();\n    });\n\n  if (props.hitSlop) panGesture.hitSlop(props.hitSlop);\n  if (activationDistanceProp) {\n    const activeOffset = [-activationDistanceProp, activationDistanceProp];\n    if (props.horizontal) {\n      panGesture.activeOffsetX(activeOffset);\n    } else {\n      panGesture.activeOffsetY(activeOffset);\n    }\n  }\n\n  const onScroll = useStableCallback((scrollOffset: number) => {\n    props.onScrollOffsetChange?.(scrollOffset);\n  });\n\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: (evt) => {\n        scrollOffset.value = horizontalAnim.value\n          ? evt.contentOffset.x\n          : evt.contentOffset.y;\n        runOnJS(onScroll)(scrollOffset.value);\n      },\n    },\n    [horizontalAnim]\n  );\n\n  useAutoScroll();\n\n  return (\n    <DraggableFlatListProvider\n      activeKey={activeKey}\n      keyExtractor={keyExtractor}\n      horizontal={!!props.horizontal}\n    >\n      <GestureDetector gesture={panGesture}>\n        <Animated.View\n          style={props.containerStyle}\n          ref={containerRef}\n          onLayout={onContainerLayout}\n        >\n          {props.renderPlaceholder && (\n            <PlaceholderItem renderPlaceholder={props.renderPlaceholder} />\n          )}\n          <AnimatedFlatList\n            {...props}\n            data={props.data}\n            CellRendererComponent={CellRendererComponent}\n            ref={flatlistRef}\n            onContentSizeChange={onListContentSizeChange}\n            scrollEnabled={!activeKey && scrollEnabled}\n            renderItem={renderItem}\n            extraData={extraData}\n            keyExtractor={keyExtractor}\n            onScroll={scrollHandler}\n            scrollEventThrottle={16}\n            simultaneousHandlers={props.simultaneousHandlers}\n            removeClippedSubviews={false}\n          />\n          {!!props.onScrollOffsetChange && (\n            <ScrollOffsetListener\n              onScrollOffsetChange={props.onScrollOffsetChange}\n              scrollOffset={scrollOffset}\n            />\n          )}\n        </Animated.View>\n      </GestureDetector>\n    </DraggableFlatListProvider>\n  );\n}\n\nfunction DraggableFlatList<T>(\n  props: DraggableFlatListProps<T>,\n  ref?: React.ForwardedRef<FlatList<T>> | null\n) {\n  return (\n    <PropsProvider {...props}>\n      <AnimatedValueProvider>\n        <RefProvider flatListRef={ref}>\n          <MemoizedInner {...props} />\n        </RefProvider>\n      </AnimatedValueProvider>\n    </PropsProvider>\n  );\n}\n\nconst MemoizedInner = typedMemo(DraggableFlatListInner);\n\n// Generic forwarded ref type assertion taken from:\n// https://fettblog.eu/typescript-react-generic-forward-refs/#option-1%3A-type-assertion\nexport default React.forwardRef(DraggableFlatList) as <T>(\n  props: DraggableFlatListProps<T> & { ref?: React.ForwardedRef<FlatList<T>> }\n) => ReturnType<typeof DraggableFlatList>;\n"],"mappings":"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"}