{"version":3,"names":["runOnJS","useAnimatedReaction","useDerivedValue","useSharedValue","DEFAULT_PROPS","SCROLL_POSITION_TOLERANCE","useProps","useAnimatedValues","useRefs","useAutoScroll","flatlistRef","autoscrollThreshold","autoscrollSpeed","scrollOffset","scrollViewSize","containerSize","activeCellSize","hoverOffset","activeIndexAnim","hoverScreenOffset","value","isScrolledUp","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","hoverPlusActiveCell","isAtTopEdge","isAtBottomEdge","scrollTarget","dragIsActive","cur","prev","shouldAutoScroll","scrollTargetDiff","abs","hasScrolledToTarget","isAtEdge","topDisabled","bottomDisabled","isEdgeDisabled","cellIsActive","scrollToInternal","offset","current","scrollToOffset","animated","distFromEdge","speedPct","targetOffset"],"sources":["useAutoScroll.tsx"],"sourcesContent":["import {\n  runOnJS,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport {\n  DEFAULT_PROPS,\n  SCROLL_POSITION_TOLERANCE,\n} from \"../constants\";\nimport { useProps } from \"../context/propsContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useRefs } from \"../context/refContext\";\n\nexport function useAutoScroll() {\n  const { flatlistRef } = useRefs();\n\n  const {\n    autoscrollThreshold = DEFAULT_PROPS.autoscrollThreshold,\n    autoscrollSpeed = DEFAULT_PROPS.autoscrollSpeed,\n  } = useProps();\n\n  const {\n    scrollOffset,\n    scrollViewSize,\n    containerSize,\n    activeCellSize,\n    hoverOffset,\n    activeIndexAnim,\n  } = useAnimatedValues();\n\n  const hoverScreenOffset = useDerivedValue(() => {\n    return hoverOffset.value - scrollOffset.value;\n  }, []);\n\n  const isScrolledUp = useDerivedValue(() => {\n    return scrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0;\n  }, []);\n\n  const isScrolledDown = useDerivedValue(() => {\n    return (\n      scrollOffset.value + containerSize.value + SCROLL_POSITION_TOLERANCE >=\n      scrollViewSize.value\n    );\n  }, []);\n\n  const distToTopEdge = useDerivedValue(() => {\n    return Math.max(0, hoverScreenOffset.value);\n  }, []);\n\n  const distToBottomEdge = useDerivedValue(() => {\n    const hoverPlusActiveCell = hoverScreenOffset.value + activeCellSize.value;\n    return Math.max(0, containerSize.value - hoverPlusActiveCell);\n  }, []);\n\n  const isAtTopEdge = useDerivedValue(() => {\n    return distToTopEdge.value <= autoscrollThreshold;\n  });\n\n  const isAtBottomEdge = useDerivedValue(() => {\n    return distToBottomEdge.value <= autoscrollThreshold;\n  }, []);\n\n  const scrollTarget = useSharedValue(0);\n  const dragIsActive = useDerivedValue(() => {\n    return activeIndexAnim.value >= 0;\n  }, []);\n\n  useAnimatedReaction(\n    () => {\n      return dragIsActive.value;\n    },\n    (cur, prev) => {\n      if (cur && !prev) {\n        scrollTarget.value = scrollOffset.value;\n      }\n    }\n  );\n\n  const shouldAutoScroll = useDerivedValue(() => {\n    const scrollTargetDiff = Math.abs(scrollTarget.value - scrollOffset.value);\n    const hasScrolledToTarget = scrollTargetDiff < SCROLL_POSITION_TOLERANCE;\n\n    const isAtEdge = isAtTopEdge.value || isAtBottomEdge.value;\n    const topDisabled = isAtTopEdge.value && isScrolledUp.value;\n    const bottomDisabled = isAtBottomEdge.value && isScrolledDown.value;\n    const isEdgeDisabled = topDisabled || bottomDisabled;\n\n    const cellIsActive = activeIndexAnim.value >= 0;\n\n    return hasScrolledToTarget && isAtEdge && !isEdgeDisabled && cellIsActive;\n  });\n\n  function scrollToInternal(offset: number) {\n    if (flatlistRef && \"current\" in flatlistRef) {\n      flatlistRef.current?.scrollToOffset({ offset, animated: true });\n    }\n  }\n\n  useDerivedValue(() => {\n    if (!shouldAutoScroll.value) return;\n\n    const distFromEdge = isAtTopEdge.value\n      ? distToTopEdge.value\n      : distToBottomEdge.value;\n    const speedPct = 1 - distFromEdge / autoscrollThreshold!;\n    const offset = speedPct * autoscrollSpeed;\n    const targetOffset = isAtTopEdge.value\n      ? Math.max(0, scrollOffset.value - offset)\n      : scrollOffset.value + offset;\n\n    scrollTarget.value = targetOffset;\n    // Reanimated scrollTo is crashing on android. use 'regular' scrollTo until figured out.\n    // scrollTo(scrollViewRef, targetX, targetY, true);\n    runOnJS(scrollToInternal)(targetOffset);\n  }, []);\n\n  return null;\n}\n"],"mappings":"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"}