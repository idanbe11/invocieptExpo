{"version":3,"names":["useRef","useDerivedValue","withSpring","DEFAULT_ANIMATION_CONFIG","useAnimatedValues","useIsActive","useOnCellActiveAnimation","animationConfig","animationConfigRef","current","isActive","isTouchActiveNative","onActiveAnim","toVal","value"],"sources":["useOnCellActiveAnimation.ts"],"sourcesContent":["import { useRef } from \"react\";\nimport Animated, {\n  useDerivedValue,\n  withSpring,\n  WithSpringConfig,\n} from \"react-native-reanimated\";\nimport { DEFAULT_ANIMATION_CONFIG } from \"../constants\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useIsActive } from \"../context/cellContext\";\n\ntype Params = {\n  animationConfig: Partial<WithSpringConfig>;\n};\n\nexport function useOnCellActiveAnimation(\n  { animationConfig }: Params = { animationConfig: {} }\n) {\n  const animationConfigRef = useRef(animationConfig);\n  animationConfigRef.current = animationConfig;\n\n  const isActive = useIsActive();\n\n  const { isTouchActiveNative } = useAnimatedValues();\n\n  const onActiveAnim = useDerivedValue(() => {\n    const toVal = isActive && isTouchActiveNative.value ? 1 : 0;\n    return withSpring(toVal, {\n      ...DEFAULT_ANIMATION_CONFIG,\n      ...animationConfigRef.current,\n    });\n  }, [isActive]);\n\n  return {\n    isActive,\n    onActiveAnim,\n  };\n}\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SACEC,eADF,EAEEC,UAFF,QAIO,yBAJP;AAKA,SAASC,wBAAT,QAAyC,cAAzC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAMA,OAAO,SAASC,wBAAT,GAEL;EAAA,IADA;IAAEC;EAAF,CACA,uEAD8B;IAAEA,eAAe,EAAE;EAAnB,CAC9B;EACA,MAAMC,kBAAkB,GAAGR,MAAM,CAACO,eAAD,CAAjC;EACAC,kBAAkB,CAACC,OAAnB,GAA6BF,eAA7B;EAEA,MAAMG,QAAQ,GAAGL,WAAW,EAA5B;EAEA,MAAM;IAAEM;EAAF,IAA0BP,iBAAiB,EAAjD;EAEA,MAAMQ,YAAY,GAAGX,eAAe,CAAC,MAAM;IACzC,MAAMY,KAAK,GAAGH,QAAQ,IAAIC,mBAAmB,CAACG,KAAhC,GAAwC,CAAxC,GAA4C,CAA1D;IACA,OAAOZ,UAAU,CAACW,KAAD,EAAQ,EACvB,GAAGV,wBADoB;MAEvB,GAAGK,kBAAkB,CAACC;IAFC,CAAR,CAAjB;EAID,CANmC,EAMjC,CAACC,QAAD,CANiC,CAApC;EAQA,OAAO;IACLA,QADK;IAELE;EAFK,CAAP;AAID"}