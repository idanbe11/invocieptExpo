{"version":3,"names":["useAutoScroll","useRefs","flatlistRef","useProps","autoscrollThreshold","DEFAULT_PROPS","autoscrollSpeed","useAnimatedValues","scrollOffset","scrollViewSize","containerSize","activeCellSize","hoverOffset","activeIndexAnim","hoverScreenOffset","useDerivedValue","value","isScrolledUp","SCROLL_POSITION_TOLERANCE","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","hoverPlusActiveCell","isAtTopEdge","isAtBottomEdge","scrollTarget","useSharedValue","dragIsActive","useAnimatedReaction","cur","prev","shouldAutoScroll","scrollTargetDiff","abs","hasScrolledToTarget","isAtEdge","topDisabled","bottomDisabled","isEdgeDisabled","cellIsActive","scrollToInternal","offset","current","scrollToOffset","animated","distFromEdge","speedPct","targetOffset","runOnJS"],"sources":["useAutoScroll.tsx"],"sourcesContent":["import {\n  runOnJS,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport {\n  DEFAULT_PROPS,\n  SCROLL_POSITION_TOLERANCE,\n} from \"../constants\";\nimport { useProps } from \"../context/propsContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useRefs } from \"../context/refContext\";\n\nexport function useAutoScroll() {\n  const { flatlistRef } = useRefs();\n\n  const {\n    autoscrollThreshold = DEFAULT_PROPS.autoscrollThreshold,\n    autoscrollSpeed = DEFAULT_PROPS.autoscrollSpeed,\n  } = useProps();\n\n  const {\n    scrollOffset,\n    scrollViewSize,\n    containerSize,\n    activeCellSize,\n    hoverOffset,\n    activeIndexAnim,\n  } = useAnimatedValues();\n\n  const hoverScreenOffset = useDerivedValue(() => {\n    return hoverOffset.value - scrollOffset.value;\n  }, []);\n\n  const isScrolledUp = useDerivedValue(() => {\n    return scrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0;\n  }, []);\n\n  const isScrolledDown = useDerivedValue(() => {\n    return (\n      scrollOffset.value + containerSize.value + SCROLL_POSITION_TOLERANCE >=\n      scrollViewSize.value\n    );\n  }, []);\n\n  const distToTopEdge = useDerivedValue(() => {\n    return Math.max(0, hoverScreenOffset.value);\n  }, []);\n\n  const distToBottomEdge = useDerivedValue(() => {\n    const hoverPlusActiveCell = hoverScreenOffset.value + activeCellSize.value;\n    return Math.max(0, containerSize.value - hoverPlusActiveCell);\n  }, []);\n\n  const isAtTopEdge = useDerivedValue(() => {\n    return distToTopEdge.value <= autoscrollThreshold;\n  });\n\n  const isAtBottomEdge = useDerivedValue(() => {\n    return distToBottomEdge.value <= autoscrollThreshold;\n  }, []);\n\n  const scrollTarget = useSharedValue(0);\n  const dragIsActive = useDerivedValue(() => {\n    return activeIndexAnim.value >= 0;\n  }, []);\n\n  useAnimatedReaction(\n    () => {\n      return dragIsActive.value;\n    },\n    (cur, prev) => {\n      if (cur && !prev) {\n        scrollTarget.value = scrollOffset.value;\n      }\n    }\n  );\n\n  const shouldAutoScroll = useDerivedValue(() => {\n    const scrollTargetDiff = Math.abs(scrollTarget.value - scrollOffset.value);\n    const hasScrolledToTarget = scrollTargetDiff < SCROLL_POSITION_TOLERANCE;\n\n    const isAtEdge = isAtTopEdge.value || isAtBottomEdge.value;\n    const topDisabled = isAtTopEdge.value && isScrolledUp.value;\n    const bottomDisabled = isAtBottomEdge.value && isScrolledDown.value;\n    const isEdgeDisabled = topDisabled || bottomDisabled;\n\n    const cellIsActive = activeIndexAnim.value >= 0;\n\n    return hasScrolledToTarget && isAtEdge && !isEdgeDisabled && cellIsActive;\n  });\n\n  function scrollToInternal(offset: number) {\n    if (flatlistRef && \"current\" in flatlistRef) {\n      flatlistRef.current?.scrollToOffset({ offset, animated: true });\n    }\n  }\n\n  useDerivedValue(() => {\n    if (!shouldAutoScroll.value) return;\n\n    const distFromEdge = isAtTopEdge.value\n      ? distToTopEdge.value\n      : distToBottomEdge.value;\n    const speedPct = 1 - distFromEdge / autoscrollThreshold!;\n    const offset = speedPct * autoscrollSpeed;\n    const targetOffset = isAtTopEdge.value\n      ? Math.max(0, scrollOffset.value - offset)\n      : scrollOffset.value + offset;\n\n    scrollTarget.value = targetOffset;\n    // Reanimated scrollTo is crashing on android. use 'regular' scrollTo until figured out.\n    // scrollTo(scrollViewRef, targetX, targetY, true);\n    runOnJS(scrollToInternal)(targetOffset);\n  }, []);\n\n  return null;\n}\n"],"mappings":"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"}