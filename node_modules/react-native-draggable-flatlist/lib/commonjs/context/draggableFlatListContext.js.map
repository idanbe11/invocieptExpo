{"version":3,"names":["DraggableFlatListContext","React","createContext","undefined","DraggableFlatListProvider","activeKey","keyExtractor","horizontal","children","value","useMemo","useDraggableFlatListContext","useContext","Error"],"sources":["draggableFlatListContext.tsx"],"sourcesContent":["import React, { useContext, useMemo } from \"react\";\n\ntype Props<T> = {\n  activeKey: string | null;\n  keyExtractor: (item: T, index: number) => string;\n  horizontal: boolean;\n  children: React.ReactNode;\n};\n\ntype DraggableFlatListContextValue<T> = Omit<Props<T>, \"children\">;\n\nconst DraggableFlatListContext = React.createContext<\n  DraggableFlatListContextValue<any> | undefined\n>(undefined);\n\nexport default function DraggableFlatListProvider<T>({\n  activeKey,\n  keyExtractor,\n  horizontal,\n  children,\n}: Props<T>) {\n  const value = useMemo(\n    () => ({\n      activeKey,\n      keyExtractor,\n      horizontal,\n    }),\n    [activeKey, keyExtractor, horizontal]\n  );\n\n  return (\n    <DraggableFlatListContext.Provider value={value}>\n      {children}\n    </DraggableFlatListContext.Provider>\n  );\n}\n\nexport function useDraggableFlatListContext<T>() {\n  const value = useContext(DraggableFlatListContext);\n  if (!value) {\n    throw new Error(\n      \"useDraggableFlatListContext must be called within DraggableFlatListProvider\"\n    );\n  }\n  return value as DraggableFlatListContextValue<T>;\n}\n"],"mappings":"mKAAA,qD,ynCAWA,GAAMA,yBAAwB,CAAGC,cAAA,CAAMC,aAAN,CAE/BC,SAF+B,CAAjC,CAIe,QAASC,0BAAT,MAKF,IAJXC,UAIW,MAJXA,SAIW,CAHXC,YAGW,MAHXA,YAGW,CAFXC,UAEW,MAFXA,UAEW,CADXC,QACW,MADXA,QACW,CACX,GAAMC,MAAK,CAAG,GAAAC,cAAA,EACZ,iBAAO,CACLL,SAAS,CAATA,SADK,CAELC,YAAY,CAAZA,YAFK,CAGLC,UAAU,CAAVA,UAHK,CAAP,EADY,CAMZ,CAACF,SAAD,CAAYC,YAAZ,CAA0BC,UAA1B,CANY,CAAd,CASA,MACE,8BAAC,wBAAD,CAA0B,QAA1B,EAAmC,KAAK,CAAEE,KAA1C,4EACGD,QADH,CADF,CAKD,CAEM,QAASG,4BAAT,EAA0C,CAC/C,GAAMF,MAAK,CAAG,GAAAG,iBAAA,EAAWZ,wBAAX,CAAd,CACA,GAAI,CAACS,KAAL,CAAY,CACV,KAAM,IAAII,MAAJ,CACJ,6EADI,CAAN,CAGD,CACD,MAAOJ,MAAP,CACD"}