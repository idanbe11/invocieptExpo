{"version":3,"names":["AnimatedValueContext","React","createContext","undefined","AnimatedValueProvider","children","value","useSetupAnimatedValues","useAnimatedValues","useContext","Error","props","useProps","DEFAULT_VAL","useSharedValue","containerSize","scrollViewSize","panGestureState","GestureState","UNDETERMINED","touchTranslate","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","outerScrollOffset","outerScrollInit","useAnimatedReaction","cur","prev","placeholderOffset","isDraggingCell","useDerivedValue","autoScrollDistance","innerScrollDiff","outerScrollDiff","scrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","constrained","Math","min","max","hoverAnim","dragItemOverflow","hoverOffset","isHovering","resetTouchedCell","useCallback","useMemo","useEffect","onAnimValInit"],"sources":["animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0)\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(() => {\n    return activeIndexAnim.value\n  }, (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n  }, [outerScrollOffset]);\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value\n    const scrollDiff = innerScrollDiff + outerScrollDiff;\n    return scrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(\n        scrollOffset.value,\n        touchPositionDiff.value + activeCellOffset.value\n      )\n    );\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    return isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n  }, []);\n\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return props.dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n    ]\n  );\n  \n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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"}