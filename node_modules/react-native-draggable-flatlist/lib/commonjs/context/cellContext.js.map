{"version":3,"names":["CellContext","React","createContext","undefined","CellProvider","isActive","children","value","useMemo","typedMemo","useIsActive","useContext","Error"],"sources":["cellContext.tsx"],"sourcesContent":["import React, { useContext, useMemo } from \"react\";\nimport { typedMemo } from \"../utils\";\n\ntype CellContextValue = {\n  isActive: boolean;\n};\n\nconst CellContext = React.createContext<CellContextValue | undefined>(\n  undefined\n);\n\ntype Props = {\n  isActive: boolean;\n  children: React.ReactNode;\n};\n\nexport function CellProvider({ isActive, children }: Props) {\n  const value = useMemo(\n    () => ({\n      isActive,\n    }),\n    [isActive]\n  );\n  return <CellContext.Provider value={value}>{children}</CellContext.Provider>;\n}\n\nexport default typedMemo(CellProvider);\n\nexport function useIsActive() {\n  const value = useContext(CellContext);\n  if (!value) {\n    throw new Error(\"useIsActive must be called from within CellProvider!\");\n  }\n  return value.isActive;\n}\n"],"mappings":"kJAAA,qDACA,+B,4mCAMA,GAAMA,YAAW,CAAGC,cAAA,CAAMC,aAAN,CAClBC,SADkB,CAApB,CASO,QAASC,aAAT,MAAqD,IAA7BC,SAA6B,MAA7BA,QAA6B,CAAnBC,QAAmB,MAAnBA,QAAmB,CAC1D,GAAMC,MAAK,CAAG,GAAAC,cAAA,EACZ,iBAAO,CACLH,QAAQ,CAARA,QADK,CAAP,EADY,CAIZ,CAACA,QAAD,CAJY,CAAd,CAMA,MAAO,8BAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEE,KAA7B,6EAAqCD,QAArC,CAAP,CACD,C,aAEc,GAAAG,gBAAA,EAAUL,YAAV,C,0BAER,QAASM,YAAT,EAAuB,CAC5B,GAAMH,MAAK,CAAG,GAAAI,iBAAA,EAAWX,WAAX,CAAd,CACA,GAAI,CAACO,KAAL,CAAY,CACV,KAAM,IAAIK,MAAJ,CAAU,sDAAV,CAAN,CACD,CACD,MAAOL,MAAK,CAACF,QAAb,CACD"}