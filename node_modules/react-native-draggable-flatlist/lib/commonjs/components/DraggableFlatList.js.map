{"version":3,"names":["AnimatedFlatList","Animated","createAnimatedComponent","FlatList","DraggableFlatListInner","props","useRefs","cellDataRef","containerRef","flatlistRef","keyToIndexRef","propsRef","animationConfigRef","useAnimatedValues","activeCellOffset","activeCellSize","activeIndexAnim","containerSize","scrollOffset","scrollViewSize","spacerIndexAnim","horizontalAnim","placeholderOffset","touchTranslate","autoScrollDistance","panGestureState","isTouchActiveNative","disabled","dragHitSlop","DEFAULT_PROPS","scrollEnabled","activationDistance","activationDistanceProp","useState","activeKey","setActiveKey","keyExtractor","useStableCallback","item","index","Error","useLayoutEffect","data","forEach","d","i","key","current","set","useMemo","requestAnimationFrame","value","drag","get","cellData","measurements","offset","size","onDragBegin","undefined","onContainerLayout","layout","nativeEvent","width","height","horizontal","onListContentSizeChange","w","h","onContentSizeChange","onContainerTouchStart","onContainerTouchEnd","extraData","renderItem","useCallback","onRelease","onDragEnd","from","to","newData","splice","isWeb","useAnimatedReaction","cur","prev","hasMoved","runOnJS","gestureDisabled","useSharedValue","panGesture","Gesture","Pan","onBegin","evt","state","onUpdate","translation","translationX","translationY","onEnd","springTo","withSpring","onTouchesDown","onTouchesUp","hitSlop","activeOffset","activeOffsetX","activeOffsetY","onScroll","onScrollOffsetChange","scrollHandler","useAnimatedScrollHandler","contentOffset","x","y","useAutoScroll","containerStyle","renderPlaceholder","CellRendererComponent","simultaneousHandlers","DraggableFlatList","ref","MemoizedInner","typedMemo","React","forwardRef"],"sources":["DraggableFlatList.tsx"],"sourcesContent":["import React, { useCallback, useLayoutEffect, useMemo, useState } from \"react\";\nimport { ListRenderItem, FlatListProps, LayoutChangeEvent } from \"react-native\";\nimport {\n  FlatList,\n  Gesture,\n  GestureDetector,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedScrollHandler,\n  useSharedValue,\n  withSpring,\n} from \"react-native-reanimated\";\nimport CellRendererComponent from \"./CellRendererComponent\";\nimport { DEFAULT_PROPS, isWeb } from \"../constants\";\nimport PlaceholderItem from \"./PlaceholderItem\";\nimport RowItem from \"./RowItem\";\nimport { DraggableFlatListProps } from \"../types\";\nimport PropsProvider from \"../context/propsContext\";\nimport AnimatedValueProvider, {\n  useAnimatedValues,\n} from \"../context/animatedValueContext\";\nimport RefProvider, { useRefs } from \"../context/refContext\";\nimport DraggableFlatListProvider from \"../context/draggableFlatListContext\";\nimport { useAutoScroll } from \"../hooks/useAutoScroll\";\nimport { useStableCallback } from \"../hooks/useStableCallback\";\nimport ScrollOffsetListener from \"./ScrollOffsetListener\";\nimport { typedMemo } from \"../utils\";\n\ntype RNGHFlatListProps<T> = Animated.AnimateProps<\n  FlatListProps<T> & {\n    ref: React.Ref<FlatList<T>>;\n    simultaneousHandlers?: React.Ref<any> | React.Ref<any>[];\n  }\n>;\n\nconst AnimatedFlatList = (Animated.createAnimatedComponent(\n  FlatList\n) as unknown) as <T>(props: RNGHFlatListProps<T>) => React.ReactElement;\n\nfunction DraggableFlatListInner<T>(props: DraggableFlatListProps<T>) {\n  const {\n    cellDataRef,\n    containerRef,\n    flatlistRef,\n    keyToIndexRef,\n    propsRef,\n    animationConfigRef,\n  } = useRefs<T>();\n  const {\n    activeCellOffset,\n    activeCellSize,\n    activeIndexAnim,\n    containerSize,\n    scrollOffset,\n    scrollViewSize,\n    spacerIndexAnim,\n    horizontalAnim,\n    placeholderOffset,\n    touchTranslate,\n    autoScrollDistance,\n    panGestureState,\n    isTouchActiveNative,\n    disabled,\n  } = useAnimatedValues();\n\n  const {\n    dragHitSlop = DEFAULT_PROPS.dragHitSlop,\n    scrollEnabled = DEFAULT_PROPS.scrollEnabled,\n    activationDistance: activationDistanceProp = DEFAULT_PROPS.activationDistance,\n  } = props;\n\n  const [activeKey, setActiveKey] = useState<string | null>(null);\n\n  const keyExtractor = useStableCallback((item: T, index: number) => {\n    if (!props.keyExtractor) {\n      throw new Error(\"You must provide a keyExtractor to DraggableFlatList\");\n    }\n    return props.keyExtractor(item, index);\n  });\n\n  useLayoutEffect(() => {\n    props.data.forEach((d, i) => {\n      const key = keyExtractor(d, i);\n      keyToIndexRef.current.set(key, i);\n    });\n  }, [props.data, keyExtractor, keyToIndexRef]);\n\n  // Reset hover state whenever data changes\n  useMemo(() => {\n    requestAnimationFrame(() => {\n      activeIndexAnim.value = -1;\n      spacerIndexAnim.value = -1;\n      touchTranslate.value = 0;\n      activeCellSize.value = -1;\n      activeCellOffset.value = -1;\n    });\n  }, [props.data]);\n\n  const drag = useStableCallback((activeKey: string) => {\n    if (disabled.value) return;\n    const index = keyToIndexRef.current.get(activeKey);\n    const cellData = cellDataRef.current.get(activeKey);\n    if (cellData) {\n      activeCellOffset.value = cellData.measurements.offset;\n      activeCellSize.value = cellData.measurements.size;\n    }\n\n    const { onDragBegin } = propsRef.current;\n    if (index !== undefined) {\n      spacerIndexAnim.value = index;\n      activeIndexAnim.value = index;\n      setActiveKey(activeKey);\n      onDragBegin?.(index);\n    }\n  });\n\n  const onContainerLayout = ({\n    nativeEvent: { layout },\n  }: LayoutChangeEvent) => {\n    const { width, height } = layout;\n    containerSize.value = props.horizontal ? width : height;\n    props.onContainerLayout?.({ layout, containerRef });\n  };\n\n  const onListContentSizeChange = (w: number, h: number) => {\n    scrollViewSize.value = props.horizontal ? w : h;\n    props.onContentSizeChange?.(w, h);\n  };\n\n  const onContainerTouchStart = () => {\n    if (!disabled.value) {\n      isTouchActiveNative.value = true;\n    }\n    return false;\n  };\n\n  const onContainerTouchEnd = () => {\n    isTouchActiveNative.value = false;\n  };\n\n  const extraData = useMemo(\n    () => ({\n      activeKey,\n      extraData: props.extraData,\n    }),\n    [activeKey, props.extraData]\n  );\n\n  const renderItem: ListRenderItem<T> = useCallback(\n    ({ item, index }) => {\n      const key = keyExtractor(item, index);\n      if (index !== keyToIndexRef.current.get(key)) {\n        keyToIndexRef.current.set(key, index);\n      }\n\n      return (\n        <RowItem\n          item={item}\n          itemKey={key}\n          renderItem={props.renderItem}\n          drag={drag}\n          extraData={props.extraData}\n        />\n      );\n    },\n    [props.renderItem, props.extraData, drag, keyExtractor]\n  );\n\n  const onRelease = useStableCallback((index: number) => {\n    props.onRelease?.(index);\n  });\n\n  const onDragEnd = useStableCallback(\n    ({ from, to }: { from: number; to: number }) => {\n      const { onDragEnd, data } = props;\n      if (onDragEnd) {\n        const newData = [...data];\n        if (from !== to) {\n          newData.splice(from, 1);\n          newData.splice(to, 0, data[from]);\n        }\n        onDragEnd({ from, to, data: newData });\n        if (isWeb) {\n          // prevent flicker\n          setActiveKey(null);\n        } else {\n          requestAnimationFrame(() => {\n            setActiveKey(null);\n          });\n        }\n      }\n    }\n  );\n\n  // Handle case where user ends drag without moving their finger.\n  useAnimatedReaction(\n    () => {\n      return isTouchActiveNative.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && !cur) {\n        const hasMoved = !!touchTranslate.value;\n        if (!hasMoved && activeIndexAnim.value >= 0 && !disabled.value) {\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n        }\n      }\n    },\n    [isTouchActiveNative, onDragEnd]\n  );\n\n  const gestureDisabled = useSharedValue(false);\n\n  const panGesture = Gesture.Pan()\n    .onBegin((evt) => {\n      gestureDisabled.value = disabled.value;\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n    })\n    .onUpdate((evt) => {\n      if (gestureDisabled.value) return;\n      panGestureState.value = evt.state;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n      touchTranslate.value = translation;\n    })\n    .onEnd((evt) => {\n      if (gestureDisabled.value) return;\n      // Set touch val to current translate val\n      isTouchActiveNative.value = false;\n      const translation = horizontalAnim.value\n        ? evt.translationX\n        : evt.translationY;\n\n      touchTranslate.value = translation + autoScrollDistance.value;\n      panGestureState.value = evt.state;\n\n      // Only call onDragEnd if actually dragging a cell\n      if (activeIndexAnim.value === -1 || disabled.value) return;\n      disabled.value = true;\n      runOnJS(onRelease)(activeIndexAnim.value);\n      const springTo = placeholderOffset.value - activeCellOffset.value;\n      touchTranslate.value = withSpring(\n        springTo,\n        animationConfigRef.current,\n        () => {\n          runOnJS(onDragEnd)({\n            from: activeIndexAnim.value,\n            to: spacerIndexAnim.value,\n          });\n          disabled.value = false;\n        }\n      );\n    })\n    .onTouchesDown(() => {\n      runOnJS(onContainerTouchStart)();\n    })\n    .onTouchesUp(() => {\n      // Turning this into a worklet causes timing issues. We want it to run\n      // just after the finger lifts.\n      runOnJS(onContainerTouchEnd)();\n    });\n\n  if (props.hitSlop) panGesture.hitSlop(props.hitSlop);\n  if (activationDistanceProp) {\n    const activeOffset = [-activationDistanceProp, activationDistanceProp];\n    if (props.horizontal) {\n      panGesture.activeOffsetX(activeOffset);\n    } else {\n      panGesture.activeOffsetY(activeOffset);\n    }\n  }\n\n  const onScroll = useStableCallback((scrollOffset: number) => {\n    props.onScrollOffsetChange?.(scrollOffset);\n  });\n\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: (evt) => {\n        scrollOffset.value = horizontalAnim.value\n          ? evt.contentOffset.x\n          : evt.contentOffset.y;\n        runOnJS(onScroll)(scrollOffset.value);\n      },\n    },\n    [horizontalAnim]\n  );\n\n  useAutoScroll();\n\n  return (\n    <DraggableFlatListProvider\n      activeKey={activeKey}\n      keyExtractor={keyExtractor}\n      horizontal={!!props.horizontal}\n    >\n      <GestureDetector gesture={panGesture}>\n        <Animated.View\n          style={props.containerStyle}\n          ref={containerRef}\n          onLayout={onContainerLayout}\n        >\n          {props.renderPlaceholder && (\n            <PlaceholderItem renderPlaceholder={props.renderPlaceholder} />\n          )}\n          <AnimatedFlatList\n            {...props}\n            data={props.data}\n            CellRendererComponent={CellRendererComponent}\n            ref={flatlistRef}\n            onContentSizeChange={onListContentSizeChange}\n            scrollEnabled={!activeKey && scrollEnabled}\n            renderItem={renderItem}\n            extraData={extraData}\n            keyExtractor={keyExtractor}\n            onScroll={scrollHandler}\n            scrollEventThrottle={16}\n            simultaneousHandlers={props.simultaneousHandlers}\n            removeClippedSubviews={false}\n          />\n          {!!props.onScrollOffsetChange && (\n            <ScrollOffsetListener\n              onScrollOffsetChange={props.onScrollOffsetChange}\n              scrollOffset={scrollOffset}\n            />\n          )}\n        </Animated.View>\n      </GestureDetector>\n    </DraggableFlatListProvider>\n  );\n}\n\nfunction DraggableFlatList<T>(\n  props: DraggableFlatListProps<T>,\n  ref?: React.ForwardedRef<FlatList<T>> | null\n) {\n  return (\n    <PropsProvider {...props}>\n      <AnimatedValueProvider>\n        <RefProvider flatListRef={ref}>\n          <MemoizedInner {...props} />\n        </RefProvider>\n      </AnimatedValueProvider>\n    </PropsProvider>\n  );\n}\n\nconst MemoizedInner = typedMemo(DraggableFlatListInner);\n\n// Generic forwarded ref type assertion taken from:\n// https://fettblog.eu/typescript-react-generic-forward-refs/#option-1%3A-type-assertion\nexport default React.forwardRef(DraggableFlatList) as <T>(\n  props: DraggableFlatListProps<T> & { ref?: React.ForwardedRef<FlatList<T>> }\n) => ReturnType<typeof DraggableFlatList>;\n"],"mappings":"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"}