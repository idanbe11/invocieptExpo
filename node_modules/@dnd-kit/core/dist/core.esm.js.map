{"version":3,"file":"core.esm.js","sources":["../src/components/Accessibility/defaults.ts","../src/store/actions.ts","../src/utilities/other/noop.ts","../src/store/constructors.ts","../src/store/context.ts","../src/store/reducer.ts","../src/hooks/monitor/useDndMonitor.ts","../src/components/Accessibility/Accessibility.tsx","../src/utilities/coordinates/constants.ts","../src/utilities/coordinates/distanceBetweenPoints.ts","../src/utilities/coordinates/getRelativeTransformOrigin.ts","../src/utilities/algorithms/helpers.ts","../src/utilities/algorithms/closestCenter.ts","../src/utilities/algorithms/closestCorners.ts","../src/utilities/algorithms/rectIntersection.ts","../src/utilities/algorithms/pointerWithin.ts","../src/utilities/rect/adjustScale.ts","../src/utilities/rect/getRectDelta.ts","../src/utilities/rect/rectAdjustment.ts","../src/utilities/transform/inverseTransform.ts","../src/utilities/rect/getRect.ts","../src/utilities/rect/getWindowClientRect.ts","../src/utilities/scroll/isFixed.ts","../src/utilities/scroll/isScrollable.ts","../src/utilities/scroll/getScrollableAncestors.ts","../src/utilities/scroll/getScrollableElement.ts","../src/utilities/scroll/getScrollCoordinates.ts","../src/types/direction.ts","../src/utilities/scroll/getScrollPosition.ts","../src/utilities/scroll/documentScrollingElement.ts","../src/utilities/scroll/getScrollDirectionAndSpeed.ts","../src/utilities/scroll/getScrollElementRect.ts","../src/utilities/scroll/getScrollOffsets.ts","../src/utilities/rect/Rect.ts","../src/hooks/utilities/useAutoScroller.ts","../src/hooks/utilities/useCachedNode.ts","../src/hooks/utilities/useCombineActivators.ts","../src/hooks/utilities/useDroppableMeasuring.ts","../src/hooks/utilities/useResizeObserver.ts","../src/hooks/utilities/useScrollOffsets.ts","../src/hooks/utilities/useScrollableAncestors.ts","../src/hooks/utilities/useSensorSetup.ts","../src/hooks/utilities/useSyntheticListeners.ts","../src/hooks/utilities/useRect.ts","../src/utilities/nodes/getMeasurableNode.ts","../src/hooks/utilities/useDragOverlayMeasuring.ts","../src/sensors/useSensor.ts","../src/sensors/useSensors.ts","../src/sensors/utilities/Listeners.ts","../src/sensors/utilities/getEventListenerTarget.ts","../src/sensors/utilities/hasExceededDistance.ts","../src/sensors/events.ts","../src/sensors/keyboard/types.ts","../src/sensors/keyboard/defaults.ts","../src/sensors/keyboard/KeyboardSensor.ts","../src/sensors/pointer/AbstractPointerSensor.ts","../src/sensors/pointer/PointerSensor.ts","../src/sensors/mouse/MouseSensor.ts","../src/sensors/touch/TouchSensor.ts","../src/modifiers/applyModifiers.ts","../src/components/DndContext/DndContext.tsx","../src/hooks/useDraggable.ts","../src/hooks/useDndContext.ts","../src/hooks/useDroppable.ts","../src/components/DragOverlay/hooks/useDropAnimation.ts","../src/components/DragOverlay/DragOverlay.tsx"],"sourcesContent":["import type {Announcements, ScreenReaderInstructions} from './types';\n\nexport const screenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart(id) {\n    return `Picked up draggable item ${id}.`;\n  },\n  onDragOver(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was moved over droppable area ${overId}.`;\n    }\n\n    return `Draggable item ${id} is no longer over a droppable area.`;\n  },\n  onDragEnd(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was dropped over droppable area ${overId}`;\n    }\n\n    return `Draggable item ${id} was dropped.`;\n  },\n  onDragCancel(id) {\n    return `Dragging was cancelled. Draggable item ${id} was dropped.`;\n  },\n};\n","import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  DragOver = 'dragOver',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n    };\n","export function noop(..._args: any) {}\n","import type {UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\ntype Identifier = UniqueIdentifier | null | undefined;\n\nexport class DroppableContainersMap extends Map<\n  UniqueIdentifier,\n  DroppableContainer\n> {\n  get(id: Identifier) {\n    return id != null ? super.get(id) ?? undefined : undefined;\n  }\n\n  toArray(): DroppableContainer[] {\n    return Array.from(this.values());\n  }\n\n  getEnabled(): DroppableContainer[] {\n    return this.toArray().filter(({disabled}) => !disabled);\n  }\n\n  getNodeFor(id: Identifier) {\n    return this.get(id)?.node.current ?? undefined;\n  }\n}\n","import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport {DroppableContainersMap} from './constructors';\nimport type {InternalContextDescriptor, PublicContextDescriptor} from './types';\n\nexport const defaultPublicContext: PublicContextDescriptor = {\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  collisions: null,\n  containerNodeRect: null,\n  draggableNodes: {},\n  droppableRects: new Map(),\n  droppableContainers: new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  measureDroppableContainers: noop,\n  windowRect: null,\n  measuringScheduled: false,\n};\n\nexport const defaultInternalContext: InternalContextDescriptor = {\n  activatorEvent: null,\n  activators: [],\n  active: null,\n  activeNodeRect: null,\n  ariaDescribedById: {\n    draggable: '',\n  },\n  dispatch: noop,\n  draggableNodes: {},\n  over: null,\n  measureDroppableContainers: noop,\n};\n\nexport const InternalContext = createContext<InternalContextDescriptor>(\n  defaultInternalContext\n);\n\nexport const PublicContext = createContext<PublicContextDescriptor>(\n  defaultPublicContext\n);\n","import {Action, Actions} from './actions';\nimport {DroppableContainersMap} from './constructors';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      nodes: {},\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: new DroppableContainersMap(),\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n        },\n      };\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, element);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, key, disabled} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, {\n        ...element,\n        disabled,\n      });\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id, key} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.delete(id);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {createContext, useContext, useEffect, useRef} from 'react';\n\nimport {Action} from '../../store';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n} from '../../types';\n\nexport interface Arguments {\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface DndMonitorState {\n  type: Action | null;\n  event:\n    | null\n    | DragStartEvent\n    | DragMoveEvent\n    | DragOverEvent\n    | DragEndEvent\n    | DragCancelEvent;\n}\n\nexport const DndMonitorContext = createContext<DndMonitorState>({\n  type: null,\n  event: null,\n});\n\nexport function useDndMonitor({\n  onDragStart,\n  onDragMove,\n  onDragOver,\n  onDragEnd,\n  onDragCancel,\n}: Arguments) {\n  const monitorState = useContext(DndMonitorContext);\n  const previousMonitorState = useRef(monitorState);\n\n  useEffect(() => {\n    if (monitorState !== previousMonitorState.current) {\n      const {type, event} = monitorState;\n\n      switch (type) {\n        case Action.DragStart:\n          onDragStart?.(event as DragStartEvent);\n          break;\n        case Action.DragMove:\n          onDragMove?.(event as DragMoveEvent);\n          break;\n        case Action.DragOver:\n          onDragOver?.(event as DragOverEvent);\n          break;\n        case Action.DragCancel:\n          onDragCancel?.(event as DragCancelEvent);\n          break;\n        case Action.DragEnd:\n          onDragEnd?.(event as DragEndEvent);\n          break;\n      }\n\n      previousMonitorState.current = monitorState;\n    }\n  }, [\n    monitorState,\n    onDragStart,\n    onDragMove,\n    onDragOver,\n    onDragEnd,\n    onDragCancel,\n  ]);\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport type {Announcements, ScreenReaderInstructions} from './types';\nimport type {UniqueIdentifier} from '../../types';\nimport {defaultAnnouncements} from './defaults';\nimport {DndMonitorArguments, useDndMonitor} from '../../hooks/monitor';\n\ninterface Props {\n  announcements?: Announcements;\n  screenReaderInstructions: ScreenReaderInstructions;\n  hiddenTextDescribedById: UniqueIdentifier;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  hiddenTextDescribedById,\n  screenReaderInstructions,\n}: Props) {\n  const {announce, announcement} = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useDndMonitor(\n    useMemo<DndMonitorArguments>(\n      () => ({\n        onDragStart({active}) {\n          announce(announcements.onDragStart(active.id));\n        },\n        onDragMove({active, over}) {\n          if (announcements.onDragMove) {\n            announce(announcements.onDragMove(active.id, over?.id));\n          }\n        },\n        onDragOver({active, over}) {\n          announce(announcements.onDragOver(active.id, over?.id));\n        },\n        onDragEnd({active, over}) {\n          announce(announcements.onDragEnd(active.id, over?.id));\n        },\n        onDragCancel({active}) {\n          announce(announcements.onDragCancel(active.id));\n        },\n      }),\n      [announce, announcements]\n    )\n  );\n\n  return mounted\n    ? createPortal(\n        <>\n          <HiddenText\n            id={hiddenTextDescribedById}\n            value={screenReaderInstructions.draggable}\n          />\n          <LiveRegion id={liveRegionId} announcement={announcement} />\n        </>,\n        document.body\n      )\n    : null;\n}\n","import type {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n","import type {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n","import {getEventCoordinates} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function getRelativeTransformOrigin(\n  event: MouseEvent | TouchEvent | KeyboardEvent,\n  rect: ClientRect\n) {\n  const eventCoordinates = getEventCoordinates(event);\n\n  if (!eventCoordinates) {\n    return '0 0';\n  }\n\n  const transformOrigin = {\n    x: ((eventCoordinates.x - rect.left) / rect.width) * 100,\n    y: ((eventCoordinates.y - rect.top) / rect.height) * 100,\n  };\n\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n","/* eslint-disable no-redeclare */\nimport type {ClientRect} from '../../types';\n\nimport type {Collision, CollisionDescriptor} from './types';\n\n/**\n * Sort collisions from smallest to greatest value\n */\nexport function sortCollisionsAsc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return a - b;\n}\n\n/**\n * Sort collisions from greatest to smallest value\n */\nexport function sortCollisionsDesc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return b - a;\n}\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\nexport function cornersOfRectangle({left, top, height, width}: ClientRect) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + height,\n    },\n    {\n      x: left + width,\n      y: top + height,\n    },\n  ];\n}\n\n/**\n * Returns the first collision, or null if there isn't one.\n * If a property is specified, returns the specified property of the first collision.\n */\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined\n): Collision | null;\nexport function getFirstCollision<T extends keyof Collision>(\n  collisions: Collision[] | null | undefined,\n  property: T\n): Collision[T] | null;\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined,\n  property?: keyof Collision\n) {\n  if (!collisions || collisions.length === 0) {\n    return null;\n  }\n\n  const [firstCollision] = collisions;\n\n  return property ? firstCollision[property] : firstCollision;\n}\n","import {distanceBetween} from '../coordinates';\nimport type {Coordinates, ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: ClientRect,\n  left = rect.left,\n  top = rect.top\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangles from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = ({\n  collisionRect,\n  droppableContainers,\n}) => {\n  const centerRect = centerOfRectangle(\n    collisionRect,\n    collisionRect.left,\n    collisionRect.top\n  );\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n\n      collisions.push({id, data: {droppableContainer, value: distBetween}});\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import {distanceBetween} from '../coordinates';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {cornersOfRectangle, sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the closest rectangles from an array of rectangles to the corners of\n * another rectangle.\n */\nexport const closestCorners: CollisionDetection = ({\n  collisionRect,\n  droppableContainers,\n}) => {\n  const corners = cornersOfRectangle(collisionRect);\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect) {\n      const rectCorners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner, index) => {\n        return accumulator + distanceBetween(rectCorners[index], corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      collisions.push({\n        id,\n        data: {droppableContainer, value: effectiveDistance},\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import type {ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsDesc} from './helpers';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nexport function getIntersectionRatio(\n  entry: ClientRect,\n  target: ClientRect\n): number {\n  const top = Math.max(target.top, entry.top);\n  const left = Math.max(target.left, entry.left);\n  const right = Math.min(target.left + target.width, entry.left + entry.width);\n  const bottom = Math.min(target.top + target.height, entry.top + entry.height);\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangles that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = ({\n  collisionRect,\n  droppableContainers,\n}) => {\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > 0) {\n        collisions.push({\n          id,\n          data: {droppableContainer, value: intersectionRatio},\n        });\n      }\n    }\n  }\n\n  return collisions.sort(sortCollisionsDesc);\n};\n","import type {Coordinates, ClientRect} from '../../types';\nimport {distanceBetween} from '../coordinates';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {cornersOfRectangle, sortCollisionsAsc} from './helpers';\n\n/**\n * Check if a given point is contained within a bounding rectangle\n */\nfunction isPointWithinRect(point: Coordinates, rect: ClientRect): boolean {\n  const {top, left, bottom, right} = rect;\n\n  return (\n    top <= point.y && point.y <= bottom && left <= point.x && point.x <= right\n  );\n}\n\n/**\n * Returns the rectangles that the pointer is hovering over\n */\nexport const pointerWithin: CollisionDetection = ({\n  droppableContainers,\n  pointerCoordinates,\n}) => {\n  if (!pointerCoordinates) {\n    return [];\n  }\n\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {\n      id,\n      rect: {current: rect},\n    } = droppableContainer;\n\n    if (rect && isPointWithinRect(pointerCoordinates, rect)) {\n      /* There may be more than a single rectangle intersecting\n       * with the pointer coordinates. In order to sort the\n       * colliding rectangles, we measure the distance between\n       * the pointer and the corners of the intersecting rectangle\n       */\n      const corners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner) => {\n        return accumulator + distanceBetween(pointerCoordinates, corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      collisions.push({\n        id,\n        data: {droppableContainer, value: effectiveDistance},\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import type {Transform} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n","import type {Coordinates, ClientRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n","import type {Coordinates, ClientRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustClientRect(\n    rect: ClientRect,\n    ...adjustments: Coordinates[]\n  ): ClientRect {\n    return adjustments.reduce<ClientRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n      }),\n      {...rect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n","import type {ClientRect} from '../../types';\n\nexport function inverseTransform(\n  rect: ClientRect,\n  transform: string,\n  transformOrigin: string\n): ClientRect {\n  let ta, sx, sy, dx, dy;\n\n  if (transform.startsWith('matrix3d(')) {\n    ta = transform.slice(9, -1).split(/, /);\n    sx = +ta[0];\n    sy = +ta[5];\n    dx = +ta[12];\n    dy = +ta[13];\n  } else if (transform.startsWith('matrix(')) {\n    ta = transform.slice(7, -1).split(/, /);\n    sx = +ta[0];\n    sy = +ta[3];\n    dx = +ta[4];\n    dy = +ta[5];\n  } else {\n    return rect;\n  }\n\n  const x = rect.left - dx - (1 - sx) * parseFloat(transformOrigin);\n  const y =\n    rect.top -\n    dy -\n    (1 - sy) *\n      parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = sx ? rect.width / sx : rect.width;\n  const h = sy ? rect.height / sy : rect.height;\n\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x,\n  };\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {inverseTransform} from '../transform';\n\ninterface Options {\n  ignoreTransform?: boolean;\n}\n\nconst defaultOptions: Options = {ignoreTransform: false};\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n */\nexport function getClientRect(\n  element: HTMLElement,\n  options: Options = defaultOptions\n) {\n  let rect: ClientRect = element.getBoundingClientRect();\n\n  if (options.ignoreTransform) {\n    const {getComputedStyle} = getWindow(element);\n    const {transform, transformOrigin} = getComputedStyle(element);\n\n    if (transform) {\n      rect = inverseTransform(rect, transform, transformOrigin);\n    }\n  }\n\n  const {top, left, width, height, bottom, right} = rect;\n\n  return {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right,\n  };\n}\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n *\n * @remarks\n * The ClientRect returned by this method does not take into account transforms\n * applied to the element it measures.\n *\n */\nexport function getTransformAgnosticClientRect(\n  element: HTMLElement\n): ClientRect {\n  return getClientRect(element, {ignoreTransform: true});\n}\n","import type {ClientRect} from '../../types';\n\nexport function getWindowClientRect(element: typeof window): ClientRect {\n  const width = element.innerWidth;\n  const height = element.innerHeight;\n\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  };\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nexport function isFixed(\n  node: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(node).getComputedStyle(node)\n): boolean {\n  return computedStyle.position === 'fixed';\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nexport function isScrollable(\n  element: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(element).getComputedStyle(\n    element\n  )\n): boolean {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return (\n    properties.find((property) => {\n      const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n      return typeof value === 'string' ? overflowRegex.test(value) : false;\n    }) != null\n  );\n}\n","import {\n  getWindow,\n  isDocument,\n  isHTMLElement,\n  isSVGElement,\n} from '@dnd-kit/utilities';\n\nimport {isFixed} from './isFixed';\nimport {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(element: Node | null): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (\n      isDocument(node) &&\n      node.scrollingElement != null &&\n      !scrollParents.includes(node.scrollingElement)\n    ) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const {getComputedStyle} = getWindow(node);\n    const computedStyle = getComputedStyle(node);\n\n    if (node !== element) {\n      if (isScrollable(node, computedStyle)) {\n        scrollParents.push(node);\n      }\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\n","import {\n  canUseDOM,\n  isHTMLElement,\n  isDocument,\n  getOwnerDocument,\n  isNode,\n  isWindow,\n} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (\n    isDocument(element) ||\n    element === getOwnerDocument(element).scrollingElement\n  ) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n","import {isWindow} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\n\nexport function getScrollXCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollX;\n  }\n\n  return element.scrollLeft;\n}\n\nexport function getScrollYCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollY;\n  }\n\n  return element.scrollTop;\n}\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  return {\n    x: getScrollXCoordinate(element),\n    y: getScrollYCoordinate(element),\n  };\n}\n","export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n","export function getScrollPosition(scrollingContainer: Element) {\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - scrollingContainer.clientWidth,\n    y: scrollingContainer.scrollHeight - scrollingContainer.clientHeight,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll,\n  };\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n","import {Direction, ClientRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\nimport {isDocumentScrollingElement} from './documentScrollingElement';\n\ninterface PositionalCoordinates\n  extends Pick<ClientRect, 'top' | 'left' | 'right' | 'bottom'> {}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2,\n};\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ClientRect,\n  {top, left, right, bottom}: PositionalCoordinates,\n  acceleration = 10,\n  thresholdPercentage = defaultThreshold\n) {\n  const {clientHeight, clientWidth} = scrollContainer;\n  const finalScrollContainerRect = isDocumentScrollingElement(scrollContainer)\n    ? {\n        top: 0,\n        left: 0,\n        right: clientWidth,\n        bottom: clientHeight,\n        width: clientWidth,\n        height: clientHeight,\n      }\n    : scrollContainerRect;\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: finalScrollContainerRect.height * thresholdPercentage.y,\n    width: finalScrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (!isTop && top <= finalScrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.top + threshold.height - top) /\n          threshold.height\n      );\n  } else if (\n    !isBottom &&\n    bottom >= finalScrollContainerRect.bottom - threshold.height\n  ) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.bottom - threshold.height - bottom) /\n          threshold.height\n      );\n  }\n\n  if (!isRight && right >= finalScrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.right - threshold.width - right) /\n          threshold.width\n      );\n  } else if (\n    !isLeft &&\n    left <= finalScrollContainerRect.left + threshold.width\n  ) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (finalScrollContainerRect.left + threshold.width - left) /\n          threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","export function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  const {top, left, right, bottom} = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight,\n  };\n}\n","import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  getScrollCoordinates,\n  getScrollXCoordinate,\n  getScrollYCoordinate,\n} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n\nexport function getScrollXOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollXCoordinate(node);\n  }, 0);\n}\n\nexport function getScrollYOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollYCoordinate(node);\n  }, 0);\n}\n","import type {ClientRect} from '../../types/rect';\nimport {\n  getScrollableAncestors,\n  getScrollOffsets,\n  getScrollXOffset,\n  getScrollYOffset,\n} from '../scroll';\n\nconst properties = [\n  ['x', ['left', 'right'], getScrollXOffset],\n  ['y', ['top', 'bottom'], getScrollYOffset],\n] as const;\n\nexport class Rect {\n  constructor(rect: ClientRect, element: HTMLElement) {\n    const scrollableAncestors = getScrollableAncestors(element);\n    const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n    this.rect = {...rect};\n    this.width = rect.width;\n    this.height = rect.height;\n\n    for (const [axis, keys, getScrollOffset] of properties) {\n      for (const key of keys) {\n        Object.defineProperty(this, key, {\n          get: () => {\n            const currentOffsets = getScrollOffset(scrollableAncestors);\n            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;\n\n            return this.rect[key] + scrollOffsetsDeltla;\n          },\n          enumerable: true,\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'rect', {enumerable: false});\n  }\n\n  private rect: ClientRect;\n\n  public width: number;\n\n  public height: number;\n\n  // The below properties are set by the `Object.defineProperty` calls in the constructor\n  // @ts-ignore\n  public top: number;\n  // @ts-ignore\n  public bottom: number;\n  // @ts-ignore\n  public right: number;\n  // @ts-ignore\n  public left: number;\n}\n","import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useInterval} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed, defaultCoordinates} from '../../utilities';\nimport type {Coordinates, Direction, ClientRect} from '../../types';\n\nexport type ScrollAncestorSortingFn = (ancestors: Element[]) => Element[];\n\nexport enum AutoScrollActivator {\n  Pointer,\n  DraggableRect,\n}\n\nexport interface Options {\n  acceleration?: number;\n  activator?: AutoScrollActivator;\n  canScroll?: CanScroll;\n  enabled?: boolean;\n  interval?: number;\n  order?: TraversalOrder;\n  threshold?: {\n    x: number;\n    y: number;\n  };\n}\n\ninterface Arguments extends Options {\n  draggingRect: ClientRect | null;\n  enabled: boolean;\n  pointerCoordinates: Coordinates | null;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ClientRect[];\n}\n\nexport type CanScroll = (element: Element) => boolean;\n\nexport enum TraversalOrder {\n  TreeOrder,\n  ReversedTreeOrder,\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  threshold,\n}: Arguments) {\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({\n    x: 1,\n    y: 1,\n  });\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates\n          ? {\n              top: pointerCoordinates.y,\n              bottom: pointerCoordinates.y,\n              left: pointerCoordinates.x,\n              right: pointerCoordinates.x,\n            }\n          : null;\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n\n    return null;\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollDirection = useRef<ScrollDirection>(defaultCoordinates);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(\n    () =>\n      order === TraversalOrder.TreeOrder\n        ? [...scrollableAncestors].reverse()\n        : scrollableAncestors,\n    [order, scrollableAncestors]\n  );\n\n  useEffect(\n    () => {\n      if (!enabled || !scrollableAncestors.length || !rect) {\n        clearAutoScrollInterval();\n        return;\n      }\n\n      for (const scrollContainer of sortedScrollableAncestors) {\n        if (canScroll?.(scrollContainer) === false) {\n          continue;\n        }\n\n        const index = scrollableAncestors.indexOf(scrollContainer);\n        const scrollContainerRect = scrollableAncestorRects[index];\n\n        if (!scrollContainerRect) {\n          continue;\n        }\n\n        const {direction, speed} = getScrollDirectionAndSpeed(\n          scrollContainer,\n          scrollContainerRect,\n          rect,\n          acceleration,\n          threshold\n        );\n\n        if (speed.x > 0 || speed.y > 0) {\n          clearAutoScrollInterval();\n\n          scrollContainerRef.current = scrollContainer;\n          setAutoScrollInterval(autoScroll, interval);\n\n          scrollSpeed.current = speed;\n          scrollDirection.current = direction;\n\n          return;\n        }\n      }\n\n      scrollSpeed.current = {x: 0, y: 0};\n      scrollDirection.current = {x: 0, y: 0};\n      clearAutoScrollInterval();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      acceleration,\n      autoScroll,\n      canScroll,\n      clearAutoScrollInterval,\n      enabled,\n      interval,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(rect),\n      setAutoScrollInterval,\n      scrollableAncestors,\n      sortedScrollableAncestors,\n      scrollableAncestorRects,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(threshold),\n    ]\n  );\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {DraggableNode, DraggableNodes} from '../../store';\nimport type {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNodes: DraggableNodes,\n  id: UniqueIdentifier | null\n): DraggableNode['node']['current'] {\n  const draggableNode = id !== null ? draggableNodes[id] : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n\n  return useLazyMemo(\n    (cachedNode) => {\n      if (id === null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return node ?? cachedNode ?? null;\n    },\n    [node, id]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorHandler} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorHandler,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {Rect, getTransformAgnosticClientRect} from '../../utilities/rect';\nimport type {DroppableContainer, RectMap} from '../../store/types';\nimport type {ClientRect, UniqueIdentifier} from '../../types';\n\ninterface Arguments {\n  dragging: boolean;\n  dependencies: any[];\n  config: Partial<DroppableMeasuring> | undefined;\n}\n\nexport enum MeasuringStrategy {\n  Always,\n  BeforeDragging,\n  WhileDragging,\n}\n\nexport enum MeasuringFrequency {\n  Optimized = 'optimized',\n}\n\ntype MeasuringFunction = (element: HTMLElement) => ClientRect;\n\nexport interface DroppableMeasuring {\n  measure: MeasuringFunction;\n  strategy: MeasuringStrategy;\n  frequency: MeasuringFrequency | number;\n}\n\nconst defaultValue: RectMap = new Map();\n\nconst defaultConfig: DroppableMeasuring = {\n  measure: getTransformAgnosticClientRect,\n  strategy: MeasuringStrategy.WhileDragging,\n  frequency: MeasuringFrequency.Optimized,\n};\n\nexport function useDroppableMeasuring(\n  containers: DroppableContainer[],\n  {dragging, dependencies, config}: Arguments\n) {\n  const [\n    containerIdsScheduledForMeasurement,\n    setContainerIdsScheduledForMeasurement,\n  ] = useState<UniqueIdentifier[] | null>(null);\n  const measuringScheduled = containerIdsScheduledForMeasurement != null;\n  const {frequency, measure, strategy} = {\n    ...defaultConfig,\n    ...config,\n  };\n  const containersRef = useRef(containers);\n  const measureDroppableContainers = useCallback(\n    (ids: UniqueIdentifier[] = []) =>\n      setContainerIdsScheduledForMeasurement((value) =>\n        value ? value.concat(ids) : ids\n      ),\n    []\n  );\n  const timeoutId = useRef<NodeJS.Timeout | null>(null);\n  const disabled = isDisabled();\n  const droppableRects = useLazyMemo<RectMap>(\n    (previousValue) => {\n      if (disabled && !dragging) {\n        return defaultValue;\n      }\n\n      const ids = containerIdsScheduledForMeasurement;\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        ids != null\n      ) {\n        const map: RectMap = new Map();\n\n        for (let container of containers) {\n          if (!container) {\n            continue;\n          }\n\n          if (\n            ids &&\n            ids.length > 0 &&\n            !ids.includes(container.id) &&\n            container.rect.current\n          ) {\n            // This container does not need to be re-measured\n            map.set(container.id, container.rect.current);\n            continue;\n          }\n\n          const node = container.node.current;\n          const rect = node ? new Rect(measure(node), node) : null;\n\n          container.rect.current = rect;\n\n          if (rect) {\n            map.set(container.id, rect);\n          }\n        }\n\n        return map;\n      }\n\n      return previousValue;\n    },\n    [\n      containers,\n      containerIdsScheduledForMeasurement,\n      dragging,\n      disabled,\n      measure,\n    ]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(\n    () => {\n      if (disabled) {\n        return;\n      }\n\n      requestAnimationFrame(() => measureDroppableContainers());\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dragging, disabled]\n  );\n\n  useEffect(() => {\n    if (measuringScheduled) {\n      setContainerIdsScheduledForMeasurement(null);\n    }\n  }, [measuringScheduled]);\n\n  useEffect(\n    () => {\n      if (\n        disabled ||\n        typeof frequency !== 'number' ||\n        timeoutId.current !== null\n      ) {\n        return;\n      }\n\n      timeoutId.current = setTimeout(() => {\n        measureDroppableContainers();\n        timeoutId.current = null;\n      }, frequency);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [frequency, disabled, measureDroppableContainers, ...dependencies]\n  );\n\n  return {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled,\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n      default:\n        return !dragging;\n    }\n  }\n}\n","import {useEffect, useMemo} from 'react';\n\ninterface Arguments {\n  disabled?: boolean;\n  onResize: ResizeObserverCallback;\n}\n\n/**\n * Returns a new ResizeObserver instance bound to the `onResize` callback.\n * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useResizeObserver({onResize, disabled}: Arguments) {\n  const resizeObserver = useMemo(() => {\n    if (\n      disabled ||\n      typeof window === 'undefined' ||\n      typeof window.ResizeObserver === 'undefined'\n    ) {\n      return undefined;\n    }\n\n    const {ResizeObserver} = window;\n\n    return new ResizeObserver(onResize);\n  }, [disabled, onResize]);\n\n  useEffect(() => {\n    return () => resizeObserver?.disconnect();\n  }, [resizeObserver]);\n\n  return resizeObserver;\n}\n","import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n","import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n","import {useEffect} from 'react';\nimport {canUseDOM} from '@dnd-kit/utilities';\n\nimport type {SensorDescriptor} from '../../sensors';\n\nexport function useSensorSetup(sensors: SensorDescriptor<any>[]) {\n  useEffect(\n    () => {\n      if (!canUseDOM) {\n        return;\n      }\n\n      const teardownFns = sensors.map(({sensor}) => sensor.setup?.());\n\n      return () => {\n        for (const teardown of teardownFns) {\n          teardown?.();\n        }\n      };\n    },\n    // TO-DO: Sensors length could theoretically change which would not be a valid dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    sensors.map(({sensor}) => sensor)\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: string\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n","import {useMemo, useRef} from 'react';\nimport {isHTMLElement, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {\n  Rect,\n  getWindowClientRect,\n  getTransformAgnosticClientRect,\n} from '../../utilities/rect';\nimport type {ClientRect} from '../../types';\n\ntype RectFn<T> = (element: T) => ClientRect;\n\nexport const useClientRect = createUseRectFn(getTransformAgnosticClientRect);\nexport const useClientRects = createUseRectsFn(getTransformAgnosticClientRect);\n\nexport function useRect<T extends HTMLElement>(\n  element: T | null,\n  getRect: (element: T) => ClientRect,\n  forceRecompute?: boolean\n): Rect | null {\n  const previousElement = useRef(element);\n\n  return useLazyMemo<Rect | null>(\n    (previousValue) => {\n      if (!element) {\n        return null;\n      }\n\n      if (\n        forceRecompute ||\n        (!previousValue && element) ||\n        element !== previousElement.current\n      ) {\n        if (isHTMLElement(element) && element.parentNode == null) {\n          return null;\n        }\n\n        return new Rect(getRect(element), element);\n      }\n\n      return previousValue ?? null;\n    },\n    [element, forceRecompute, getRect]\n  );\n}\n\nexport function createUseRectFn<T extends HTMLElement>(getRect: RectFn<T>) {\n  return (element: T | null, forceRecompute?: boolean) =>\n    useRect(element, getRect, forceRecompute);\n}\n\nfunction createUseRectsFn(getRect: RectFn<HTMLElement>) {\n  const defaultValue: Rect[] = [];\n\n  return function useRects(\n    elements: HTMLElement[],\n    forceRecompute?: boolean\n  ): Rect[] {\n    const previousElements = useRef(elements);\n\n    return useLazyMemo<Rect[]>(\n      (previousValue) => {\n        if (!elements.length) {\n          return defaultValue;\n        }\n\n        if (\n          forceRecompute ||\n          (!previousValue && elements.length) ||\n          elements !== previousElements.current\n        ) {\n          return elements.map((element) => new Rect(getRect(element), element));\n        }\n\n        return previousValue ?? defaultValue;\n      },\n      [elements, forceRecompute]\n    );\n  };\n}\n\nexport function useWindowRect(element: typeof window | null) {\n  return useMemo(() => (element ? getWindowClientRect(element) : null), [\n    element,\n  ]);\n}\n","import {isHTMLElement} from '@dnd-kit/utilities';\n\nexport function getMeasurableNode(\n  node: HTMLElement | undefined | null\n): HTMLElement | null {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n  const firstChild = node.children[0];\n\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n","import {useMemo, useCallback, useState} from 'react';\nimport {isHTMLElement, useNodeRef} from '@dnd-kit/utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {getMeasurableNode} from '../../utilities/nodes';\nimport {getClientRect} from '../../utilities/rect';\nimport type {PublicContextDescriptor} from '../../store';\nimport type {ClientRect} from '../../types';\n\ninterface Arguments {\n  measure?(element: HTMLElement): ClientRect;\n}\n\nexport function useDragOverlayMeasuring({\n  measure = getClientRect,\n}: Arguments): PublicContextDescriptor['dragOverlay'] {\n  const [rect, setRect] = useState<ClientRect | null>(null);\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      for (const {target} of entries) {\n        if (isHTMLElement(target)) {\n          setRect((rect) => {\n            const newRect = measure(target);\n\n            return rect\n              ? {...rect, width: newRect.width, height: newRect.height}\n              : newRect;\n          });\n          break;\n        }\n      }\n    },\n    [measure]\n  );\n  const resizeObserver = useResizeObserver({onResize: handleResize});\n  const handleNodeChange = useCallback(\n    (element) => {\n      const node = getMeasurableNode(element);\n\n      resizeObserver?.disconnect();\n\n      if (node) {\n        resizeObserver?.observe(node);\n      }\n\n      setRect(node ? measure(node) : null);\n    },\n    [measure, resizeObserver]\n  );\n  const [nodeRef, setRef] = useNodeRef(handleNodeChange);\n\n  return useMemo(\n    () => ({\n      nodeRef,\n      rect,\n      setRef,\n    }),\n    [rect, nodeRef, setRef]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n","export class Listeners {\n  private listeners: [\n    string,\n    EventListenerOrEventListenerObject,\n    AddEventListenerOptions | boolean | undefined\n  ][] = [];\n\n  constructor(private target: EventTarget | null) {}\n\n  public add<T extends Event>(\n    eventName: string,\n    handler: (event: T) => void,\n    options?: AddEventListenerOptions | boolean\n  ) {\n    this.target?.addEventListener(eventName, handler as EventListener, options);\n    this.listeners.push([eventName, handler as EventListener, options]);\n  }\n\n  public removeAll = () => {\n    this.listeners.forEach((listener) =>\n      this.target?.removeEventListener(...listener)\n    );\n  };\n}\n","import {getOwnerDocument, getWindow} from '@dnd-kit/utilities';\n\nexport function getEventListenerTarget(\n  target: EventTarget | null\n): EventTarget | Document {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n\n  const {EventTarget} = getWindow(target);\n\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n","import type {Coordinates, DistanceMeasurement} from '../../types';\n\nexport function hasExceededDistance(\n  delta: Coordinates,\n  measurement: DistanceMeasurement\n): boolean {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n","export enum EventName {\n  Click = 'click',\n  DragStart = 'dragstart',\n  Keydown = 'keydown',\n  ContextMenu = 'contextmenu',\n  Resize = 'resize',\n  SelectionChange = 'selectionchange',\n  VisibilityChange = 'visibilitychange',\n}\n\nexport function preventDefault(event: Event) {\n  event.preventDefault();\n}\n\nexport function stopPropagation(event: Event) {\n  event.stopPropagation();\n}\n","import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n","import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n","import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n  getOwnerDocument,\n  getWindow,\n  isKeyboardEvent,\n} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  defaultCoordinates,\n  getTransformAgnosticClientRect,\n  getScrollPosition,\n  getScrollElementRect,\n} from '../../utilities';\nimport {Listeners} from '../utilities';\nimport {EventName} from '../events';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n  onActivation?({event}: {event: KeyboardEvent}): void;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private coordinates: Coordinates = defaultCoordinates;\n  private listeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n\n    if (!activeNode.node.current) {\n      throw new Error('Active draggable node is undefined');\n    }\n\n    const activeNodeRect = getTransformAgnosticClientRect(\n      activeNode.node.current\n    );\n    const coordinates = {\n      x: activeNodeRect.left,\n      y: activeNodeRect.top,\n    };\n\n    this.coordinates = coordinates;\n\n    onStart(coordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (isKeyboardEvent(event)) {\n      const {coordinates} = this;\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates: coordinates,\n      });\n\n      if (newCoordinates) {\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const coordinatesDelta = getCoordinatesDelta(\n            newCoordinates,\n            coordinates\n          );\n          const {\n            isTop,\n            isRight,\n            isLeft,\n            isBottom,\n            maxScroll,\n            minScroll,\n          } = getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                scrollContainer.scrollLeft + coordinatesDelta.x <=\n                  maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                scrollContainer.scrollLeft + coordinatesDelta.x >= minScroll.x);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                left: coordinatesDelta.x,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.x =\n              direction === KeyboardCode.Right\n                ? scrollContainer.scrollLeft - maxScroll.x\n                : scrollContainer.scrollLeft - minScroll.x;\n\n            scrollContainer.scrollBy({\n              left: -scrollDelta.x,\n              behavior: scrollBehavior,\n            });\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                scrollContainer.scrollTop + coordinatesDelta.y <=\n                  maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                scrollContainer.scrollTop + coordinatesDelta.y >= minScroll.y);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                top: coordinatesDelta.y,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.y =\n              direction === KeyboardCode.Down\n                ? scrollContainer.scrollTop - maxScroll.y\n                : scrollContainer.scrollTop - minScroll.y;\n\n            scrollContainer.scrollBy({\n              top: -scrollDelta.y,\n              behavior: scrollBehavior,\n            });\n\n            break;\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(newCoordinates, scrollDelta)\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n    this.coordinates = coordinates;\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n  static activators = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {\n          keyboardCodes = defaultKeyboardCodes,\n          onActivation,\n        }: KeyboardSensorOptions\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          event.preventDefault();\n\n          onActivation?.({event: event.nativeEvent});\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n","import {\n  subtract as getCoordinatesDelta,\n  getEventCoordinates,\n  getOwnerDocument,\n  getWindow,\n} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\nimport {\n  getEventListenerTarget,\n  hasExceededDistance,\n  Listeners,\n} from '../utilities';\nimport {EventName, preventDefault, stopPropagation} from '../events';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates, DistanceMeasurement} from '../../types';\n\ninterface DistanceConstraint {\n  distance: DistanceMeasurement;\n  tolerance?: DistanceMeasurement;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: DistanceMeasurement;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint = DistanceConstraint | DelayConstraint;\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface AbstractPointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n  onActivation?({event}: {event: Event}): void;\n}\n\nexport type AbstractPointerSensorProps = SensorProps<AbstractPointerSensorOptions>;\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private document: Document;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private documentListeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(\n    private props: AbstractPointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n    const {target} = event;\n\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, {passive: false});\n    this.listeners.add(events.end.name, this.handleEnd);\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n\n    // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      // Stop propagation of click events once activation constraints are met\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true,\n      });\n\n      // Remove any text selection from the document\n      this.removeTextSelection();\n\n      // Prevent further text selection while dragging\n      this.documentListeners.add(\n        EventName.SelectionChange,\n        this.removeTextSelection\n      );\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (\n          activationConstraint.tolerance != null &&\n          hasExceededDistance(delta, activationConstraint.tolerance)\n        ) {\n          return this.handleCancel();\n        }\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onEnd} = this.props;\n\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onCancel} = this.props;\n\n    this.detach();\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  private removeTextSelection() {\n    this.document.getSelection()?.removeAllRanges();\n  }\n}\n","import type {PointerEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  AbstractPointerSensorOptions,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport interface PointerSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: (\n        {nativeEvent: event}: PointerEvent,\n        {onActivation}: PointerSensorOptions\n      ) => {\n        if (!event.isPrimary || event.button !== 0) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {MouseEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  AbstractPointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type MouseSensorProps = SensorProps<MouseSensorOptions>;\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: MouseSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: (\n        {nativeEvent: event}: MouseEvent,\n        {onActivation}: MouseSensorOptions\n      ) => {\n        if (event.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {TouchEvent} from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\nimport type {SensorProps} from '../types';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport type TouchSensorProps = SensorProps<TouchSensorOptions>;\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: (\n        {nativeEvent: event}: TouchEvent,\n        {onActivation}: TouchSensorOptions\n      ) => {\n        const {touches} = event;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events.move.name, noop, {\n      capture: false,\n      passive: false,\n    });\n\n    return function teardown() {\n      window.removeEventListener(events.move.name, noop);\n    };\n\n    // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n    function noop() {}\n  }\n}\n","import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n","import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {unstable_batchedUpdates} from 'react-dom';\nimport {\n  add,\n  getEventCoordinates,\n  Transform,\n  useLatestValue,\n  useIsomorphicLayoutEffect,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  PublicContext,\n  InternalContext,\n  PublicContextDescriptor,\n  InternalContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport {DndMonitorContext, DndMonitorState} from '../../hooks/monitor';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useDragOverlayMeasuring,\n  useDroppableMeasuring,\n  useScrollableAncestors,\n  useSensorSetup,\n  useClientRect,\n  useClientRects,\n  useWindowRect,\n  useRect,\n  useScrollOffsets,\n} from '../../hooks/utilities';\nimport type {\n  AutoScrollOptions,\n  DroppableMeasuring,\n  SyntheticListener,\n} from '../../hooks/utilities';\nimport {\n  KeyboardSensor,\n  PointerSensor,\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorHandler,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getRectDelta,\n  getFirstCollision,\n  rectIntersection,\n} from '../../utilities';\nimport {getTransformAgnosticClientRect} from '../../utilities/rect';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {Active, DataRef, Over} from '../../store/types';\nimport type {\n  ClientRect,\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  UniqueIdentifier,\n} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  screenReaderInstructions as defaultScreenReaderInstructions,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\nexport interface Props {\n  id?: string;\n  autoScroll?: boolean | AutoScrollOptions;\n  announcements?: Announcements;\n  cancelDrop?: CancelDrop;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  measuring?: MeasuringConfiguration;\n  modifiers?: Modifiers;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  sensors?: SensorDescriptor<any>[];\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\ninterface Measuring {\n  measure(node: HTMLElement): ClientRect;\n}\n\nexport interface DraggableMeasuring extends Measuring {}\n\nexport interface DragOverlayMeasuring extends Measuring {}\n\nexport interface MeasuringConfiguration {\n  draggable?: Partial<DraggableMeasuring>;\n  droppable?: Partial<DroppableMeasuring>;\n  dragOverlay?: Partial<DragOverlayMeasuring>;\n}\n\nexport interface CancelDropArguments extends DragEndEvent {}\n\nexport type CancelDrop = (\n  args: CancelDropArguments\n) => boolean | Promise<boolean>;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\nconst defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nconst defaultData: DataRef = {current: {}};\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nexport const DndContext = memo(function DndContext({\n  id,\n  autoScroll = true,\n  announcements,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  measuring,\n  modifiers,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [monitorState, setMonitorState] = useState<DndMonitorState>(() => ({\n    type: null,\n    event: null,\n  }));\n  const [isDragging, setIsDragging] = useState(false);\n  const {\n    draggable: {active: activeId, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const node = activeId ? draggableNodes[activeId] : null;\n  const activeRects = useRef<Active['rect']['current']>({\n    initial: null,\n    translated: null,\n  });\n  const active = useMemo<Active | null>(\n    () =>\n      activeId != null\n        ? {\n            id: activeId,\n            // It's possible for the active node to unmount while dragging\n            data: node?.data ?? defaultData,\n            rect: activeRects,\n          }\n        : null,\n    [activeId, node]\n  );\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useLatestValue(props, Object.values(props));\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const enabledDroppableContainers = useMemo(\n    () => droppableContainers.getEnabled(),\n    [droppableContainers]\n  );\n  const {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled,\n  } = useDroppableMeasuring(enabledDroppableContainers, {\n    dragging: isDragging,\n    dependencies: [translate.x, translate.y],\n    config: measuring?.droppable,\n  });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = activatorEvent\n    ? getEventCoordinates(activatorEvent)\n    : null;\n  const activeNodeRect = useRect(\n    activeNode,\n    measuring?.draggable?.measure ?? getTransformAgnosticClientRect\n  );\n  const containerNodeRect = useClientRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const sensorContext = useRef<SensorContext>({\n    active: null,\n    activeNode,\n    collisionRect: null,\n    collisions: null,\n    droppableRects,\n    draggableNodes,\n    draggingNode: null,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null,\n  });\n  const overNode = droppableContainers.getNodeFor(\n    sensorContext.current.over?.id\n  );\n  const dragOverlay = useDragOverlayMeasuring({\n    measure: measuring?.dragOverlay?.measure,\n  });\n\n  // Use the rect of the drag overlay if it is mounted\n  const draggingNode = dragOverlay.nodeRef.current ?? activeNode;\n  const draggingNodeRect = dragOverlay.rect ?? activeNodeRect;\n  const initialActiveNodeRectRef = useRef<ClientRect | null>(null);\n  const initialActiveNodeRect = initialActiveNodeRectRef.current;\n\n  // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n  const nodeRectDelta =\n    draggingNodeRect === activeNodeRect\n      ? getRectDelta(activeNodeRect, initialActiveNodeRect)\n      : defaultCoordinates;\n\n  // Get the window rect of the dragging node\n  const windowRect = useWindowRect(\n    draggingNode ? draggingNode.ownerDocument.defaultView : null\n  );\n\n  // Get scrollable ancestors of the dragging node\n  const scrollableAncestors = useScrollableAncestors(\n    activeId ? overNode ?? draggingNode : null\n  );\n  const scrollableAncestorRects = useClientRects(scrollableAncestors as any);\n\n  // Apply modifiers\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const pointerCoordinates = activationCoordinates\n    ? add(activationCoordinates, translate)\n    : null;\n\n  const scrollAdjustment = useScrollOffsets(scrollableAncestors);\n\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n\n  const collisionRect = draggingNodeRect\n    ? getAdjustedRect(draggingNodeRect, modifiedTranslate)\n    : null;\n\n  const collisions =\n    active && collisionRect\n      ? collisionDetection({\n          active,\n          collisionRect,\n          droppableContainers: enabledDroppableContainers,\n          pointerCoordinates,\n        })\n      : null;\n  const overId = getFirstCollision(collisions, 'id');\n  const [over, setOver] = useState<Over | null>(null);\n\n  const transform = adjustScale(\n    modifiedTranslate,\n    over?.rect ?? null,\n    activeNodeRect\n  );\n\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (!activeRef.current) {\n        return;\n      }\n\n      const activeNode = draggableNodes[activeRef.current];\n\n      if (!activeNode) {\n        return;\n      }\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: event.nativeEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onStart(initialCoordinates) {\n          const id = activeRef.current;\n\n          if (!id) {\n            return;\n          }\n\n          const node = draggableNodes[id];\n\n          if (!node) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n          const event: DragStartEvent = {\n            active: {id, data: node.data, rect: activeRects},\n          };\n\n          unstable_batchedUpdates(() => {\n            dispatch({\n              type: Action.DragStart,\n              initialCoordinates,\n              active: id,\n            });\n            setMonitorState({type: Action.DragStart, event});\n          });\n\n          onDragStart?.(event);\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      unstable_batchedUpdates(() => {\n        setActiveSensor(sensorInstance);\n        setActivatorEvent(event.nativeEvent);\n      });\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return async function handler() {\n          const {\n            active,\n            collisions,\n            over,\n            scrollAdjustedTranslate,\n          } = sensorContext.current;\n          let event: DragEndEvent | null = null;\n\n          if (active && scrollAdjustedTranslate) {\n            const {cancelDrop} = latestProps.current;\n\n            event = {\n              active: active,\n              collisions,\n              delta: scrollAdjustedTranslate,\n              over,\n            };\n\n            if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n              const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n              if (shouldCancel) {\n                type = Action.DragCancel;\n              }\n            }\n          }\n\n          activeRef.current = null;\n\n          unstable_batchedUpdates(() => {\n            dispatch({type});\n            setOver(null);\n            setIsDragging(false);\n            setActiveSensor(null);\n            setActivatorEvent(null);\n\n            if (event) {\n              setMonitorState({type, event});\n            }\n\n            if (event) {\n              const {onDragCancel, onDragEnd} = latestProps.current;\n              const handler =\n                type === Action.DragEnd ? onDragEnd : onDragCancel;\n\n              handler?.(event);\n            }\n          });\n        };\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorHandler,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n\n        if (\n          // No active draggable\n          activeRef.current !== null ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        if (handler(event, sensor.options) === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useSensorSetup(sensors);\n\n  useEffect(() => {\n    if (activeId != null) {\n      setIsDragging(true);\n    }\n  }, [activeId]);\n\n  useEffect(() => {\n    if (!active) {\n      initialActiveNodeRectRef.current = null;\n    }\n\n    if (active && activeNodeRect && !initialActiveNodeRectRef.current) {\n      initialActiveNodeRectRef.current = activeNodeRect;\n    }\n  }, [activeNodeRect, active]);\n\n  useEffect(\n    () => {\n      const {onDragMove} = latestProps.current;\n      const {active, collisions, over} = sensorContext.current;\n\n      if (!active) {\n        return;\n      }\n\n      const event: DragMoveEvent = {\n        active,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      setMonitorState({type: Action.DragMove, event});\n      onDragMove?.(event);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]\n  );\n\n  useEffect(\n    () => {\n      const {\n        active,\n        collisions,\n        droppableContainers,\n        scrollAdjustedTranslate,\n      } = sensorContext.current;\n\n      if (!active || !activeRef.current || !scrollAdjustedTranslate) {\n        return;\n      }\n\n      const {onDragOver} = latestProps.current;\n      const overContainer = droppableContainers.get(overId);\n      const over =\n        overContainer && overContainer.rect.current\n          ? {\n              id: overContainer.id,\n              rect: overContainer.rect.current,\n              data: overContainer.data,\n              disabled: overContainer.disabled,\n            }\n          : null;\n      const event: DragOverEvent = {\n        active,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        setOver(over);\n        setMonitorState({type: Action.DragOver, event});\n        onDragOver?.(event);\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [overId]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      active,\n      activeNode,\n      collisionRect,\n      collisions,\n      droppableRects,\n      draggableNodes,\n      draggingNode,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate: scrollAdjustedTranslate,\n    };\n\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: collisionRect,\n    };\n  }, [\n    active,\n    activeNode,\n    collisions,\n    collisionRect,\n    draggableNodes,\n    draggingNode,\n    draggingNodeRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    scrollAdjustedTranslate,\n  ]);\n\n  useAutoScroller({\n    ...getAutoScrollerOptions(),\n    draggingRect: collisionRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const publicContext = useMemo(() => {\n    const context: PublicContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activatorEvent,\n      collisions,\n      containerNodeRect,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      measureDroppableContainers,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      measuringScheduled,\n      windowRect,\n    };\n\n    return context;\n  }, [\n    active,\n    activeNode,\n    activeNodeRect,\n    activatorEvent,\n    collisions,\n    containerNodeRect,\n    dragOverlay,\n    draggableNodes,\n    droppableContainers,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    measuringScheduled,\n    windowRect,\n  ]);\n\n  const internalContext = useMemo(() => {\n    const context: InternalContextDescriptor = {\n      activatorEvent,\n      activators,\n      active,\n      activeNodeRect,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      dispatch,\n      draggableNodes,\n      over,\n      measureDroppableContainers,\n    };\n\n    return context;\n  }, [\n    activatorEvent,\n    activators,\n    active,\n    activeNodeRect,\n    dispatch,\n    draggableDescribedById,\n    draggableNodes,\n    over,\n    measureDroppableContainers,\n  ]);\n\n  return (\n    <DndMonitorContext.Provider value={monitorState}>\n      <InternalContext.Provider value={internalContext}>\n        <PublicContext.Provider value={publicContext}>\n          <ActiveDraggableContext.Provider value={transform}>\n            {children}\n          </ActiveDraggableContext.Provider>\n        </PublicContext.Provider>\n      </InternalContext.Provider>\n      <Accessibility\n        announcements={announcements}\n        hiddenTextDescribedById={draggableDescribedById}\n        screenReaderInstructions={screenReaderInstructions}\n      />\n    </DndMonitorContext.Provider>\n  );\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll =\n      activeSensor?.autoScrollEnabled === false;\n    const autoScrollGloballyDisabled =\n      typeof autoScroll === 'object'\n        ? autoScroll.enabled === false\n        : autoScroll === false;\n    const enabled =\n      !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return {\n        ...autoScroll,\n        enabled,\n      };\n    }\n\n    return {enabled};\n  }\n});\n","import {createContext, useContext, useMemo} from 'react';\nimport {\n  Transform,\n  useNodeRef,\n  useIsomorphicLayoutEffect,\n  useLatestValue,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext, Data} from '../store';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {useSyntheticListeners, SyntheticListenerMap} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: string;\n  data?: Data;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport interface DraggableAttributes {\n  role: string;\n  tabIndex: number;\n  'aria-pressed': boolean | undefined;\n  'aria-roledescription': string;\n  'aria-describedby': string;\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nconst ID_PREFIX = 'Droppable';\n\nexport function useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    activators,\n    activatorEvent,\n    active,\n    activeNodeRect,\n    ariaDescribedById,\n    draggableNodes,\n    over,\n  } = useContext(InternalContext);\n  const {role = defaultRole, roleDescription = 'draggable', tabIndex = 0} =\n    attributes ?? {};\n  const isDragging = active?.id === id;\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useLatestValue(data);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      draggableNodes[id] = {id, key, node, data: dataRef};\n\n      return () => {\n        const node = draggableNodes[id];\n\n        if (node && node.key === key) {\n          delete draggableNodes[id];\n        }\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  const memoizedAttributes: DraggableAttributes = useMemo(\n    () => ({\n      role,\n      tabIndex,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    }),\n    [role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]\n  );\n\n  return {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes: memoizedAttributes,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    transform,\n  };\n}\n","import {ContextType, useContext} from 'react';\nimport {PublicContext} from '../store';\n\nexport function useDndContext() {\n  return useContext(PublicContext);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof PublicContext>;\n","import {useCallback, useContext, useEffect, useRef} from 'react';\nimport {\n  useIsomorphicLayoutEffect,\n  useLatestValue,\n  useNodeRef,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext, Action, Data} from '../store';\nimport type {ClientRect, UniqueIdentifier} from '../types';\n\nimport {useResizeObserver} from './utilities';\n\ninterface ResizeObserverConfig {\n  /** Whether the ResizeObserver should be disabled entirely */\n  disabled?: boolean;\n  /** Resize events may affect the layout and position of other droppable containers.\n   * Specify an array of `UniqueIdentifier` of droppable containers that should also be re-measured\n   * when this droppable container resizes. Specifying an empty array re-measures all droppable containers.\n   */\n  updateMeasurementsFor?: UniqueIdentifier[];\n  /** Represents the debounce timeout between when resize events are observed and when elements are re-measured */\n  timeout?: number;\n}\n\nexport interface UseDroppableArguments {\n  id: UniqueIdentifier;\n  disabled?: boolean;\n  data?: Data;\n  resizeObserverConfig?: ResizeObserverConfig;\n}\n\nconst ID_PREFIX = 'Droppable';\n\nconst defaultResizeObserverConfig = {\n  timeout: 25,\n};\n\nexport function useDroppable({\n  data,\n  disabled = false,\n  id,\n  resizeObserverConfig,\n}: UseDroppableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {active, dispatch, over, measureDroppableContainers} = useContext(\n    InternalContext\n  );\n  const resizeObserverConnected = useRef(false);\n  const rect = useRef<ClientRect | null>(null);\n  const callbackId = useRef<NodeJS.Timeout | null>(null);\n  const {\n    disabled: resizeObserverDisabled,\n    updateMeasurementsFor,\n    timeout: resizeObserverTimeout,\n  } = {\n    ...defaultResizeObserverConfig,\n    ...resizeObserverConfig,\n  };\n  const ids = useLatestValue(updateMeasurementsFor ?? id);\n  const handleResize = useCallback(\n    () => {\n      if (!resizeObserverConnected.current) {\n        // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,\n        // assuming the element is rendered and displayed.\n        resizeObserverConnected.current = true;\n        return;\n      }\n\n      if (callbackId.current != null) {\n        clearTimeout(callbackId.current);\n      }\n\n      callbackId.current = setTimeout(() => {\n        measureDroppableContainers(\n          typeof ids.current === 'string' ? [ids.current] : ids.current\n        );\n        callbackId.current = null;\n      }, resizeObserverTimeout);\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [resizeObserverTimeout]\n  );\n  const resizeObserver = useResizeObserver({\n    onResize: handleResize,\n    disabled: resizeObserverDisabled || !active,\n  });\n  const handleNodeChange = useCallback(\n    (newElement: HTMLElement | null, previousElement: HTMLElement | null) => {\n      if (!resizeObserver) {\n        return;\n      }\n\n      if (previousElement) {\n        resizeObserver.unobserve(previousElement);\n        resizeObserverConnected.current = false;\n      }\n\n      if (newElement) {\n        resizeObserver.observe(newElement);\n      }\n    },\n    [resizeObserver]\n  );\n  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);\n  const dataRef = useLatestValue(data);\n\n  useEffect(() => {\n    if (!resizeObserver || !nodeRef.current) {\n      return;\n    }\n\n    resizeObserver.disconnect();\n    resizeObserverConnected.current = false;\n    resizeObserver.observe(nodeRef.current);\n  }, [nodeRef, resizeObserver]);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          key,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          key,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(\n    () => {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        key,\n        disabled,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  return {\n    active,\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n","import {useState} from 'react';\nimport {CSS, Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {UniqueIdentifier} from '../../../types';\nimport type {DraggableNodes} from '../../../store';\nimport {getMeasurableNode} from '../../../utilities/nodes';\nimport {getTransformAgnosticClientRect} from '../../../utilities/rect';\n\nexport interface DropAnimation {\n  duration: number;\n  easing: string;\n  dragSourceOpacity?: number;\n}\n\ninterface Arguments {\n  activeId: UniqueIdentifier | null;\n  animate: boolean;\n  adjustScale: boolean;\n  draggableNodes: DraggableNodes;\n  duration: DropAnimation['duration'] | undefined;\n  easing: DropAnimation['easing'] | undefined;\n  dragSourceOpacity: DropAnimation['dragSourceOpacity'] | undefined;\n  node: HTMLElement | null;\n  transform: Transform | undefined;\n}\n\nexport const defaultDropAnimation: DropAnimation = {\n  duration: 250,\n  easing: 'ease',\n  dragSourceOpacity: 0,\n};\n\nexport function useDropAnimation({\n  animate,\n  adjustScale,\n  activeId,\n  draggableNodes,\n  duration,\n  dragSourceOpacity,\n  easing,\n  node,\n  transform,\n}: Arguments) {\n  const [dropAnimationComplete, setDropAnimationComplete] = useState(false);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!animate || !activeId || !easing || !duration) {\n      if (animate) {\n        setDropAnimationComplete(true);\n      }\n\n      return;\n    }\n\n    const finalNode = draggableNodes[activeId]?.node.current;\n\n    if (transform && node && finalNode && finalNode.parentNode !== null) {\n      const fromNode = getMeasurableNode(node);\n\n      if (fromNode) {\n        const from = fromNode.getBoundingClientRect();\n        const to = getTransformAgnosticClientRect(finalNode);\n\n        const delta = {\n          x: from.left - to.left,\n          y: from.top - to.top,\n        };\n\n        if (Math.abs(delta.x) || Math.abs(delta.y)) {\n          const scaleDelta = {\n            scaleX: adjustScale\n              ? (to.width * transform.scaleX) / from.width\n              : 1,\n            scaleY: adjustScale\n              ? (to.height * transform.scaleY) / from.height\n              : 1,\n          };\n          const finalTransform = CSS.Transform.toString({\n            x: transform.x - delta.x,\n            y: transform.y - delta.y,\n            ...scaleDelta,\n          });\n          const originalOpacity = finalNode.style.opacity;\n\n          if (dragSourceOpacity != null) {\n            finalNode.style.opacity = `${dragSourceOpacity}`;\n          }\n\n          const nodeAnimation = node.animate(\n            [\n              {\n                transform: CSS.Transform.toString(transform),\n              },\n              {\n                transform: finalTransform,\n              },\n            ],\n            {\n              easing,\n              duration,\n            }\n          );\n\n          nodeAnimation.onfinish = () => {\n            node.style.display = 'none';\n\n            setDropAnimationComplete(true);\n\n            if (finalNode && dragSourceOpacity != null) {\n              finalNode.style.opacity = originalOpacity;\n            }\n          };\n          return;\n        }\n      }\n    }\n\n    setDropAnimationComplete(true);\n  }, [\n    animate,\n    activeId,\n    adjustScale,\n    draggableNodes,\n    duration,\n    easing,\n    dragSourceOpacity,\n    node,\n    transform,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dropAnimationComplete) {\n      setDropAnimationComplete(false);\n    }\n  }, [dropAnimationComplete]);\n\n  return dropAnimationComplete;\n}\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {CSS, isKeyboardEvent, Transform, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {InternalContext, defaultInternalContext} from '../../store';\nimport {getRelativeTransformOrigin} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport {ActiveDraggableContext} from '../DndContext';\nimport {useDndContext} from '../../hooks';\nimport type {ClientRect} from '../../types';\nimport {useDropAnimation, defaultDropAnimation, DropAnimation} from './hooks';\n\ntype TransitionGetter = (\n  activatorEvent: Event | null\n) => React.CSSProperties['transition'] | undefined;\n\nexport interface Props {\n  adjustScale?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  dropAnimation?: DropAnimation | null | undefined;\n  style?: React.CSSProperties;\n  transition?: string | TransitionGetter;\n  modifiers?: Modifiers;\n  wrapperElement?: keyof JSX.IntrinsicElements;\n  zIndex?: number;\n}\n\nconst defaultTransform: Transform = {\n  x: 0,\n  y: 0,\n  scaleX: 1,\n  scaleY: 1,\n};\n\nconst defaultTransition: TransitionGetter = (activatorEvent) => {\n  const isKeyboardActivator = isKeyboardEvent(activatorEvent);\n\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nexport const DragOverlay = React.memo(\n  ({\n    adjustScale = false,\n    children,\n    dropAnimation = defaultDropAnimation,\n    style: styleProp,\n    transition = defaultTransition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999,\n  }: Props) => {\n    const {\n      active,\n      activeNodeRect,\n      containerNodeRect,\n      draggableNodes,\n      activatorEvent,\n      over,\n      dragOverlay,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    } = useDndContext();\n    const transform = useContext(ActiveDraggableContext);\n    const modifiedTransform = applyModifiers(modifiers, {\n      activatorEvent,\n      active,\n      activeNodeRect,\n      containerNodeRect,\n      draggingNodeRect: dragOverlay.rect,\n      over,\n      overlayNodeRect: dragOverlay.rect,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      transform,\n      windowRect,\n    });\n    const isDragging = active !== null;\n    const finalTransform = adjustScale\n      ? modifiedTransform\n      : {\n          ...modifiedTransform,\n          scaleX: 1,\n          scaleY: 1,\n        };\n\n    const initialRect = useLazyMemo<ClientRect | null>(\n      (previousValue) => {\n        if (isDragging) {\n          if (previousValue) {\n            return previousValue;\n          }\n\n          if (!activeNodeRect) {\n            return null;\n          }\n\n          return {\n            ...activeNodeRect,\n          };\n        }\n\n        return null;\n      },\n      [isDragging, activeNodeRect]\n    );\n    const style: React.CSSProperties | undefined = initialRect\n      ? {\n          position: 'fixed',\n          width: initialRect.width,\n          height: initialRect.height,\n          top: initialRect.top,\n          left: initialRect.left,\n          zIndex,\n          transform: CSS.Transform.toString(finalTransform),\n          touchAction: 'none',\n          transformOrigin:\n            adjustScale && activatorEvent\n              ? getRelativeTransformOrigin(\n                  activatorEvent as MouseEvent | KeyboardEvent | TouchEvent,\n                  initialRect\n                )\n              : undefined,\n          transition:\n            typeof transition === 'function'\n              ? transition(activatorEvent)\n              : transition,\n          ...styleProp,\n        }\n      : undefined;\n    const attributes = isDragging\n      ? {\n          style,\n          children,\n          className,\n          transform: finalTransform,\n        }\n      : undefined;\n    const attributesSnapshot = useRef(attributes);\n    const derivedAttributes = attributes ?? attributesSnapshot.current;\n    const {children: finalChildren, transform: _, ...otherAttributes} =\n      derivedAttributes ?? {};\n    const prevActiveId = useRef(active?.id ?? null);\n    const dropAnimationComplete = useDropAnimation({\n      animate: Boolean(dropAnimation && prevActiveId.current && !active),\n      adjustScale,\n      activeId: prevActiveId.current,\n      draggableNodes,\n      duration: dropAnimation?.duration,\n      easing: dropAnimation?.easing,\n      dragSourceOpacity: dropAnimation?.dragSourceOpacity,\n      node: dragOverlay.nodeRef.current,\n      transform: attributesSnapshot.current?.transform,\n    });\n    const shouldRender = Boolean(\n      finalChildren && (children || (dropAnimation && !dropAnimationComplete))\n    );\n\n    useEffect(() => {\n      if (active?.id !== prevActiveId.current) {\n        prevActiveId.current = active?.id ?? null;\n      }\n\n      if (active && attributesSnapshot.current !== attributes) {\n        attributesSnapshot.current = attributes;\n      }\n    }, [active, attributes]);\n\n    useEffect(() => {\n      if (dropAnimationComplete) {\n        attributesSnapshot.current = undefined;\n      }\n    }, [dropAnimationComplete]);\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    return (\n      <InternalContext.Provider value={defaultInternalContext}>\n        <ActiveDraggableContext.Provider value={defaultTransform}>\n          {React.createElement(\n            wrapperElement,\n            {\n              ...otherAttributes,\n              ref: dragOverlay.setRef,\n            },\n            finalChildren\n          )}\n        </ActiveDraggableContext.Provider>\n      </InternalContext.Provider>\n    );\n  }\n);\n"],"names":["screenReaderInstructions","draggable","defaultAnnouncements","onDragStart","id","onDragOver","overId","onDragEnd","onDragCancel","Action","noop","_args","DroppableContainersMap","Map","get","undefined","toArray","Array","from","values","getEnabled","filter","disabled","getNodeFor","node","current","defaultPublicContext","activatorEvent","active","activeNode","activeNodeRect","collisions","containerNodeRect","draggableNodes","droppableRects","droppableContainers","over","dragOverlay","nodeRef","rect","setRef","scrollableAncestors","scrollableAncestorRects","measureDroppableContainers","windowRect","measuringScheduled","defaultInternalContext","activators","ariaDescribedById","dispatch","InternalContext","createContext","PublicContext","getInitialState","initialCoordinates","x","y","nodes","translate","droppable","containers","reducer","state","action","type","DragStart","DragMove","coordinates","DragEnd","DragCancel","RegisterDroppable","element","set","SetDroppableDisabled","key","UnregisterDroppable","delete","DndMonitorContext","event","useDndMonitor","onDragMove","monitorState","useContext","previousMonitorState","useRef","useEffect","DragOver","Accessibility","announcements","hiddenTextDescribedById","announce","announcement","useAnnouncement","liveRegionId","useUniqueId","mounted","setMounted","useState","useMemo","createPortal","React","HiddenText","value","LiveRegion","document","body","defaultCoordinates","Object","freeze","distanceBetween","p1","p2","Math","sqrt","pow","getRelativeTransformOrigin","eventCoordinates","getEventCoordinates","transformOrigin","left","width","top","height","sortCollisionsAsc","data","a","b","sortCollisionsDesc","cornersOfRectangle","getFirstCollision","property","length","firstCollision","centerOfRectangle","closestCenter","collisionRect","centerRect","droppableContainer","distBetween","push","sort","closestCorners","corners","rectCorners","distances","reduce","accumulator","corner","index","effectiveDistance","Number","toFixed","getIntersectionRatio","entry","target","max","right","min","bottom","targetArea","entryArea","intersectionArea","intersectionRatio","rectIntersection","isPointWithinRect","point","pointerWithin","pointerCoordinates","adjustScale","transform","rect1","rect2","scaleX","scaleY","getRectDelta","createRectAdjustmentFn","modifier","adjustClientRect","adjustments","acc","adjustment","getAdjustedRect","inverseTransform","ta","sx","sy","dx","dy","startsWith","slice","split","parseFloat","indexOf","w","h","defaultOptions","ignoreTransform","getClientRect","options","getBoundingClientRect","getComputedStyle","getWindow","getTransformAgnosticClientRect","getWindowClientRect","innerWidth","innerHeight","isFixed","computedStyle","position","isScrollable","overflowRegex","properties","find","test","getScrollableAncestors","scrollParents","findScrollableAncestors","isDocument","scrollingElement","includes","isHTMLElement","isSVGElement","parentNode","getScrollableElement","canUseDOM","isWindow","isNode","getOwnerDocument","window","getScrollXCoordinate","scrollX","scrollLeft","getScrollYCoordinate","scrollY","scrollTop","getScrollCoordinates","Direction","getScrollPosition","scrollingContainer","minScroll","maxScroll","scrollWidth","clientWidth","scrollHeight","clientHeight","isTop","isLeft","isBottom","isRight","isDocumentScrollingElement","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","finalScrollContainerRect","direction","speed","threshold","Backward","abs","Forward","getScrollElementRect","getScrollOffsets","add","getScrollXOffset","getScrollYOffset","Rect","constructor","scrollOffsets","axis","keys","getScrollOffset","defineProperty","currentOffsets","scrollOffsetsDeltla","enumerable","AutoScrollActivator","TraversalOrder","useAutoScroller","activator","Pointer","canScroll","draggingRect","enabled","interval","order","TreeOrder","setAutoScrollInterval","clearAutoScrollInterval","useInterval","scrollSpeed","DraggableRect","scrollDirection","scrollContainerRef","autoScroll","useCallback","scrollBy","sortedScrollableAncestors","reverse","JSON","stringify","useCachedNode","draggableNode","useLazyMemo","cachedNode","useCombineActivators","sensors","getSyntheticHandler","sensor","Sensor","sensorActivators","map","eventName","handler","MeasuringStrategy","MeasuringFrequency","defaultValue","defaultConfig","measure","strategy","WhileDragging","frequency","Optimized","useDroppableMeasuring","dragging","dependencies","config","containerIdsScheduledForMeasurement","setContainerIdsScheduledForMeasurement","containersRef","ids","concat","timeoutId","isDisabled","previousValue","container","requestAnimationFrame","setTimeout","Always","BeforeDragging","useResizeObserver","onResize","resizeObserver","ResizeObserver","disconnect","useScrollOffsets","elements","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","previousElements","cleanup","entries","scrollableElement","addEventListener","passive","forEach","removeEventListener","useScrollableAncestors","previousNode","ancestors","useSensorSetup","teardownFns","setup","teardown","useSyntheticListeners","listeners","useClientRect","createUseRectFn","useClientRects","createUseRectsFn","useRect","getRect","forceRecompute","previousElement","useRects","useWindowRect","getMeasurableNode","children","firstChild","useDragOverlayMeasuring","setRect","handleResize","newRect","handleNodeChange","observe","useNodeRef","useSensor","useSensors","Listeners","removeAll","listener","getEventListenerTarget","EventTarget","hasExceededDistance","delta","measurement","EventName","preventDefault","stopPropagation","KeyboardCode","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","props","autoScrollEnabled","windowListeners","handleKeyDown","bind","handleCancel","attach","handleStart","Resize","VisibilityChange","Keydown","onStart","Error","isKeyboardEvent","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","newCoordinates","scrollDelta","coordinatesDelta","getCoordinatesDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","canFullyScrollToNewCoordinates","behavior","handleMove","getAdjustedCoordinates","onMove","onEnd","detach","onCancel","onActivation","nativeEvent","isDistanceConstraint","constraint","Boolean","isDelayConstraint","AbstractPointerSensor","events","listenerTarget","activated","documentListeners","handleKeydown","removeTextSelection","activationConstraint","move","name","ContextMenu","delay","clearTimeout","Click","capture","SelectionChange","tolerance","distance","cancelable","getSelection","removeAllRanges","PointerSensor","isPrimary","button","MouseButton","MouseSensor","RightClick","TouchSensor","touches","applyModifiers","modifiers","args","defaultSensors","defaultData","ActiveDraggableContext","DndContext","memo","collisionDetection","measuring","defaultScreenReaderInstructions","store","useReducer","setMonitorState","isDragging","setIsDragging","activeId","activeRects","initial","translated","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","useLatestValue","draggableDescribedById","enabledDroppableContainers","activationCoordinates","parentElement","sensorContext","draggingNode","draggingNodeRect","scrollAdjustedTranslate","overNode","initialActiveNodeRectRef","initialActiveNodeRect","nodeRectDelta","ownerDocument","defaultView","modifiedTranslate","overlayNodeRect","scrollAdjustment","setOver","instantiateSensor","sensorInstance","unstable_batchedUpdates","createHandler","cancelDrop","shouldCancel","Promise","resolve","bindActivatorToSensorInstantiator","dndKit","defaultPrevented","capturedBy","overContainer","useIsomorphicLayoutEffect","getAutoScrollerOptions","publicContext","internalContext","Provider","activeSensorDisablesAutoscroll","autoScrollGloballyDisabled","NullContext","defaultRole","ID_PREFIX","useDraggable","attributes","role","roleDescription","tabIndex","setNodeRef","dataRef","memoizedAttributes","useDndContext","defaultResizeObserverConfig","timeout","useDroppable","resizeObserverConfig","resizeObserverConnected","callbackId","resizeObserverDisabled","updateMeasurementsFor","resizeObserverTimeout","newElement","unobserve","isOver","defaultDropAnimation","duration","easing","dragSourceOpacity","useDropAnimation","animate","dropAnimationComplete","setDropAnimationComplete","finalNode","fromNode","to","scaleDelta","finalTransform","CSS","Transform","toString","originalOpacity","style","opacity","nodeAnimation","onfinish","display","defaultTransform","defaultTransition","isKeyboardActivator","DragOverlay","dropAnimation","styleProp","transition","wrapperElement","className","zIndex","modifiedTransform","initialRect","touchAction","attributesSnapshot","derivedAttributes","finalChildren","_","otherAttributes","prevActiveId","shouldRender","createElement","ref"],"mappings":"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"}